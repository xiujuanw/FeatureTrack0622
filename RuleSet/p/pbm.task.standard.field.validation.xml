<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;pbm.task.standard.field.validation&quot;" recordid="pbm.task.standard.field.validation">
    <id type="string">pbm.task.standard.field.validation</id>
    <name type="string">PM task standard field validation</name>
    <tablename sctype="array">
      <tablename sctype="string">rootcausetask</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">11</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Category</ruleDesc>
        <condition type="operator">not  (same(category in $L.file, NULL))</condition>
        <conditionDesc type="string">( category in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Category"&gt;category&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Category (when ( category in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"pop-up","fieldName":"category","toTable":"pbmTaskCat","toField":"name","filter":"active=true","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">8</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Impact</ruleDesc>
        <condition type="operator">not  (same(initial.impact in $L.file, NULL))</condition>
        <conditionDesc type="string">( initial.impact in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Impact"&gt;initial.impact&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Impact (when ( initial.impact in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Global List","fieldName":"initial.impact","toGlobal":"Impact","manualList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">9</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Urgency</ruleDesc>
        <condition type="operator">not  (same(severity in $L.file, NULL))</condition>
        <conditionDesc type="string">( severity in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Urgency"&gt;severity&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Urgency (when ( severity in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Global List","fieldName":"severity","toGlobal":"Urgency","manualList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">10</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Priority Code</ruleDesc>
        <condition type="operator">not  (same(priority.code in $L.file, NULL))</condition>
        <conditionDesc type="string">( priority.code in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Priority Code"&gt;priority.code&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Priority Code (when ( priority.code in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Global List","fieldName":"priority.code","toGlobal":"Calculated Priority","manualList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">6</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Assignment Group</ruleDesc>
        <condition type="operator">not  (same(assignment in $L.file, NULL))</condition>
        <conditionDesc type="string">( assignment in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Assignment Group"&gt;assignment&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Assignment Group (when ( assignment in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"pop-up","fieldName":"assignment","toTable":"assignment","toField":"name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">5</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Assignee</ruleDesc>
        <condition type="operator">not  (same(assignee.name in $L.file, NULL))</condition>
        <conditionDesc type="string">( assignee.name in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Assignee"&gt;assignee.name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Assignee (when ( assignee.name in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"pop-up","fieldName":"assignee.name","toTable":"operator","toField":"name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">7</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Primary CI</ruleDesc>
        <condition type="operator">not  (same(logical.name in $L.file, NULL))</condition>
        <conditionDesc type="string">( logical.name in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Primary CI"&gt;logical.name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Primary CI (when ( logical.name in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"pop-up","fieldName":"logical.name","toTable":"device","toField":"logical.name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">12</ruleId>
        <isGroup type="boolean">true</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML type="string">&lt;ruleGroup/&gt;</ruleXML>
        <ruleDesc type="string">Validate Status</ruleDesc>
        <condition type="operator">not  (same(rcStatus in $L.file, NULL))</condition>
        <conditionDesc type="string">( rcStatus in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Status"&gt;rcStatus&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">[Validate Status (when ( rcStatus in CurrentRecord != NULL))]</fullDesc>
        <level type="decimal">0</level>
        <type type="string">ruleGroup</type>
        <ruleJSON NullValue="1" type="string"/>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">13</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">12</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Status</ruleDesc>
        <condition type="operator">current.phase in $L.file="Waiting"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "Waiting")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;Waiting&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Status (when ( current.phase in CurrentRecord = "Waiting"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Manual List","fieldName":"rcStatus","toGlobal":"null","manualList":["Planned"]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">14</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">12</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Status</ruleDesc>
        <condition type="operator">current.phase in $L.file="Active" and priority.code in $L.file&lt;"3"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "Active" AND priority.code in CurrentRecord &lt; "3")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;Active&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Priority Code"&gt;priority.code&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;lt&lt;/Comparison&gt;&lt;Value dataType="string"&gt;3&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Status (when ( current.phase in CurrentRecord = "Active" AND priority.code in CurrentRecord &lt; "3"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Manual List","fieldName":"rcStatus","toGlobal":"null","manualList":["Ready","Assigned","Work In Progress","Pending","Pending Review"]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">15</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">12</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Status</ruleDesc>
        <condition type="operator">current.phase in $L.file="Active" and priority.code in $L.file&gt;"2"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "Active" AND priority.code in CurrentRecord &gt; "2")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;Active&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Priority Code"&gt;priority.code&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;gt&lt;/Comparison&gt;&lt;Value dataType="string"&gt;2&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Status (when ( current.phase in CurrentRecord = "Active" AND priority.code in CurrentRecord &gt; "2"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Manual List","fieldName":"rcStatus","toGlobal":"null","manualList":["Ready","Assigned","Work In Progress","Pending"]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">16</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">12</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Status</ruleDesc>
        <condition type="operator">current.phase in $L.file="Review"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "Review")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;Review&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Status (when ( current.phase in CurrentRecord = "Review"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Manual List","fieldName":"rcStatus","toGlobal":"null","manualList":["Pending Review","Work In Progress"]}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">16</lastRuleId>
    <isAction NullValue="1" type="boolean"/>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">01/08/15 16:22:57</sysmodtime>
    <sysmodcount type="decimal">8</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
