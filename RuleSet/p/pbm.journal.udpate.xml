<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;pbm.journal.udpate&quot;" recordid="pbm.journal.udpate">
    <id type="string">pbm.journal.udpate</id>
    <name type="string">Journal Update for Problem and Problem Task</name>
    <tablename sctype="array">
      <tablename sctype="string">rootcause</tablename>
      <tablename sctype="string">rootcausetask</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">1</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Run JavaScript Validation</ruleDesc>
        <condition type="operator">journal.pm in $G.rc.global.environment and not  (null($rc.update))</condition>
        <conditionDesc type="string">( Expression: journal.pm in $G.rc.global.environment and not null($rc.update))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"journal.pm in $G.rc.global.environment and not null($rc.update)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Run JavaScript Validation (when ( Expression: journal.pm in $G.rc.global.environment and not null($rc.update)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">JSValidate</type>
        <ruleJSON type="string">{"type":"JSValidate","script":"var $ = lib.c.$;\u000avar file = vars.$L_file;\u000avar update = vars.$rc_update;\u000avar _null = system.functions._null;\u000avar acttype = vars.$G_bg_activity_type\u000avar acttext = vars.$G_bg_activity_text\u000avar bg = vars.$G_bg\u000aif (bg &amp;&amp; !_null(acttype)) {\u000a    if (_null(update)) {\u000a        update = acttext;\u000a    }\u000a    if (_null(update)) {\u000a        update = [\"External Update\"];\u000a    }\u000a    if (_null(acttype)) {\u000a        vars.$pm_activity = \"External Update\";\u000a    }\u000a}\u000avars.$rc_update[0] = update[0];\u000a$(\"#problemService\").journalUpdate(file, update);"}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">2</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Run JavaScript Validation</ruleDesc>
        <condition type="operator">journal.pm in $G.rc.global.environment and not  (null($pmt.update))</condition>
        <conditionDesc type="string">( Expression: journal.pm in $G.rc.global.environment and not null($pmt.update))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"journal.pm in $G.rc.global.environment and not null($pmt.update)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Run JavaScript Validation (when ( Expression: journal.pm in $G.rc.global.environment and not null($pmt.update)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">JSValidate</type>
        <ruleJSON type="string">{"type":"JSValidate","script":"var $ = lib.c.$;\u000avar file = vars.$L_file;\u000avar update = vars.$pmt_update;\u000avar _null = system.functions._null;\u000avar acttype = vars.$G_bg_activity_type\u000avar acttext = vars.$G_bg_activity_text\u000avar bg = vars.$G_bg\u000aif (bg &amp;&amp; !_null(acttype)) {\u000a    if (_null(update)) {\u000a        update = acttext;\u000a    }\u000a    if (_null(update)) {\u000a        update = [\"External Update\"];\u000a    }\u000a    if (_null(acttype)) {\u000a        vars.$pmt_activity = \"External Update\";\u000a    }\u000a}\u000avars.$pmt_update[0] = update[0];\u000a$(\"#problemService\").journalUpdate(file, update);"}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">2</lastRuleId>
    <isAction NullValue="1" type="boolean"/>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">12/24/14 16:19:25</sysmodtime>
    <sysmodcount type="decimal">5</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
