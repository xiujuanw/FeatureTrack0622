<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;featuretracker.changeRelease&quot;" recordid="featuretracker.changeRelease">
    <id type="string">featuretracker.changeRelease</id>
    <name type="string">featuretracker.changeRelease</name>
    <tablename sctype="array">
      <tablename sctype="string">featuretracker</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">2</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Confirm Change of Release ID</ruleDesc>
        <condition type="operator">not  (null(release in $L.file.save)) and not  (same(release in $L.file, release in $L.file.save))</condition>
        <conditionDesc type="string">( Expression: not null(release in $L.file.save) and not same(release in $L.file, release in $L.file.save))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(release in $L.file.save) and not same(release in $L.file, release in $L.file.save)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Confirm Change of Release ID (when ( Expression: not null(release in $L.file.save) and not same(release in $L.file, release in $L.file.save)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">popupMessageBox</type>
        <ruleJSON type="string">{"type":"popupMessageBox","popupMessage":"Are you sure to change the release number? All related objects will be linked with the new release number. Please note: After the change some objects might be linked to different releases. Ensure your release is still consistent. Do you want to continue?","popupType":1,"okLevel":1,"okType":1,"yesnoType":1,"yesnocancelType":1,"messageNumber":"","messageScript":""}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">1</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Run JavaScript to change the release ID in a feature</ruleDesc>
        <condition type="operator">not  (null(release in $L.file.save)) and not  (same(release in $L.file, release in $L.file.save))</condition>
        <conditionDesc type="string">( Expression: not null(release in $L.file.save) and not same(release in $L.file, release in $L.file.save))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(release in $L.file.save) and not same(release in $L.file, release in $L.file.save)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Run JavaScript to change the release ID in a feature (when ( Expression: not null(release in $L.file.save) and not same(release in $L.file, release in $L.file.save)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">JSValidate</type>
        <ruleJSON type="string">{"type":"JSValidate","script":"lib.FeatureTracker.changeRelease(record.id, record.release);\nlib.FeatureTracker.getlinkedObjects(record.id);"}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">3</lastRuleId>
    <isAction type="boolean">true</isAction>
    <sysmoduser type="string">zhiqiang.jiang</sysmoduser>
    <sysmodtime type="dateTime">07/29/20 08:49:07</sysmodtime>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysrestricted type="boolean">false</sysrestricted>
  </record>
</recordset>
