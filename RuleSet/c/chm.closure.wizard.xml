<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;chm.closure.wizard&quot;" recordid="chm.closure.wizard">
    <id type="string">chm.closure.wizard</id>
    <name type="string">Chm Closure Wizard</name>
    <tablename sctype="array">
      <tablename sctype="string">cm3r</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">4</ruleId>
        <isGroup type="boolean">true</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML type="string">&lt;ruleGroup/&gt;</ruleXML>
        <ruleDesc type="string">Closure Wizard</ruleDesc>
        <condition type="operator">$G.bg="true"</condition>
        <conditionDesc type="string">( $G.bg = "true")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.bg"&gt;$G.bg&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">[Closure Wizard (when ( $G.bg = "true"))]</fullDesc>
        <level type="decimal">0</level>
        <type type="string">ruleGroup</type>
        <ruleJSON NullValue="1" type="string"/>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">6</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">4</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Closure Code</ruleDesc>
        <condition type="operator">current.phase in $L.file="Closure"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "Closure")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;Closure&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Closure Code (when ( current.phase in CurrentRecord = "Closure"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Global List","fieldName":"completion.code","toGlobal":"Change Closure Codes","manualList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">5</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">4</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Closure Code</ruleDesc>
        <condition type="operator">current.phase in $L.file="Abandoned"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "Abandoned")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;Abandoned&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Closure Code (when ( current.phase in CurrentRecord = "Abandoned"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Global List","fieldName":"completion.code","toGlobal":"Change Abandon Closure Codes","manualList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">3</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">4</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Closure Comments;Closure Code are Mandatory</ruleDesc>
        <condition type="operator">$G.bg="true"</condition>
        <conditionDesc type="string">( $G.bg = "true")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.bg"&gt;$G.bg&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Closure Comments;Closure Code are Mandatory (when ( $G.bg = "true"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">mandatoryFields</type>
        <ruleJSON type="string">{"type":"mandatoryFields","fieldList":[{"fieldName":"closing.comments","default":""},{"fieldName":"completion.code","default":""}],"messageType":"pop-up","validateAll":"true"}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">2</ruleId>
        <isGroup type="boolean">true</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML type="string">&lt;ruleGroup/&gt;</ruleXML>
        <ruleDesc type="string">Closure Wizard</ruleDesc>
        <condition type="operator">$G.bg="false"</condition>
        <conditionDesc type="string">( $G.bg = "false")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.bg"&gt;$G.bg&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;false&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">[Closure Wizard (when ( $G.bg = "false"))]</fullDesc>
        <level type="decimal">0</level>
        <type type="string">ruleGroup</type>
        <ruleJSON NullValue="1" type="string"/>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">1</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">2</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Run the "CHM Closure" wizard.</ruleDesc>
        <condition type="operator">current.phase in $L.file.save~="Closure" and current.phase in $L.file.save~="Abandoned"</condition>
        <conditionDesc type="string">( Expression: current.phase in $L.file.save~="Closure" and current.phase in $L.file.save~="Abandoned")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"current.phase in $L.file.save~=&amp;quot;Closure&amp;quot; and current.phase in $L.file.save~=&amp;quot;Abandoned&amp;quot;"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Run the "CHM Closure" wizard. (when ( Expression: current.phase in $L.file.save~="Closure" and current.phase in $L.file.save~="Abandoned"))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">callWizard</type>
        <ruleJSON type="string">{"type":"callWizard","wizardName":"CHM Closure"}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">6</lastRuleId>
    <isAction NullValue="1" type="boolean"/>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">01/08/15 16:22:55</sysmodtime>
    <sysmodcount type="decimal">9</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
