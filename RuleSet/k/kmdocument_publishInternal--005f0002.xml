<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;kmdocument_publishInternal&quot;" recordid="kmdocument_publishInternal">
    <id type="string">kmdocument_publishInternal</id>
    <name type="string">Publish a new Knowledge Document Internally</name>
    <tablename sctype="array">
      <tablename sctype="string">kmdocument</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">2</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Title is Mandatory</ruleDesc>
        <condition type="string">true</condition>
        <conditionDesc NullValue="1" type="string"/>
        <conditionXML NullValue="1" type="string"/>
        <fullDesc type="string">Title is Mandatory</fullDesc>
        <level type="decimal">0</level>
        <type type="string">mandatoryFields</type>
        <ruleJSON type="string">{"type":"mandatoryFields","fieldList":[{"fieldName":"title","default":""}]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">3</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate category information for internal publishing</ruleDesc>
        <condition type="string">true</condition>
        <conditionDesc NullValue="1" type="string"/>
        <conditionXML NullValue="1" type="string"/>
        <fullDesc type="string">Validate category information for internal publishing</fullDesc>
        <level type="decimal">0</level>
        <type type="string">JSValidate</type>
        <ruleJSON type="string">{"type":"JSValidate","script":"// Use Knowledge Management validations to validate the category values\u000avar valid = system.library.KMDocStatusChanges.checkValidity(record, \"internal\");\u000aif ( valid == false )\u000a{\u000a\u0009//  If not valid, return an invalid return code.  the checkValidity routine handles messages.\u000a\u0009returnCode = 1;\u000a}else{\u000a  system.library.KMUsageHistory.approveInternal( record. id);\u000a}"}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">4</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Run JavaScript Validation - Legal Right</ruleDesc>
        <condition type="string">true</condition>
        <conditionDesc NullValue="1" type="string"/>
        <conditionXML NullValue="1" type="string"/>
        <fullDesc type="string">Run JavaScript Validation - Legal Right</fullDesc>
        <level type="decimal">0</level>
        <type type="string">JSValidate</type>
        <ruleJSON type="string">{"type":"JSValidate","script":"if ( record.legal_right != true)\u000d\u000a{\u000d\u000a      returnCode = 1;\u000d\u000a      message = system.functions.scmsg(303, \"km\");\u000d\u000a}"}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">4</lastRuleId>
    <isAction NullValue="1" type="boolean"/>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">03/15/16 21:15:10</sysmodtime>
    <sysmodcount type="decimal">19</sysmodcount>
    <sysrestricted type="boolean">false</sysrestricted>
  </record>
</recordset>
