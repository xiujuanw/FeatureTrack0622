<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;im.task.fields.validation&quot;" recordid="im.task.fields.validation">
    <id type="string">im.task.fields.validation</id>
    <name type="string">Check incident task standard validation</name>
    <tablename sctype="array">
      <tablename sctype="string">imTask</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">3</ruleId>
        <isGroup type="boolean">true</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML type="string">&lt;ruleGroup/&gt;</ruleXML>
        <ruleDesc type="string">Fields in incident task detail group validation: against global list</ruleDesc>
        <condition type="string">true</condition>
        <conditionDesc NullValue="1" type="string"/>
        <conditionXML NullValue="1" type="string"/>
        <fullDesc type="string">[Fields in incident task detail group validation: against global list]</fullDesc>
        <level type="decimal">0</level>
        <type type="string">ruleGroup</type>
        <ruleJSON NullValue="1" type="string"/>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">4</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">3</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Initial Impact</ruleDesc>
        <condition type="operator">not  (same(initial.impact in $L.file, NULL))</condition>
        <conditionDesc type="string">( initial.impact in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Initial Impact"&gt;initial.impact&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Initial Impact (when ( initial.impact in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Global List","fieldName":"initial.impact","toGlobal":"Initial Impact","manualList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">5</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">3</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Severity</ruleDesc>
        <condition type="operator">not  (same(severity in $L.file, NULL))</condition>
        <conditionDesc type="string">( severity in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Severity"&gt;severity&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Severity (when ( severity in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Global List","fieldName":"severity","toGlobal":"Urgency","manualList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">6</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">3</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Priority Code</ruleDesc>
        <condition type="string">true</condition>
        <conditionDesc NullValue="1" type="string"/>
        <conditionXML NullValue="1" type="string"/>
        <fullDesc type="string">-  Validate Priority Code</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateList</type>
        <ruleJSON type="string">{"type":"validateList","messageType":"pop-up","toList":"Manual List","fieldName":"priority.code","toGlobal":"null","manualList":["1","2","3","4"]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">1</ruleId>
        <isGroup type="boolean">true</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML type="string">&lt;ruleGroup/&gt;</ruleXML>
        <ruleDesc type="string">Fields in incident task detail group validation: against table</ruleDesc>
        <condition type="string">true</condition>
        <conditionDesc NullValue="1" type="string"/>
        <conditionXML NullValue="1" type="string"/>
        <fullDesc type="string">[Fields in incident task detail group validation: against table]</fullDesc>
        <level type="decimal">0</level>
        <type type="string">ruleGroup</type>
        <ruleJSON NullValue="1" type="string"/>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">7</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">1</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Assignment Group</ruleDesc>
        <condition type="operator">not  (same(assignment in $L.file, NULL))</condition>
        <conditionDesc type="string">( assignment in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Assignment Group"&gt;assignment&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Assignment Group (when ( assignment in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"pop-up","fieldName":"assignment","toTable":"assignment","toField":"name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">8</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">1</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Assignee</ruleDesc>
        <condition type="operator">not  (same(assignee.name in $L.file, NULL))</condition>
        <conditionDesc type="string">( assignee.name in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Assignee"&gt;assignee.name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Assignee (when ( assignee.name in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"pop-up","fieldName":"assignee.name","toTable":"operator","toField":"name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">9</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">1</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Pre-Validation for primary CI</ruleDesc>
        <condition type="operator">not  (same(logical.name in $L.file, NULL))</condition>
        <conditionDesc type="string">( logical.name in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Logical Name"&gt;logical.name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Pre-Validation for primary CI (when ( logical.name in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">JSValidate</type>
        <ruleJSON type="string">{"type":"JSValidate","script":"system.vars.$memberList=lib.c.$(\"#incidentService\").getFilteredCIList(record.parent_incident);"}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">10</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">1</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Primary CI</ruleDesc>
        <condition type="operator">not  (same(logical.name in $L.file, NULL))</condition>
        <conditionDesc type="string">( logical.name in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Logical Name"&gt;logical.name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate Primary CI (when ( logical.name in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"pop-up","fieldName":"logical.name","toTable":"device","toField":"logical.name","filter":"logical.name isin $memberList","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">12</ruleId>
        <isGroup type="boolean">true</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML type="string">&lt;ruleGroup/&gt;</ruleXML>
        <ruleDesc type="string">Date type of fields validation</ruleDesc>
        <condition type="string">true</condition>
        <conditionDesc NullValue="1" type="string"/>
        <conditionXML NullValue="1" type="string"/>
        <fullDesc type="string">[Date type of fields validation]</fullDesc>
        <level type="decimal">0</level>
        <type type="string">ruleGroup</type>
        <ruleJSON NullValue="1" type="string"/>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">13</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">12</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate date: due.date</ruleDesc>
        <condition type="operator">not  (same(due.date in $L.file, NULL))</condition>
        <conditionDesc type="string">( due.date in CurrentRecord != 'NULL')</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Due Date"&gt;due.date&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="datetime"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">-  Validate date: due.date (when ( due.date in CurrentRecord != 'NULL'))</fullDesc>
        <level type="decimal">1</level>
        <type type="string">validateDate</type>
        <ruleJSON type="string">{"type":"validateDate","comparison":{"not":"null","operator":"Greater Than Or Equal To"},"compareField":{"cField1":"[Current Date/Time]","offset1":"+","days1":"0","hours1":"0","mins1":"0","cField2":"","offset2":"+","days2":"0","hours2":"0","mins2":"0"},"dateValue":{"dateValue1":"","dateValue2":""},"messageType":"pop-up","fieldName":"due.date","rangeType":"Field"}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">13</lastRuleId>
    <isAction NullValue="1" type="boolean"/>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">02/08/15 17:33:46</sysmodtime>
    <sysmodcount type="decimal">10</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
