<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;sd.general.validation&quot;" recordid="sd.general.validation">
    <id type="string">sd.general.validation</id>
    <name type="string">Validate Fields</name>
    <tablename sctype="array">
      <tablename sctype="string">incidents</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">8</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Affected Service</ruleDesc>
        <condition type="operator">not  (null(affected.item in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(affected.item in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(affected.item in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Affected Service (when ( Expression: not null(affected.item in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"affected.item","toTable":"device","toField":"logical.name.vj","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">6</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Assignment Group</ruleDesc>
        <condition type="operator">not  (null(assignment in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(assignment in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(assignment in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Assignment Group (when ( Expression: not null(assignment in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"assignment","toTable":"assignment","toField":"name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">10</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Closure Code</ruleDesc>
        <condition type="operator">not  (same(resolution.code in $L.file, NULL))</condition>
        <conditionDesc type="string">( Closure Code in CurrentRecord != NULL)</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Closure Code"&gt;resolution.code&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Closure Code (when ( Closure Code in CurrentRecord != NULL))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"resolution.code","toTable":"probcause","toField":"resolution.code","filter":null,"fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">9</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Affected CI</ruleDesc>
        <condition type="operator">not  (null(logical.name in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(logical.name in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(logical.name in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Affected CI (when ( Expression: not null(logical.name in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"logical.name","toTable":"device","toField":"logical.name.vj","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">7</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Assignee</ruleDesc>
        <condition type="operator">not  (null(assignee.name in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(assignee.name in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(assignee.name in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Assignee (when ( Expression: not null(assignee.name in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"assignee.name","toTable":"operator","toField":"name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">3</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Service Recipient</ruleDesc>
        <condition type="operator">not  (null(contact.name in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(contact.name in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(contact.name in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Service Recipient (when ( Expression: not null(contact.name in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"contact.name","toTable":"contacts","toField":"contact.name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">2</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Primary Contact</ruleDesc>
        <condition type="operator">not  (null(callback.contact in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(callback.contact in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(callback.contact in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Primary Contact (when ( Expression: not null(callback.contact in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"callback.contact","toTable":"contacts","toField":"contact.name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">1</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Category</ruleDesc>
        <condition type="operator">not  (null(category in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(category in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(category in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Category (when ( Expression: not null(category in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"category","toTable":"sdCategory","toField":"name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">4</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Subcategory</ruleDesc>
        <condition type="operator">not  (null(subcategory in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(subcategory in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(subcategory in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Subcategory (when ( Expression: not null(subcategory in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"subcategory","toTable":"sdSubcategory","toField":"subcategory.name","fillDataList":[]}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">5</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Validate Area</ruleDesc>
        <condition type="operator">not  (null(product.type in $L.file))</condition>
        <conditionDesc type="string">( Expression: not null(product.type in $L.file))</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(product.type in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Validate Area (when ( Expression: not null(product.type in $L.file)))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">validateRecord</type>
        <ruleJSON type="string">{"type":"validateRecord","messageType":"screen","fieldName":"area","toTable":"sdArea","toField":"area.name","fillDataList":[]}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">10</lastRuleId>
    <isAction NullValue="1" type="boolean"/>
    <sysmoduser type="string">tanjis</sysmoduser>
    <sysmodtime type="dateTime">02/02/15 18:26:41</sysmodtime>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
