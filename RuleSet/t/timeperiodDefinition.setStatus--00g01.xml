<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="RuleSet">
  <record id="id=&quot;timeperiodDefinition.setStatus&quot;" recordid="timeperiodDefinition.setStatus">
    <id type="string">timeperiodDefinition.setStatus</id>
    <name type="string">Set a status to ensure occurrences are handled correctly</name>
    <tablename sctype="array">
      <tablename sctype="string">timeperiodDefinition</tablename>
    </tablename>
    <rule sctype="array">
      <rule sctype="structure">
        <ruleId type="decimal">4</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Set Status to planned (1) when record is in first phase</ruleDesc>
        <condition type="operator">current.phase in $L.file="planning"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "planning")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Current Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;planning&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Set Status to planned (1) when record is in first phase (when ( current.phase in CurrentRecord = "planning"))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">setField</type>
        <ruleJSON type="string">{"type":"setField","fieldName":"status","script":"// Note: The status values are required to ensure the occurrences are handled correctly. \u000a// The occurrences are calculated in the trigger and referring to the status of the Time Period definition.\u000a// status matrix: 1 = planned; 2 = published; 3=retired\u000avalue=\"1\""}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">5</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Set Status to Published (2) when record is in published phase</ruleDesc>
        <condition type="operator">current.phase in $L.file="published"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "published")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Current Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;published&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Set Status to Published (2) when record is in published phase (when ( current.phase in CurrentRecord = "published"))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">setField</type>
        <ruleJSON type="string">{"type":"setField","fieldName":"status","script":"// Note: The status values are required to ensure the occurrences are handled correctly. \u000a// The occurrences are calculated in the trigger and referring to the status of the Time Period definition.\u000a// status matrix: 1 = planned; 2 = published; 3=retired\u000avalue=\"2\""}</ruleJSON>
      </rule>
      <rule sctype="structure">
        <ruleId type="decimal">6</ruleId>
        <isGroup type="boolean">false</isGroup>
        <parentGroup type="decimal">0</parentGroup>
        <ruleXML NullValue="1" type="string"/>
        <ruleDesc type="string">Set Status to Retired (3) when record is in inactive phase</ruleDesc>
        <condition type="operator">current.phase in $L.file="retired"</condition>
        <conditionDesc type="string">( current.phase in CurrentRecord = "retired")</conditionDesc>
        <conditionXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Current Phase"&gt;current.phase&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;retired&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</conditionXML>
        <fullDesc type="string">Set Status to Retired (3) when record is in inactive phase (when ( current.phase in CurrentRecord = "retired"))</fullDesc>
        <level type="decimal">0</level>
        <type type="string">setField</type>
        <ruleJSON type="string">{"type":"setField","fieldName":"status","script":"// Note: The status values are required to ensure the occurrences are handled correctly. \u000a// The occurrences are calculated in the trigger and referring to the status of the Time Period definition.\u000a// status matrix: 1 = planned; 2 = published; 3=retired\u000avalue=\"3\""}</ruleJSON>
      </rule>
    </rule>
    <lastRuleId type="decimal">6</lastRuleId>
    <isAction NullValue="1" type="boolean"/>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">01/08/15 16:23:26</sysmodtime>
    <sysmodcount type="decimal">20</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
