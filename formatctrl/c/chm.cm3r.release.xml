<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="formatctrl">
  <record id="name=&quot;chm.cm3r.release&quot;" recordid="chm.cm3r.release">
    <name type="string">chm.cm3r.release</name>
    <format.field type="boolean">false</format.field>
    <file.name NullValue="1" type="string"/>
    <database.access type="boolean">false</database.access>
    <sequential NullValue="1" sctype="array">
      <sequential sctype="structure">
        <class NullValue="1" type="string"/>
        <field NullValue="1" type="string"/>
      </sequential>
    </sequential>
    <queries NullValue="1" sctype="array">
      <queries sctype="structure">
        <file NullValue="1" type="string"/>
        <query NullValue="1" type="boolean"/>
        <required NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <message NullValue="1" type="string"/>
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
    </queries>
    <calculations sctype="array">
      <calculations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <calculation type="operator">$L.cur.phase=current.phase in $file</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <calculation type="operator">$L.cur.pntr=$phasepntr</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="boolean">true</delete>
        <calculation type="operator">$ip.array=nullsub($ip.array, {});$d.assignment=nullsub($d.assignment, {});$loc.array=nullsub($loc.array, {})</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$ip.array={};$d.assignment={};$loc.array={}</calculation>
        <display type="operator">null(assets in $file)</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation NullValue="1" type="expression"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="boolean">true</delete>
        <calculation type="operator">$do.train=false</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="boolean">true</delete>
        <calculation type="operator">if (initial.impact in $file&lt;"3") then ($do.train=true)</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation NullValue="1" type="expression"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="boolean">true</delete>
        <calculation type="operator">if ($phasepntr=3 and approval.status in $file~="denied" and initial.impact in $file&gt;2) then ($L.skip.training=true)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation NullValue="1" type="expression"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="boolean">true</delete>
        <calculation type="operator">if ($phasepntr=5 and $release.backout=false) then ($L.skip.backout=true)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="boolean">true</delete>
        <calculation type="operator">if ($L.cur.pntr=6) then ($L.plan.again=true)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation NullValue="1" type="expression"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <calculation type="operator">if (misc2 in $file="fail" and $L.cur.phase="Build and Test") then ($L.plan.again=true)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation NullValue="1" type="expression"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="operator">$L.skip.training=true</delete>
        <calculation type="operator">$phasepntr=4;current.phase in $file=$L.cur.phase</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="operator">$L.skip.backout=true</delete>
        <calculation type="operator">$phasepntr=6;current.phase in $file=$L.cur.phase</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="operator">$L.plan.again=true</delete>
        <calculation type="operator">$phasepntr=1;current.phase in $file=$L.cur.phase</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation NullValue="1" type="expression"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$show.rlm.testing=false</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">if ($L.cur.pntr&gt;=3) then ($show.rlm.testing=true)</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="boolean">true</delete>
        <calculation type="operator">if ($terminate.release=true) then ($phasepntr=7;current.phase in $file="Verification")</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="operator">not  (null(assets in $file))</add>
        <update type="operator">not  (null(assets in $file))</update>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$x=1;while ($x&lt;=lng(denull(assets in $file))) do (if null($x in assets in $file) then (assets in $file=delete(assets in $file, $x, 1)) else ($x=$x+1))</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
    </calculations>
    <validations sctype="array">
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <validation type="operator">not  (null(reason in $file))</validation>
        <message type="string">The Reason for Change is required.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">reason</set.field>
        <message.id type="string">865</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <validation type="operator">not  (null(coordinator in $file))</validation>
        <message type="string">The Change Coordinator is required.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">coordinator</set.field>
        <message.id type="string">1432</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <validation type="operator">not  (null(requested.by in $file))</validation>
        <message type="string">The Initiated By is required.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">requested.by</set.field>
        <message.id type="string">867</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <validation type="operator">not  (null(denull(description in $file)))</validation>
        <message type="string">The Description of the change is required.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">description</set.field>
        <message.id type="string">868</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(sched.outage.start in $file)) and not  (null(sched.outage.end in $file))</add>
        <update type="operator">not  (null(sched.outage.start in $file)) and not  (null(sched.outage.end in $file))</update>
        <delete type="operator">not  (null(sched.outage.start in $file)) and not  (null(sched.outage.end in $file))</delete>
        <validation type="operator">sched.outage.start in $file&lt;sched.outage.end in $file</validation>
        <message type="string">The Scheduled Outage End must be AFTER the Scheduled Outage Start.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">sched.outage.start</set.field>
        <message.id type="string">860</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(actual.outage.start in $file)) and not  (null(actual.outage.end in $file))</add>
        <update type="operator">not  (null(actual.outage.start in $file)) and not  (null(actual.outage.end in $file))</update>
        <delete type="operator">not  (null(actual.outage.start in $file)) and not  (null(actual.outage.end in $file))</delete>
        <validation type="operator">actual.outage.start in $file&lt;actual.outage.end in $file</validation>
        <message type="string">The Actual Outage End must be AFTER the Actual Outage Start.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">actual.outage.start</set.field>
        <message.id type="string">861</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;2</update>
        <delete type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr=2</delete>
        <validation type="operator">not  (null(backout.method in $file))</validation>
        <message type="string">The Backout Method is required for closing the Plan and Design phase.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">backout.method</set.field>
        <message.id type="string">1441</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;2</update>
        <delete type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr=2</delete>
        <validation type="operator">not  (null(justification in $file))</validation>
        <message type="string">The Overall Assessment is required for closing the Plan and Design phase.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">justification</set.field>
        <message.id type="string">1442</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="operator">$do.train=true and status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;2</update>
        <delete type="operator">$do.train=true and status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;=2</delete>
        <validation type="operator">not  ((null(training.plan in $file) and status in $file~="terminated"))</validation>
        <message type="string">The Training Plan is required to close this phase.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">training.plan</set.field>
        <message.id type="string">1443</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;3</update>
        <delete type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;=3</delete>
        <validation type="operator">not  (null(assets in $file))</validation>
        <message type="string">At least one configuration item (CI) is required to close this phase.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">assets</set.field>
        <message.id type="string">1444</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;3</update>
        <delete type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;=3</delete>
        <validation type="operator">not  (null(misc.array3 in $file))</validation>
        <message type="string">Test Results are required to close this phase.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">misc.array3</set.field>
        <message.id type="string">1445</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(release.type in $file))</validation>
        <message type="string">The  Release Type of the change is required.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">release.type</set.field>
        <message.id type="string">1446</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="operator">status in $file~="terminated" and not  (null($phasepntr)) and $phasepntr&gt;=3</delete>
        <validation type="operator">not  (null(misc2 in $file))</validation>
        <message type="string">Pass or Fail is required to close this phase.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">misc2</set.field>
        <message.id type="string">1447</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(down.start in $file)) and not  (null(down.end in $file))</add>
        <update type="operator">not  (null(down.start in $file)) and not  (null(down.end in $file))</update>
        <delete type="operator">not  (null(down.start in $file)) and not  (null(down.end in $file))</delete>
        <validation type="operator">down.start in $file&lt;down.end in $file</validation>
        <message type="string">The Downtime End must be AFTER the Downtime Start.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">down.start</set.field>
        <message.id type="string">842</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(planned.start in $file)) and not  (null(planned.end in $file))</add>
        <update type="operator">not  (null(planned.start in $file)) and not  (null(planned.end in $file))</update>
        <delete type="operator">not  (null(planned.start in $file)) and not  (null(planned.end in $file))</delete>
        <validation type="operator">planned.start in $file&lt;planned.end in $file</validation>
        <message type="string">The Planned End must be AFTER the Planned Start.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">planned.start</set.field>
        <message.id type="string">1114</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
    </validations>
    <system type="string">miscellaneous</system>
    <format.calc type="boolean">false</format.calc>
    <init.expr NullValue="1" sctype="array">
      <init.expr NullValue="1" type="expression"/>
    </init.expr>
    <db.add type="boolean">true</db.add>
    <db.update type="boolean">true</db.update>
    <db.delete type="operator">index("SysAdmin", $lo.ucapex)&gt;0</db.delete>
    <db.reset type="boolean">true</db.reset>
    <db.regen type="boolean">true</db.regen>
    <db.master NullValue="1" type="boolean"/>
    <db.unload type="boolean">true</db.unload>
    <default.sort NullValue="1" sctype="array">
      <default.sort NullValue="1" type="string"/>
    </default.sort>
    <db.sort type="boolean">true</db.sort>
    <db.copy NullValue="1" type="boolean"/>
    <subroutines sctype="array">
      <subroutines sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <application type="string">get.device.info</application>
        <message type="string">There is a problem with the get.device.info application.</message>
        <names sctype="array">
          <names sctype="string">file</names>
        </names>
        <values sctype="array">
          <values sctype="globalVar">$file</values>
        </values>
        <before type="boolean">true</before>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <sub.init NullValue="1" type="boolean"/>
        <sub.msg.id type="string">7030</sub.msg.id>
      </subroutines>
      <subroutines sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <application type="string">get.release.components.info</application>
        <message type="string">There is a problem with the get.release.components.info application.</message>
        <names sctype="array">
          <names sctype="string">file</names>
        </names>
        <values sctype="array">
          <values sctype="globalVar">$file</values>
        </values>
        <before type="boolean">true</before>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <sub.init NullValue="1" type="boolean"/>
        <sub.msg.id type="string">7031</sub.msg.id>
      </subroutines>
    </subroutines>
    <display.format NullValue="1" type="string"/>
    <add.options NullValue="1" sctype="array">
      <add.options sctype="structure">
        <condition NullValue="1" type="boolean"/>
        <option NullValue="1" type="decimal"/>
        <description NullValue="1" type="string"/>
        <application NullValue="1" type="string"/>
        <names NullValue="1" sctype="array">
          <names NullValue="1" type="string"/>
        </names>
        <values NullValue="1" sctype="array">
          <values NullValue="1" type="string"/>
        </values>
        <message NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <reset NullValue="1" type="boolean"/>
        <obsolete.scott6 NullValue="1" type="string"/>
        <opt.desc.id NullValue="1" type="string"/>
      </add.options>
    </add.options>
    <db.options type="boolean">false</db.options>
    <db.find type="boolean">true</db.find>
    <db.fill type="boolean">true</db.fill>
    <default.qbe NullValue="1" type="string"/>
    <db.input type="boolean">true</db.input>
    <query.format NullValue="1" type="string"/>
    <db.edit type="boolean">false</db.edit>
    <fc.func sctype="array">
      <fc.func sctype="structure">
        <function NullValue="1" type="boolean"/>
        <operations sctype="array"/>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function NullValue="1" type="boolean"/>
        <operations sctype="array"/>
      </fc.func>
      <fc.func sctype="structure">
        <function NullValue="1" type="boolean"/>
        <operations sctype="array"/>
      </fc.func>
      <fc.func sctype="structure">
        <function NullValue="1" type="boolean"/>
        <operations sctype="array"/>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
    </fc.func>
    <db.query type="boolean">true</db.query>
    <obsolete.scott NullValue="1" type="boolean"/>
    <obsolete.scott1 sctype="structure">
      <obsolete.scott2 NullValue="1" type="string"/>
      <obsolete.scott3 NullValue="1" type="string"/>
      <obsolete.scott4 NullValue="1" type="string"/>
      <obsolete.scott5 NullValue="1" type="string"/>
      <obsolete.scott6 NullValue="1" type="string"/>
      <obsolete.scott7 NullValue="1" type="string"/>
      <obsolete.scott8 NullValue="1" type="string"/>
      <obsolete.scott9 NullValue="1" type="string"/>
    </obsolete.scott1>
    <qbeformats NullValue="1" sctype="array">
      <qbeformats sctype="structure">
        <qbe.formats NullValue="1" type="string"/>
        <qbe.comments NullValue="1" type="string"/>
        <qbe.conditions NullValue="1" type="boolean"/>
      </qbeformats>
    </qbeformats>
    <authcode NullValue="1" type="decimal"/>
    <authority.level NullValue="1" type="decimal"/>
    <db.print type="boolean">false</db.print>
    <db.mass.add type="boolean">false</db.mass.add>
    <db.mass.update type="boolean">false</db.mass.update>
    <db.mass.delete type="boolean">false</db.mass.delete>
    <db.count type="boolean">true</db.count>
    <script NullValue="1" type="boolean"/>
    <views NullValue="1" sctype="array">
      <views sctype="structure">
        <alternate.views NullValue="1" type="string"/>
        <view.conditions NullValue="1" type="boolean"/>
      </views>
    </views>
    <db.views type="boolean">true</db.views>
    <db.validity type="boolean">true</db.validity>
    <db.expand type="boolean">true</db.expand>
    <db.complex type="boolean">false</db.complex>
    <db.load type="boolean">false</db.load>
    <sysmodcount type="decimal">26</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">03/13/16 18:55:42</sysmodtime>
    <validation.popup NullValue="1" type="boolean"/>
    <javascript NullValue="1" sctype="array">
      <javascript sctype="structure">
        <javascript.add NullValue="1" type="boolean"/>
        <javascript.update NullValue="1" type="boolean"/>
        <javascript.delete NullValue="1" type="boolean"/>
        <javascript.display NullValue="1" type="boolean"/>
        <javascript.init NullValue="1" type="boolean"/>
        <javascript.expression NullValue="1" type="string"/>
      </javascript>
    </javascript>
    <db.template NullValue="1" type="boolean"/>
    <validation.displayall NullValue="1" type="boolean"/>
  </record>
</recordset>
