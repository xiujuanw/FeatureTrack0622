<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="formatctrl">
  <record id="name=&quot;cm3r&quot;" recordid="cm3r">
    <name type="string">cm3r</name>
    <format.field type="boolean">false</format.field>
    <file.name NullValue="1" type="string"/>
    <database.access type="operator">index("SysAdmin", $lo.ucapex)&gt;0</database.access>
    <sequential NullValue="1" sctype="array">
      <sequential sctype="structure">
        <class NullValue="1" type="string"/>
        <field NullValue="1" type="string"/>
      </sequential>
    </sequential>
    <queries sctype="array">
      <queries sctype="structure">
        <file type="string">cm3rcategory</file>
        <query type="operator">name=category in $file</query>
        <required type="operator">not  (nullsub($G.bg, false))</required>
        <display type="operator">not  (nullsub($G.bg, false))</display>
        <message type="string">""+scmsg(7045,"fc")</message>
        <add type="operator">not  (nullsub($G.bg, false))</add>
        <update type="operator">not  (nullsub($G.bg, false))</update>
        <delete type="operator">not  (nullsub($G.bg, false))</delete>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
      <queries sctype="structure">
        <file type="string">device</file>
        <query type="operator">logical.name=logical.name in $file</query>
        <required type="boolean">false</required>
        <display NullValue="1" type="boolean"/>
        <message NullValue="1" type="string"/>
        <add type="operator">not  (null(logical.name in $file)) and (category in $file)~#"Subscription"</add>
        <update type="operator">not  (null(logical.name in $file)) and (category in $file)~#"Subscription"</update>
        <delete NullValue="1" type="boolean"/>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
      <queries sctype="structure">
        <file type="string">cm3rcatphase</file>
        <query type="operator">name=current.phase in $file</query>
        <required NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <message type="string">""+scmsg(7046,"fc")</message>
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
      <queries sctype="structure">
        <file type="string">contacts</file>
        <query type="operator">contact.name=requested.by in $file</query>
        <required NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <message NullValue="1" type="string"/>
        <add type="operator">not  (null(requested.by in $file))</add>
        <update type="operator">not  (null(requested.by in $file))</update>
        <delete type="operator">not  (null(requested.by in $file))</delete>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
      <queries sctype="structure">
        <file type="string">assignment</file>
        <query type="operator">name=assign.dept in $file</query>
        <required NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <message NullValue="1" type="string"/>
        <add type="operator">not  (null(assign.dept in $file))</add>
        <update type="operator">not  (null(assign.dept in $file))</update>
        <delete type="operator">not  (null(assign.dept in $file))</delete>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
      <queries sctype="structure">
        <file type="string">device</file>
        <query type="operator">logical.name=affected.item in $file and type="bizservice"</query>
        <required NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <message NullValue="1" type="string"/>
        <add type="operator">not  (null(affected.item in $file))</add>
        <update type="operator">not  (null(affected.item in $file))</update>
        <delete type="operator">not  (null(affected.item in $file))</delete>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
      <queries sctype="structure">
        <file type="string">cm3rsubcat</file>
        <query type="operator">category=category in $file and subcategory=subcategory in $file</query>
        <required NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <message NullValue="1" type="string"/>
        <add type="operator">(jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) and not  (null(subcategory in $file))</add>
        <update type="operator">(jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) and not  (null(subcategory in $file))</update>
        <delete type="operator">(jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) and not  (null(subcategory in $file))</delete>
        <field.name NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <query.init NullValue="1" type="boolean"/>
      </queries>
    </queries>
    <calculations sctype="array">
      <calculations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <calculation type="operator">number.string in $file=str(number in $file)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="boolean">true</add>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$cm3r.mode="open"</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="boolean">true</update>
        <delete type="boolean">true</delete>
        <calculation type="operator">$cm3r.mode=NULL</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="operator">category in $file~="RFC - Advanced" and not  (null(description in $file)) and same(brief.description in $file, 1 in description in $file0)</add>
        <update type="operator">category in $file~="RFC - Advanced" and not  (null(description in $file)) and same(brief.description in $file, 1 in description in $file0)</update>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">brief.description in $file=str(1 in description in $file)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$L.rem="$phasepntr=index(current.phase in $file, phases in $file1)"</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$cis.before.validation=denull(assets in $file)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete type="operator">not  (nullsub($G.bg, false)) and current.phase in $file="Change Logging" and nullsub(emergency in $file, false)=true</delete>
        <calculation type="operator">if (index("Prepare for Change Approval", denull(phases in $file1))&gt;0) then ($phasepntr=index("Prepare for Change Approval", denull(phases in $file1));$phasepntr-=1)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="operator">jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true</add>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">phaseApprovals in $file=denull(approvals in $file3);if (jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) then (phaseApprovals in $file={})</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="operator">(jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) and (lng(denull(manualApprovals in $file))&gt;1 or not  (null(1 in manualApprovals in $file)))</add>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">phaseApprovals in $file=phaseApprovals in $file+denull(manualApprovals in $file)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="operator">(jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) and (lng(denull(manualApprovals in $file))&gt;1 or not  (null(1 in manualApprovals in $file)))</add>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">cleanup(manualApprovals in $file)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="operator">(current.phase in $file) isin {"Change Review", "Change Implementation"}</add>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">coordinator in $file=jscall("SystemEnhancements.getGroupManager", assign.dept in $file, , "change")</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$smoov=SMOO in $G.system.info and OOCM in $G.system.info and ((current.phase in $file) isin {"Change Implementation", "Build and Test"} and ($oo.changed=NULL or $oo.changed=true))</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add type="operator">$G.multi=true</add>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">company in $file=nullsub(company in $file, $lo.company)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">cust.visible in $file=false</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init type="operator">$L.mode~="search"</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">cleanup($recordType)</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">$calendarEnabled=nullsub(nativeCCM in $G.system.info, false)</calculation>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <calc.init type="boolean">true</calc.init>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">cleanup($tpconflict)</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
      <calculations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <calculation type="operator">if (tpconflict in $file&gt;0) then ($tpconflict=true) else ($tpconflict=false)</calculation>
        <display type="boolean">true</display>
        <comments NullValue="1" type="string"/>
        <calc.init NullValue="1" type="boolean"/>
      </calculations>
    </calculations>
    <validations sctype="array">
      <validations sctype="structure">
        <add type="operator">category in $file="RFC - Advanced"</add>
        <update type="operator">category in $file="RFC - Advanced"</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(subcategory in $file))</validation>
        <message type="string">Subcategory is required.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">subcategory</set.field>
        <message.id type="string">848</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(requested.by in $file))</validation>
        <message type="string">Please provide an Initiated By.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">requested.by</set.field>
        <message.id type="string">1513</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</add>
        <update type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(assign.dept in $file))</validation>
        <message type="string">Please provide an Assignment Group.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">assign.dept</set.field>
        <message.id type="string">824</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (nullsub($system.cm3.update, false)) and $G.folderEntitlement and null(folder in $file)</add>
        <update NullValue="1" type="boolean"/>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">evaluate(new in tableAccess in $G.cm3r.environment)</validation>
        <message type="string">Select a folder for this Change.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field NullValue="1" type="string"/>
        <message.id type="string">3012</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add NullValue="1" type="boolean"/>
        <update type="operator">not  (nullsub($system.cm3.update, false)) and $G.folderEntitlement and null(folder in $file)</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">update in tableAccess in $G.cm3r.environment~="never"</validation>
        <message type="string">Select a folder for this Change.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field NullValue="1" type="string"/>
        <message.id type="string">3012</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</add>
        <update type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">jscall("DisplayName.validateRefField", $file, "affected.item")</validation>
        <message type="globalVar">$reference.field.validation.msg</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">affected.item</set.field>
        <message.id NullValue="1" type="string"/>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</add>
        <update type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(brief.description in $file))</validation>
        <message type="string">Please provide a Title.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">brief.description</set.field>
        <message.id type="string">1502</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</add>
        <update type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(description in $file))</validation>
        <message type="string">Please provide a Description.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">description</set.field>
        <message.id type="string">813</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(initial.impact in $file))</validation>
        <message type="string">please provide an Impact</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">initial.impact</set.field>
        <message.id type="string">1301</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="boolean">true</add>
        <update type="boolean">true</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(severity in $file))</validation>
        <message type="string">please provide an Urgency.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">severity</set.field>
        <message.id type="string">926</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</add>
        <update type="operator">(category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(requestedDate in $file))</validation>
        <message type="string">Please provide a Requested End Date.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">requestedDate</set.field>
        <message.id type="string">1514</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(requested.by in $file)) and category in $file~="Unplanned Change"</add>
        <update type="operator">not  (null(requested.by in $file)) and category in $file~="Unplanned Change"</update>
        <delete type="operator">not  (null(requested.by in $file)) and category in $file~="Unplanned Change"</delete>
        <validation type="operator">not  (null(contact.name in $file4))</validation>
        <message type="string">Please provide a valid Initiator</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">requested.by</set.field>
        <message.id type="string">1531</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(assign.dept in $file))</add>
        <update type="operator">not  (null(assign.dept in $file))</update>
        <delete type="operator">not  (null(assign.dept in $file))</delete>
        <validation type="operator">not  (null(name in $file5))</validation>
        <message type="string">Invalid Assignment Group</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">assign.dept</set.field>
        <message.id type="string">1329</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(affected.item in $file)) and (category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</add>
        <update type="operator">not  (null(affected.item in $file)) and (category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</update>
        <delete type="operator">not  (null(affected.item in $file)) and (category in $file) isin {"Default", "Hardware", "Maintenance", "Network", "Software"}</delete>
        <validation type="operator">not  (null(logical.name in $file6))</validation>
        <message type="string">Please provide a valid Service.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">affected.item</set.field>
        <message.id type="string">1530</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(down.start in $file)) and not  (null(down.end in $file))</add>
        <update type="operator">not  (null(down.start in $file)) and not  (null(down.end in $file))</update>
        <delete type="operator">not  (null(down.start in $file)) and not  (null(down.end in $file))</delete>
        <validation type="operator">down.start in $file&lt;down.end in $file</validation>
        <message NullValue="1" type="string"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">down.start</set.field>
        <message.id type="string">842</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfield" and $smoov</add>
        <update type="operator">execute.mode in $file="byfield" and $smoov</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(calc.field in $file))</validation>
        <message type="string">Please provide a Change Field.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">calc.field</set.field>
        <message.id type="string">smoo_13</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfixedtime" and $smoov</add>
        <update type="operator">execute.mode in $file="byfixedtime" and $smoov</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(scheduled.time in $file))</validation>
        <message type="string">Please provide a Scheduled Time.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">scheduled.time</set.field>
        <message.id type="string">smoo_14</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfield" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</add>
        <update type="operator">execute.mode in $file="byfield" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">calc.time in $file&gt;tod()</validation>
        <message type="string">The SMOO Automation Start time must be AFTER the current time.  Re-enter the date.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">calc.field</set.field>
        <message.id type="string">smoo_15</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfield" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</add>
        <update type="operator">execute.mode in $file="byfield" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">calc.time in $file&gt;=planned.start in $file</validation>
        <message type="string">The SMOO Automation Start time must be AFTER the Planned Start.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">calc.field</set.field>
        <message.id type="string">smoo_16</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfield" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</add>
        <update type="operator">execute.mode in $file="byfield" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">calc.time in $file&lt;=planned.end in $file</validation>
        <message type="string">The SMOO Automation Start time must be BEFORE the Planned End.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">calc.field</set.field>
        <message.id type="string">smoo_17</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfixedtime" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</add>
        <update type="operator">execute.mode in $file="byfixedtime" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">scheduled.time in $file&gt;tod()</validation>
        <message type="string">The SMOO Automation Start time must be AFTER the current time.  Re-enter the date.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">scheduled.time</set.field>
        <message.id type="string">smoo_15</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfixedtime" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</add>
        <update type="operator">execute.mode in $file="byfixedtime" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">scheduled.time in $file&gt;=planned.start in $file</validation>
        <message type="string">The SMOO Automation Start time must be AFTER the Planned Start.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">scheduled.time</set.field>
        <message.id type="string">smoo_16</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">execute.mode in $file="byfixedtime" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</add>
        <update type="operator">execute.mode in $file="byfixedtime" and $smoov and category in $file~="Normal Change" and category in $file~="Emergency Change" and category in $file~="Standard Change"</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">scheduled.time in $file&lt;=planned.end in $file</validation>
        <message type="string">The SMOO Automation Start time must be BEFORE the Planned End.  Re-enter one of the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">scheduled.time</set.field>
        <message.id type="string">smoo_17</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">not  (null(foreign.id in $file))</add>
        <update type="operator">not  (null(foreign.id in $file))</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">rtecall("isnumeric", $L.return.code, str(foreign.id in $file))="true"</validation>
        <message type="string">The field Ext.Project Ref contains an invalid numeric value.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">foreign.id</set.field>
        <message.id type="string">1559</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">jscall("ProcessDesignerEnablement.isChangeEnabled")=true and not  (null(planned.start in $file)) and not  (null(planned.end in $file))</add>
        <update type="operator">jscall("ProcessDesignerEnablement.isChangeEnabled")=true and not  (null(planned.start in $file)) and not  (null(planned.end in $file))</update>
        <delete type="operator">jscall("ProcessDesignerEnablement.isChangeEnabled")=true and not  (null(planned.start in $file)) and not  (null(planned.end in $file))</delete>
        <validation type="operator">planned.start in $file&lt;planned.end in $file</validation>
        <message type="string">The Planned End must be AFTER the Planned Start.  Correct the dates.</message>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">planned.start</set.field>
        <message.id type="string">1114</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
      <validations sctype="structure">
        <add type="operator">(jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) and not  (null(subcategory in $file))</add>
        <update type="operator">(jscall("ProcessDesignerEnablement.isChangeEnabled")=false or jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=true) and not  (null(subcategory in $file))</update>
        <delete NullValue="1" type="boolean"/>
        <validation type="operator">not  (null(subcategory in $file7))</validation>
        <message NullValue="1" type="string"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <set.field type="string">subcategory</set.field>
        <message.id type="string">1660</message.id>
        <val.init NullValue="1" type="boolean"/>
      </validations>
    </validations>
    <system type="string">ChM</system>
    <format.calc type="boolean">false</format.calc>
    <init.expr sctype="array">
      <init.expr sctype="operator">assets in $file=nullsub(assets in $file, {})</init.expr>
      <init.expr sctype="operator">if (not  (same(assets in $file, {})) and category in $file~="Release Management") then (logical.name in $file=1 in assets in $file)</init.expr>
      <init.expr sctype="operator">if (jscall("ProcessDesignerEnablement.isChangeEnabled")=true and jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=false and null(completion.code in $file) and $L.mode~="search") then (completion.code in $file=1)</init.expr>
    </init.expr>
    <db.add type="boolean">true</db.add>
    <db.update type="boolean">true</db.update>
    <db.delete type="boolean">true</db.delete>
    <db.reset type="boolean">true</db.reset>
    <db.regen type="boolean">true</db.regen>
    <db.master NullValue="1" type="boolean"/>
    <db.unload type="boolean">true</db.unload>
    <default.sort NullValue="1" sctype="array">
      <default.sort NullValue="1" type="string"/>
    </default.sort>
    <db.sort type="boolean">true</db.sort>
    <db.copy type="boolean">true</db.copy>
    <subroutines sctype="array">
      <subroutines sctype="structure">
        <add type="operator">false and enable in $G.sla.environment</add>
        <update type="operator">false and enable in $G.sla.environment</update>
        <delete NullValue="1" type="boolean"/>
        <application type="string">sc.get.sla</application>
        <message NullValue="1" type="string"/>
        <names sctype="array">
          <names sctype="string">file</names>
          <names sctype="string">number1</names>
          <names sctype="string">numbers</names>
        </names>
        <values sctype="array">
          <values sctype="globalVar">$file</values>
          <values sctype="operator">contract.id in $file</values>
          <values sctype="operator">agreement.ids in $file</values>
        </values>
        <before NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <sub.init NullValue="1" type="boolean"/>
        <sub.msg.id NullValue="1" type="string"/>
      </subroutines>
      <subroutines sctype="structure">
        <add type="operator">not  (null(assets in $file))</add>
        <update type="operator">not  (null(assets in $file))</update>
        <delete NullValue="1" type="boolean"/>
        <application type="string">validate.fields</application>
        <message type="string">Invalid Configuration Item</message>
        <names sctype="array">
          <names sctype="string">second.file</names>
          <names sctype="string">names</names>
        </names>
        <values sctype="array">
          <values sctype="globalVar">$file</values>
          <values sctype="operator">val({"assets"}, 8)</values>
        </values>
        <before NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <sub.init NullValue="1" type="boolean"/>
        <sub.msg.id type="string">7038</sub.msg.id>
      </subroutines>
      <subroutines sctype="structure">
        <add type="operator">jscall("ProcessDesignerEnablement.isChangeEnabled")=true and jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=false and not  (nullsub($G.bg, false))</add>
        <update type="operator">jscall("ProcessDesignerEnablement.isChangeEnabled")=true and jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=false and not  (nullsub($G.bg, false))</update>
        <delete type="operator">jscall("ProcessDesignerEnablement.isChangeEnabled")=true and jscall("ProcessDesignerEnablement.isMigratedWorkflowUsed", "cm3r", category in $file)=false and not  (nullsub($G.bg, false))</delete>
        <application type="string">validate.fields</application>
        <message NullValue="1" type="string"/>
        <names sctype="array">
          <names sctype="string">second.file</names>
          <names sctype="string">boolean1</names>
          <names sctype="string">cond.input</names>
          <names sctype="string">string1</names>
        </names>
        <values sctype="array">
          <values sctype="globalVar">$file</values>
          <values sctype="string">false</values>
          <values sctype="string">false</values>
          <values sctype="string">true</values>
        </values>
        <before NullValue="1" type="boolean"/>
        <display NullValue="1" type="boolean"/>
        <comments NullValue="1" type="string"/>
        <sub.init NullValue="1" type="boolean"/>
        <sub.msg.id NullValue="1" type="string"/>
      </subroutines>
    </subroutines>
    <display.format NullValue="1" type="string"/>
    <add.options NullValue="1" sctype="array">
      <add.options sctype="structure">
        <condition NullValue="1" type="boolean"/>
        <option NullValue="1" type="decimal"/>
        <description NullValue="1" type="string"/>
        <application NullValue="1" type="string"/>
        <names NullValue="1" sctype="array">
          <names NullValue="1" type="string"/>
        </names>
        <values NullValue="1" sctype="array">
          <values NullValue="1" type="string"/>
        </values>
        <message NullValue="1" type="string"/>
        <comments NullValue="1" type="string"/>
        <reset NullValue="1" type="boolean"/>
        <obsolete.scott6 NullValue="1" type="string"/>
        <opt.desc.id NullValue="1" type="string"/>
      </add.options>
    </add.options>
    <db.options type="boolean">false</db.options>
    <db.find type="boolean">true</db.find>
    <db.fill type="boolean">true</db.fill>
    <default.qbe NullValue="1" type="string"/>
    <db.input type="boolean">true</db.input>
    <query.format NullValue="1" type="string"/>
    <db.edit type="boolean">false</db.edit>
    <fc.func sctype="array">
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array"/>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean">true</operations>
          <operations sctype="boolean"/>
          <operations sctype="boolean"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
      <fc.func sctype="structure">
        <function type="boolean">true</function>
        <operations sctype="array">
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
          <operations sctype="field"/>
          <operations sctype="field"/>
          <operations sctype="boolean">true</operations>
        </operations>
      </fc.func>
    </fc.func>
    <db.query type="boolean">true</db.query>
    <obsolete.scott NullValue="1" type="boolean"/>
    <obsolete.scott1 sctype="structure">
      <obsolete.scott2 NullValue="1" type="string"/>
      <obsolete.scott3 NullValue="1" type="string"/>
      <obsolete.scott4 NullValue="1" type="string"/>
      <obsolete.scott5 NullValue="1" type="string"/>
      <obsolete.scott6 NullValue="1" type="string"/>
      <obsolete.scott7 NullValue="1" type="string"/>
      <obsolete.scott8 NullValue="1" type="string"/>
      <obsolete.scott9 NullValue="1" type="string"/>
    </obsolete.scott1>
    <qbeformats NullValue="1" sctype="array">
      <qbeformats sctype="structure">
        <qbe.formats NullValue="1" type="string"/>
        <qbe.comments NullValue="1" type="string"/>
        <qbe.conditions NullValue="1" type="boolean"/>
      </qbeformats>
    </qbeformats>
    <authcode NullValue="1" type="decimal"/>
    <authority.level NullValue="1" type="decimal"/>
    <db.print type="boolean">false</db.print>
    <db.mass.add type="boolean">false</db.mass.add>
    <db.mass.update type="boolean">false</db.mass.update>
    <db.mass.delete type="boolean">false</db.mass.delete>
    <db.count type="boolean">true</db.count>
    <script NullValue="1" type="boolean"/>
    <views NullValue="1" sctype="array">
      <views sctype="structure">
        <alternate.views NullValue="1" type="string"/>
        <view.conditions NullValue="1" type="boolean"/>
      </views>
    </views>
    <db.views type="operator">index("SysAdmin", $lo.ucapex)&gt;0</db.views>
    <db.validity type="boolean">true</db.validity>
    <db.expand type="boolean">true</db.expand>
    <db.complex type="boolean">false</db.complex>
    <db.load type="boolean">false</db.load>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:49:07</sysmodtime>
    <validation.popup NullValue="1" type="boolean"/>
    <javascript sctype="array">
      <javascript sctype="structure">
        <javascript.add type="operator">lng(denull(phaseApprovals in $file))&gt;1</javascript.add>
        <javascript.update NullValue="1" type="boolean"/>
        <javascript.delete NullValue="1" type="boolean"/>
        <javascript.display NullValue="1" type="boolean"/>
        <javascript.init NullValue="1" type="boolean"/>
        <javascript.expression type="string">var approvals = new Array();
for (i = 0; i &lt; record.phaseApprovals.length(); i++)
{
	approvals[i] = record.phaseApprovals[i];
}

record.phaseApprovals = system.library.context.CleanupArray(approvals);</javascript.expression>
      </javascript>
      <javascript sctype="structure">
        <javascript.add type="operator">not  (same(assets in $file, {}))</javascript.add>
        <javascript.update type="operator">not  (same(assets in $file, {}))</javascript.update>
        <javascript.delete NullValue="1" type="boolean"/>
        <javascript.display NullValue="1" type="boolean"/>
        <javascript.init NullValue="1" type="boolean"/>
        <javascript.expression type="string">var results = system.library.tableUtil.removeNullAndDuplicate(system.vars.$file,system.vars.$file.assets);
system.vars.$file.assets = results;</javascript.expression>
      </javascript>
      <javascript sctype="structure">
        <javascript.add NullValue="1" type="boolean"/>
        <javascript.update NullValue="1" type="boolean"/>
        <javascript.delete NullValue="1" type="boolean"/>
        <javascript.display type="boolean">true</javascript.display>
        <javascript.init NullValue="1" type="boolean"/>
        <javascript.expression type="string">var list= lib.dmeTimeConvert.getDMEList(vars.$file.number);
vars.$oldDmeValue=list[0];
vars.$oldDmeDisplay=list[1];
vars.$newDmeValue=list[2];
vars.$newDmeDisplay=list[3];
</javascript.expression>
      </javascript>
      <javascript sctype="structure">
        <javascript.add NullValue="1" type="boolean"/>
        <javascript.update NullValue="1" type="boolean"/>
        <javascript.delete NullValue="1" type="boolean"/>
        <javascript.display NullValue="1" type="boolean"/>
        <javascript.init type="boolean">true</javascript.init>
        <javascript.expression type="string">var calendarMapping= lib.timeperiodConflict.getTimeperiodCalendarMappingEntry(vars.$file);
vars.$calculateCondition=false;
if(calendarMapping!=null){
	vars.$calculateCondition = lib.CalendarUtilities.evaluateCondition(calendarMapping["calculateCondition"], vars.$file);
}</javascript.expression>
      </javascript>
    </javascript>
    <db.template NullValue="1" type="boolean"/>
    <validation.displayall NullValue="1" type="boolean"/>
  </record>
</recordset>
