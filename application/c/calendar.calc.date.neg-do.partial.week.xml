<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;calendar.calc.date.neg&quot; and label=&quot;do.partial.week&quot;" recordid="calendar.calc.date.neg - do.partial.week">
    <application type="string">calendar.calc.date.neg</application>
    <label type="label">do.partial.week</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">start.calc.loop</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.dow=dayofweek($L.current.time);$L.partial.duration='00:00:00'</statements>
      <statements sctype="operator">$L.today=$L.dow;$L.holiday.array={}</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.today=1 and $L.current.time=date($L.current.time)) then ($L.today=7)</statements>
      <statements sctype="operator">while ($L.today&gt;0) do ($L.pete+=1;if ($L.interval&gt;'00:00:00') then ($L.save.time=$L.current.time;$L.times={};if ($L.current.time=date($L.current.time)) then ($L.current.time=$L.current.time - '1 00:00:00';$L.today=dayofweek($L.current.time));1 in 1 in $L.times=date($L.current.time)+evaluate(parse("begin.hour."+str($L.today)+" in $L.duty.table", 2));1 in 2 in $L.times="start";2 in 1 in $L.times=date($L.current.time)+evaluate(parse("end.hour."+str($L.today)+" in $L.duty.table", 2));if evaluate(parse("full.day."+str($L.today)+" in $L.duty.table", 2)) then (2 in 1 in $L.times=date($L.current.time)+'1 00:00:00');$L.beginhour=evaluate(parse("begin.hour."+str($L.today)+" in $L.duty.table", 2));$L.endhour=evaluate(parse("end.hour."+str($L.today)+" in $L.duty.table", 2));if (not  (same($L.beginhour, '00:00:00')) and $L.endhour='00:00:00') then (2 in 1 in $L.times=date($L.current.time)+'1 00:00:00');2 in 2 in $L.times="end";$L.temp.break.start=date($L.current.time)+evaluate(parse("break.start."+str($L.today)+" in $L.duty.table", 2));$L.temp.break.end=date($L.current.time)+evaluate(parse("break.end."+str($L.today)+" in $L.duty.table", 2));if (not  (same($L.temp.break.start, $L.temp.break.end))) then (3 in 1 in $L.times=$L.temp.break.start;3 in 2 in $L.times="end";4 in 1 in $L.times=$L.temp.break.end;4 in 2 in $L.times="start");if (not  (same(1 in 1 in $L.times, 2 in 1 in $L.times))) then ($L.void=rtecall("sort", $L.errcode, $L.times, 0, 1);if (1 in 2 in $L.times="start") then ($L.temp=1 in 1 in $L.times - '1 00:00:00';if (not  ($L.first)) then (1 in $L.times=delete(1 in $L.times, 1, 1);2 in $L.times=delete(2 in $L.times, 1, 1)) else (1 in $L.times={date($L.current.time)+'1 00:00:00'}+1 in $L.times;2 in $L.times={"end"}+2 in $L.times;$L.first=false);$L.lng=lng(denull(1 in $L.times))+1;$L.lng in 1 in $L.times=$L.temp;$L.lng in 2 in $L.times="start");$L.temp=lng(1 in $L.times);if (2 in $L.temp in $L.times="end") then (1 in $L.times=1 in $L.times+{date($L.current.time)};2 in $L.times=2 in $L.times+{"start"});if (date($L.next.holiday)&lt;=date($L.current.time)) then for $L.i = 1 to lng($L.holiday.start) do (if ($L.i in $L.holiday.start&lt;=$L.current.time) then if ($L.i in $L.holiday.end&gt;=$L.current.time - '1 00:00:00') then ($L.temp=lng($L.holiday.array)+1;if (index({$L.i in $L.holiday.start, $L.i in $L.holiday.end}, $L.holiday.array)=0) then ($L.temp in $L.holiday.array={$L.i in $L.holiday.start, $L.i in $L.holiday.end})));$L.holiday.array=denull($L.holiday.array);if (not  (null($L.holiday.array))) then for $L.i = 1 to lng(1 in $L.times) do for $L.x = 1 to lng($L.holiday.array) do (if ($L.i in 2 in $L.times="start") then (if ($L.i in 1 in $L.times&gt;=1 in $L.x in $L.holiday.array and $L.i in 1 in $L.times&lt;=2 in $L.x in $L.holiday.array) then if (not  ($L.include.holidays)) then ($L.i in 1 in $L.times=2 in $L.x in $L.holiday.array) else ($L.i in 1 in $L.times=1 in $L.x in $L.holiday.array)) else (if ($L.i in 1 in $L.times&gt;=1 in $L.x in $L.holiday.array and $L.i in 1 in $L.times&lt;=2 in $L.x in $L.holiday.array) then if (not  ($L.include.holidays)) then ($L.i in 1 in $L.times=1 in $L.x in $L.holiday.array) else ($L.i in 1 in $L.times=2 in $L.x in $L.holiday.array)));for $L.i = 1 to lng(1 in $L.times) do (if ($L.interval&gt;'00:00:00' and $L.i in 2 in $L.times="end") then ($L.this.duration='00:00:00';$L.this.end=min($L.save.time, $L.i in 1 in $L.times);$L.temp=$L.i+1;$L.this.start=$L.temp in 1 in $L.times;if ($L.this.end&gt;$L.this.start) then (if ($L.this.end - $L.this.start&lt;$L.interval) then $L.this.duration+=($L.this.end - $L.this.start) else ($L.this.duration+=$L.interval;$L.end=$L.this.end - $L.interval);$L.interval-=$L.this.duration)))) else ($L.today=0);$L.current.time=$L.save.time);if ($L.current.time=date($L.current.time)) then ($L.current.time=$L.current.time - '1 00:00:00');$L.current.time=date($L.current.time);$L.today=dayofweek(date($L.current.time));if ($L.today=1) then ($L.today=0))</statements>
      <statements sctype="operator">$L.current.time=$L.week.end</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull($L.holiday.start)) do (if ($L.i in $L.holiday.start&gt;=$L.current.time) then ($L.holiday.end=delete($L.holiday.end, $L.i);$L.holiday.start=delete($L.holiday.start, $L.i);if (lng($L.holiday.start)&gt;0) then $L.i-=1))</statements>
      <statements sctype="operator">$L.next.holiday=lng(denull($L.holiday.start)) in $L.holiday.start;$L.next.holiday.end=lng(denull($L.holiday.end)) in $L.holiday.end</statements>
      <statements sctype="operator">if (not  (null($L.switchovers))) then for $L.i = 1 to lng(denull($L.switchovers)) do (if ($L.i in $L.switchovers&gt;$L.current.time) then ($L.switchovers=delete($L.switchovers, $L.i);if (lng($L.switchovers)&gt;0) then $L.i-=1))</statements>
      <statements sctype="operator">$L.next.switchover=1 in $L.switchovers</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">24</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/20/15 10:41:42</sysmodtime>
  </record>
</recordset>
