<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;cm3r.phase.print.condense&quot; and label=&quot;start&quot;" recordid="cm3r.phase.print.condense - start">
    <application type="string">cm3r.phase.print.condense</application>
    <label type="label">start</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">check.fields</normal>
    <error type="localVar">$3</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$work={, };$final={}</statements>
      <statements sctype="operator">if (not  (null($5))) then (1 in $work=str($5))</statements>
      <statements sctype="operator">if (not  (null($6))) then ($work=$6)</statements>
      <statements sctype="operator">if (not  (null($7))) then (1 in $work=str($7))</statements>
      <statements sctype="operator">$val.field=str($4)</statements>
      <statements sctype="operator">$9=nullsub($9, 0)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more sctype="array">
      <comments.more sctype="string">* $work is an array that contains the original version of the data passed</comments.more>
      <comments.more sctype="string">to the subroutine.  $work is later copied to the array $final but each line</comments.more>
      <comments.more sctype="string">of the $work array is "condensed" down to 58 characters per line.</comments.more>
      <comments.more sctype="string"/>
      <comments.more sctype="string">Check to see which type of data was passed, and then copy the data to the</comments.more>
      <comments.more sctype="string">appropriate element (or in the case of the array, just copy the entire array).</comments.more>
      <comments.more sctype="string"/>
      <comments.more sctype="string">Set $val.field equal to the title passed from the calling application.  When</comments.more>
      <comments.more sctype="string">the format is printed it will appear as though $val.field is a normal PNMS</comments.more>
      <comments.more sctype="string">label, when it fact it is a variable field.</comments.more>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">09/29/04 11:23:20</sysmodtime>
  </record>
</recordset>
