<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;rml.open.from.components&quot; and label=&quot;start&quot;" recordid="rml.open.from.components - start">
    <application type="string">rml.open.from.components</application>
    <label type="label">start</label>
    <comments type="string">for $L.pos = 1 to lng($L.data) do (if same(17 in $L.pos in $L.data, 31 in $L.pos in $L.data) then ($L.temp=17 in $L.pos in $L.data;$L.real.parent=17 in $L.temp in $L.data;17 in $L.pos in $L.data=$L.real.parent))</comments>
    <normal type="label">check.circular</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.parent=$4</statements>
      <statements sctype="operator">$L.work=$5</statements>
      <statements sctype="operator">$L.exit="normal"</statements>
      <statements sctype="operator">$L.parent.lock=$8</statements>
      <statements sctype="operator">$L.i=1</statements>
      <statements sctype="operator">$L.circular.warning="Possible circular dependency problem, please contact System Administrator."</statements>
      <statements sctype="operator">$L.added=false</statements>
      <statements sctype="operator">$L.data=denull(data in $L.work)</statements>
      <statements sctype="operator">for $L.z = 1 to lng($L.data) do (17 in $L.z in $L.data=nullsub(17 in $L.z in $L.data, 0);29 in $L.z in $L.data=$L.z;33 in $L.z in $L.data=17 in $L.z in $L.data)</statements>
      <statements sctype="operator">for $L.pos = 1 to lng($L.data) do (15 in $L.pos in $L.data=nullsub(15 in $L.pos in $L.data, '00:00:00'))</statements>
      <statements sctype="operator">for $L.pos = 1 to lng($L.data) do (if (not  (null(17 in $L.pos in $L.data)) and 17 in $L.pos in $L.data~=30 in $L.pos in $L.data) then ($L.parent.line=17 in $L.pos in $L.data;($L.new.line=0;$L.temp.par=0;for $L.b = 1 to lng($L.data) do (if (30 in $L.b in $L.data=$L.parent.line) then ($L.temp.par=nullsub(17 in $L.b in $L.data, 0);if ($L.temp.par&gt;$L.new.line) then ($L.new.line=$L.b)));if ($L.new.line&gt;0 and $L.new.line&lt;=lng(denull($L.data))) then (17 in $L.pos in $L.data=$L.new.line))))</statements>
      <statements sctype="operator">for $L.pos = 1 to lng($L.data) do (11 in $L.pos in $L.data=nullsub(val(11 in $L.pos in $L.data, 4), false))</statements>
      <statements sctype="operator">$L.sort.no=0</statements>
      <statements sctype="expression"/>
      <statements sctype="operator">$L.line.item=$9</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">22</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">07/01/06 04:57:11</sysmodtime>
  </record>
</recordset>
