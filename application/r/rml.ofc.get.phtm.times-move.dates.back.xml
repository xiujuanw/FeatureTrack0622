<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;rml.ofc.get.phtm.times&quot; and label=&quot;move.dates.back&quot;" recordid="rml.ofc.get.phtm.times - move.dates.back">
    <application type="string">rml.ofc.get.phtm.times</application>
    <label type="label">move.dates.back</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">exit.normal</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.new.data=denull($L.new.data);$L.last={}</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull($L.new.data)) do ($L.is.last=true;if null(17 in $L.i in $L.new.data) then ($L.is.last=false);for $L.j = 1 to lng($L.new.data) do (if (17 in $L.j in $L.new.data=$L.i) then ($L.is.last=false));if $L.is.last then ($L.temp=$L.i in $L.old.lines;$L.last=$L.last+{$L.temp}));for $L.i = 1 to lng(denull($L.new.data)) do (if (null(denull($L.last)) and null(17 in $L.i in $L.new.data)) then ($L.last={$L.i in $L.old.lines}))</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.new.data) do ($L.temp=$L.i in $L.old.lines;24 in $L.temp in $L.data=nullsub(24 in $L.i in $L.new.data, 24 in $L.temp in $L.data);25 in $L.temp in $L.data=nullsub(25 in $L.i in $L.new.data, 25 in $L.temp in $L.data);27 in $L.temp in $L.data=nullsub(27 in $L.i in $L.new.data, 27 in $L.temp in $L.data);if (not  (nullsub(11 in $L.temp in $L.data))) then (25 in $L.temp in $L.data=27 in $L.temp in $L.data))</statements>
      <statements sctype="operator">$L.min.order=NULL;$L.max.complete=NULL</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.new.data) do (if ($L.min.order=NULL or 25 in $L.i in $L.new.data&lt;$L.min.order) then ($L.min.order=25 in $L.i in $L.new.data);if ($L.max.complete=NULL or 24 in $L.i in $L.new&gt;$L.max.complete) then ($L.max.complete=24 in $L.i in $L.new.data))</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.new.data) do (if (not  (nullsub(11 in $L.i in $L.new.data))) then (25 in $L.i in $L.new.data=27 in $L.i in $L.new.data))</statements>
      <statements sctype="operator">24 in $L.phantom in $L.data=nullsub($L.max.complete, 24 in $L.phantom in $L.data)</statements>
      <statements sctype="operator">25 in $L.phantom in $L.data=nullsub($L.min.order, 25 in $L.phantom in $L.data)</statements>
      <statements sctype="operator">27 in $L.phantom in $L.data=nullsub($L.min.order, 27 in $L.phantom in $L.data)</statements>
      <statements sctype="operator">36 in $L.phantom in $L.data=$L.last</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.new.data) do ($L.line=29 in $L.i in $L.new.data;$L.line=$L.line in $L.old.lines;$L.done=$L.done+{$L.line})</statements>
      <statements sctype="expression"/>
      <statements sctype="expression"/>
      <statements sctype="operator">$L.msg=str($L.phantom)+":Phantom, Done:"+str($L.done)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">04/12/05 08:36:39</sysmodtime>
  </record>
</recordset>
