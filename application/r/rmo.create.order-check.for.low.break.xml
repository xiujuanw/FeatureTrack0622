<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;rmo.create.order&quot; and label=&quot;check.for.low.break&quot;" recordid="rmo.create.order - check.for.low.break">
    <application type="string">rmo.create.order</application>
    <label type="label">check.for.low.break</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">update.just.created.li</normal>
    <error type="label">unlock.error</error>
    <format type="string">decision</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition sctype="array">
      <condition sctype="operator">$L.force.low.break or $L.force.low.break2 or nullsub(combine in $L.order.line, false)=false</condition>
      <condition sctype="operator">not  (null($L.line.break1)) and not  (same($L.line.break1 in $L.ocml, $L.line.break1 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break2)) and not  (same($L.line.break2 in $L.ocml, $L.line.break2 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break3)) and not  (same($L.line.break3 in $L.ocml, $L.line.break3 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break4)) and not  (same($L.line.break4 in $L.ocml, $L.line.break4 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break5)) and not  (same($L.line.break5 in $L.ocml, $L.line.break5 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break6)) and not  (same($L.line.break6 in $L.ocml, $L.line.break6 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break7)) and not  (same($L.line.break7 in $L.ocml, $L.line.break7 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break8)) and not  (same($L.line.break8 in $L.ocml, $L.line.break8 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break9)) and not  (same($L.line.break9 in $L.ocml, $L.line.break9 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break10)) and not  (same($L.line.break10 in $L.ocml, $L.line.break10 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break11)) and not  (same($L.line.break11 in $L.ocml, $L.line.break11 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break12)) and not  (same($L.line.break12 in $L.ocml, $L.line.break12 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break13)) and not  (same($L.line.break13 in $L.ocml, $L.line.break13 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break14)) and not  (same($L.line.break14 in $L.ocml, $L.line.break14 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break15)) and not  (same($L.line.break15 in $L.ocml, $L.line.break15 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break16)) and not  (same($L.line.break16 in $L.ocml, $L.line.break16 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break17)) and not  (same($L.line.break17 in $L.ocml, $L.line.break17 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break18)) and not  (same($L.line.break18 in $L.ocml, $L.line.break18 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break19)) and not  (same($L.line.break19 in $L.ocml, $L.line.break19 in $L.ocml.save))</condition>
      <condition sctype="operator">not  (null($L.line.break20)) and not  (same($L.line.break20 in $L.ocml, $L.line.break20 in $L.ocml.save))</condition>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit sctype="array">
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
      <exit sctype="label">update.for.fc</exit>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements NullValue="1" sctype="array">
      <statements NullValue="1" type="expression"/>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">13</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">09/29/04 11:32:27</sysmodtime>
  </record>
</recordset>
