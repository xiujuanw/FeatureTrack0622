<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;rml.ofc.fix.parents&quot; and label=&quot;start&quot;" recordid="rml.ofc.fix.parents - start">
    <application type="string">rml.ofc.fix.parents</application>
    <label type="label">start</label>
    <comments type="string">for $L.i = 1 to $L.lng do (if (not null(17 in $L.i in $L.data)) then ($L.parent=17 in $L.i in $L.data;$L.parents={};for $L.j = 1 to $L.lng do (if ($L.j=$L.parent or 31 in $L.j in $L.data=$L.parent) then ($L.temp=$L.j;if (not nullsub(11 in $L.temp in $L.data, false)) then if (30 in $L.i in $L.data~=$L.temp) then if (not null(36 in $L.temp in $L.data)) then ($L.parents=$L.parents+denull(36 in $L.temp in $L.data))));37 in $L.i in $L.data=denull($L.parents);if (not nullsub(11 in $L.parent in $L.data, false)) then (17 in $L.i in $L.data=1 in 37 in $L.i in $L.data)))</comments>
    <normal type="label">exit.normal</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.data=$4</statements>
      <statements sctype="operator">$L.i=1</statements>
      <statements sctype="operator">$L.lng=lng(denull($L.data))</statements>
      <statements sctype="operator">$L.old.group.parent={};for $L.i = 1 to $L.lng do ($L.i in $L.old.group.parent=31 in $L.i in $L.data)</statements>
      <statements sctype="operator">for $L.i = 1 to $L.lng do ($L.gNameIsAvailable=jscall("ocmlQuotesLineItem.groupIsAvailable", 28 in $L.i in $L.data);if (not  (nullsub(11 in $L.i in $L.data, false)) and $L.gNameIsAvailable) then for $L.x = ($L.i+1) to $L.lng do (if (17 in $L.x in $L.data=$L.i and 30 in $L.x in $L.data=$L.i) then (28 in $L.x in $L.data=28 in $L.i in $L.data)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">for $L.i = 1 to $L.lng do (if (not  (null(17 in $L.i in $L.data))) then ($L.parent=17 in $L.i in $L.data;$L.parents={};for $L.j = 1 to $L.lng do (if ($L.j=$L.parent or 31 in $L.j in $L.data=$L.parent) then ($L.temp=$L.j;if (not  (nullsub(11 in $L.temp in $L.data, false))) then if (30 in $L.i in $L.data~=$L.temp) then if (not  (null(denull(36 in $L.temp in $L.data)))) then ($L.parents=denull($L.parents)+denull(36 in $L.temp in $L.data))));37 in $L.i in $L.data=denull($L.parents);$L.lng.parent=lng(denull($L.parents));if (not  (nullsub(11 in $L.parent in $L.data, false))) then if (not  (same($L.parent, 30 in $L.i in $L.data))) then for $L.gp.count = 1 to $L.lng.parent do (if null(31 in ($L.gp.count in $L.parents) in $L.data) then (17 in $L.i in $L.data=nullsub($L.gp.count in 37 in $L.i in $L.data, 17 in $L.i in $L.data))) else (17 in $L.i in $L.data=17 in $L.parent in $L.data)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">for $L.ini.date = 1 to $L.lng do ($L.ini.date in $L.date.array=25 in $L.ini.date in $L.data);$L.req.date=min($L.date.array);for $L.pos = 1 to $L.lng do (if (17 in $L.pos in $L.data~=NULL and 30 in $L.pos in $L.data~=NULL and 17 in $L.pos in $L.data~=30 in $L.pos in $L.data and 34 in $L.pos in $L.data=NULL) then ($L.parent.line=17 in $L.pos in $L.data;for $L.x = 1 to $L.lng do (if (28 in $L.x in $L.data=28 in $L.parent.line in $L.data and 15 in $L.x in $L.data&lt;15 in $L.parent.line in $L.data and nullsub(11 in $L.x in $L.data, false)) then ($L.parent.line=$L.x));if (nullsub(11 in $L.parent.line in $L.data, false) or $L.parent.line~=30 in $L.pos in $L.data) then (24 in $L.pos in $L.data=nullsub(27 in $L.parent.line in $L.data, 25 in $L.parent.line in $L.data);25 in $L.pos in $L.data=24 in $L.pos in $L.data+nullsub(15 in $L.pos in $L.data, '00:00:00')) else (24 in $L.pos in $L.data=24 in $L.parent.line in $L.data;25 in $L.pos in $L.data=24 in $L.pos in $L.data+nullsub(15 in $L.pos in $L.data, '00:00:00'))))</statements>
      <statements sctype="operator">for $L.pos = 1 to $L.lng do ($L.pos in $L.lead.array=25 in $L.pos in $L.data);$L.lead.time=min($L.lead.array);if ($L.lead.time&lt;$L.req.date) then ($L.start.time=$L.req.date - $L.lead.time;if ($L.start.time~='00:00:00') then for $L.pos = 1 to $L.lng do (24 in $L.pos in $L.data=24 in $L.pos in $L.data+$L.start.time;25 in $L.pos in $L.data=25 in $L.pos in $L.data+$L.start.time))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">for $L.i = 1 to lng($L.data) do (31 in $L.i in $L.data=NULL;37 in $L.i in $L.data=denull(37 in $L.i in $L.data))</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.data) do (if (31 in $L.i in $L.data=NULL and nullsub(11 in $L.i in $L.data, false)) then ($L.group=28 in $L.i in $L.data;if ($L.group~=NULL) then ($L.min=25 in $L.i in $L.data;for $L.j = ($L.i+1) to lng($L.data) do (if (28 in $L.j in $L.data=$L.group and nullsub(11 in $L.i in $L.data, false)) then (31 in $L.j in $L.data=$L.i;$L.min=min($L.min, 25 in $L.j in $L.data)));for $L.j = ($L.i+1) to lng($L.data) do (if (28 in $L.j in $L.data=$L.group) then (27 in $L.j in $L.data=nullsub($L.min, 27 in $L.j in $L.data))))))</statements>
      <statements sctype="operator">for $L.i = 1 to $L.lng do (if (not  (null(17 in $L.i in $L.data))) then ($L.parent=17 in $L.i in $L.data;if (not  (nullsub(11 in $L.parent in $L.data, false))) then if same($L.parent, 30 in $L.i in $L.data) then (17 in $L.i in $L.data=17 in $L.parent in $L.data;37 in $L.i in $L.data=denull(37 in $L.i in $L.data+37 in $L.parent in $L.data))))</statements>
      <statements sctype="operator">for $L.i = 1 to $L.lng do (if (not  (null(17 in $L.i in $L.data))) then ($L.temp=17 in $L.i in $L.data;if (not  (nullsub(11 in $L.temp in $L.data, false))) then if (not  (null(28 in $L.temp in $L.data))) then ($L.group=28 in $L.temp in $L.data;31 in $L.i in $L.data=31 in $L.temp in $L.data;$L.temp+=1;for $L.x = 1 to $L.lng do (if (28 in $L.x in $L.data=$L.group and 11 in $L.x in $L.data) then (17 in $L.i in $L.data=$L.x;$L.x=$L.lng+1)))))</statements>
      <statements sctype="operator">$L.groups={};for $L.i = 1 to $L.lng do (if (not  (null(28 in $L.i in $L.data))) then if (index(28 in $L.i in $L.data, $L.groups)=0) then ($L.groups=$L.groups+{28 in $L.i in $L.data}))</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull($L.groups)) do ($L.group=$L.i in $L.groups;$L.group.parent=NULL;for $L.x = 1 to $L.lng do (if (28 in $L.x in $L.data=$L.group) then if (not  (nullsub(11 in $L.x in $L.data)) and not  (null(1 in 36 in $L.x in $L.data))) then (if null($L.group.parent) then ($L.group.parent=1 in 36 in $L.x in $L.data)) else (if nullsub(11 in $L.x in $L.data) then if null($L.group.parent) then ($L.group.parent=$L.x) else (31 in $L.x in $L.data=$L.group.parent))))</statements>
      <statements sctype="operator">for $L.i = 1 to $L.lng do ($L.temp=17 in $L.i in $L.data;if (not  (null($L.temp))) then if same(30 in $L.i in $L.data, 30 in $L.temp in $L.data) then ($L.old.gp=$L.temp in $L.old.group.parent;if (not  (same($L.old.gp, 31 in $L.temp in $L.data))) then for $L.x = 1 to lng($L.old.group.parent) do ($L.y=$L.x in $L.old.group.parent;if same($L.y, $L.temp) then (37 in $L.i in $L.data=37 in $L.i in $L.data+{$L.x}))))</statements>
      <statements sctype="operator">for $L.i = 1 to $L.lng do (if (not  (null(31 in $L.i in $L.data))) then ($L.temp=31 in $L.i in $L.data;if (not  (null(37 in $L.temp in $L.data))) then for $L.x = 1 to lng(37 in $L.temp in $L.data) do (if (index($L.x in 37 in $L.temp in $L.data, 37 in $L.i in $L.data)=0) then (37 in $L.i in $L.data=37 in $L.i in $L.data+{$L.x in 37 in $L.temp in $L.data}))))</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">11</sysmodcount>
    <sysmoduser type="string">qiqingsong</sysmoduser>
    <sysmodtime type="dateTime">06/19/14 03:07:02</sysmodtime>
  </record>
</recordset>
