<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;record.update.conflicts&quot; and label=&quot;template.data.save&quot;" recordid="record.update.conflicts - template.data.save">
    <application type="string">record.update.conflicts</application>
    <label type="label">template.data.save</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">diff.template</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">loop</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.i=1</statements>
      <statements sctype="operator">$L.template=$L.template.save</statements>
      <statements sctype="operator">$L.record=$L.file.save</statements>
    </statements>
    <cond.input type="operator">$L.i&lt;=$L.lng</cond.input>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions sctype="array">
      <expressions sctype="operator">$L.value=(1 in $L.i in templateInfo in $L.template) in $L.record</expressions>
      <expressions sctype="operator">if (type($L.value)=8 and (denull($L.value)={} or $L.value="{}")) then ($L.value=NULL)</expressions>
      <expressions sctype="operator">if (not  (null($L.value)) and type($L.value)=3) then if (index("/", str($L.value))&gt;0) then ($L.value=$L.value - $L.tod)</expressions>
      <expressions sctype="operator">if (not  (null($L.value))) then (3 in $L.i in templateInfo in $L.template=str($L.value))</expressions>
      <expressions sctype="operator">$L.temp=" ";$L.temp=""</expressions>
      <expressions sctype="operator">$L.displayTemp=""</expressions>
      <expressions sctype="operator">$L.void=evaluate(parse("$L.newline=\"\\0a\"", 11))</expressions>
      <expressions sctype="operator">if (type($L.value)=8) then (for $L.x = 1 to lng(denull($L.value)) do ($L.temp=$L.temp+str(nullsub($L.x in $L.value, ""))+$L.newline;$L.displayTemp=$L.displayTemp+str(nullsub($L.x in $L.value, ""))+" ");3 in $L.i in templateInfo in $L.template=str($L.temp);6 in $L.i in templateInfo in $L.template=str($L.displayTemp)) else ($L.temp=$L.value)</expressions>
      <expressions sctype="string"/>
      <expressions sctype="operator">$L.globallist=NULL</expressions>
      <expressions sctype="operator">$L.index=index(1 in $L.i in templateInfo in $L.template, fields in $L.datadict)</expressions>
      <expressions sctype="operator">if ($L.index&gt;0) then ($L.globallist=$L.index in globallist in $L.datadict)</expressions>
      <expressions sctype="operator">if (not  (null($L.globallist))) then ($L.temp=nullsub(jscall("tableFunctions.getGlDisplayValue", $L.globallist, 3 in $L.i in templateInfo in $L.template), 3 in $L.i in templateInfo in $L.template))</expressions>
      <expressions sctype="operator">if same("", $L.displayTemp) then (6 in $L.i in templateInfo in $L.template=str($L.temp))</expressions>
      <expressions sctype="operator">if (2 in $L.i in templateInfo in $L.template="8.2" and nullsub(7 in $L.i in templateInfo in $L.template, "other")~="description" and nullsub(3 in $L.i in templateInfo in $L.template, "{}")~="{}") then (3 in $L.i in templateInfo in $L.template="{\""+3 in $L.i in templateInfo in $L.template+"\"}")</expressions>
      <expressions sctype="operator">if (2 in $L.i in templateInfo in $L.template="3") then (6 in $L.i in templateInfo in $L.template=str((1 in $L.i in templateInfo in $L.template) in $L.record))</expressions>
      <expressions sctype="string"/>
      <expressions sctype="operator">$L.i+=1</expressions>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysmoduser type="string">shiji.shu</sysmoduser>
    <sysmodtime type="dateTime">09/18/13 14:01:57</sysmodtime>
  </record>
</recordset>
