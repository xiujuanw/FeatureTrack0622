<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;ocml.dates.lead.set&quot; and label=&quot;build.query&quot;" recordid="ocml.dates.lead.set - build.query">
    <application type="string">ocml.dates.lead.set</application>
    <label type="label">build.query</label>
    <comments type="string">if (not null($PARENT.NO) and not null($SKIP.CHILDREN.NO) and not null($L.passed.line)) then if (not null(group.parent in $L.passed.line)) then ($L.mode="parents";$L.skip.line=$SKIP.CHILDREN.NO;$L.query="parent.quote=\""+$L.quote.number+"\" and (number=\""+$L.parent.line.number+"\")")</comments>
    <normal type="label">select.line.items</normal>
    <error type="localVar">$3</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.passed.line=$6</statements>
      <statements sctype="operator">$7="parent.quote=\""+str($5)+"\" and (parent.line.item=\""+str($8)+"\" or group.parent=\""+str($8)+"\") and open=true and status=\"requested\""</statements>
      <statements sctype="operator">if null($8) then ($7="parent.quote=\""+str($5)+"\" and parent.line.item=NULL and open=true and status=\"requested\"")</statements>
      <statements sctype="operator">$L.quote.number=str($5)</statements>
      <statements sctype="operator">$L.parent.line.number=$8</statements>
      <statements sctype="operator">$L.query="parent.quote=\""+$L.quote.number+"\" and (parent.line.item=\""+$L.parent.line.number+"\" or group.parent=\""+$L.parent.line.number+"\"  ) and open=true and status=\"requested\""</statements>
      <statements sctype="operator">if null($L.parent.line.number) then ($L.query="parent.quote=\""+$L.quote.number+"\" and open=true and status=\"requested\"")</statements>
      <statements sctype="operator">$L.i=0</statements>
      <statements sctype="operator">$L.requested.date=$4</statements>
      <statements sctype="operator">$L.mode="all"</statements>
      <statements sctype="operator">if (not  (null($8))) then ($L.mode="subords";$L.query="parent.quote=\""+$L.quote.number+"\" and number=\""+$L.parent.line.number+"\"";$L.skip.line=$L.parent.line.number)</statements>
      <statements sctype="operator">if (not  (null($8)) and not  (null($14))) then ($L.mode="parents";$L.skip.line=$14;$L.query="parent.quote=\""+$L.quote.number+"\" and number=\""+$L.parent.line.number+"\"")</statements>
      <statements sctype="operator">$L.parents={};$L.skip.lines={}</statements>
      <statements sctype="operator">if (not  (null($8)) and not  (null($L.passed.line))) then if (not  (null(group.parent in $L.passed.line))) then ($L.mode="subords";$L.query="parent.quote=\""+$L.quote.number+"\" and (number=\""+$L.parent.line.number+"\" or group.parent=\""+number in $L.passed.line+"\" or group.parent=\""+$L.parent.line.number+"\" or group.parent=\""+group.parent in $L.passed.line+"\" or number=\""+group.parent in $L.passed.line+"\")";$L.skip.line=$L.parent.line.number;$L.skip.lines=insert($L.skip.lines, 0, 1, $L.parent.line.number))</statements>
      <statements sctype="operator">$L.dont.update=$11</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">19</sysmodcount>
    <sysmoduser type="string">rolfel</sysmoduser>
    <sysmodtime type="dateTime">09/01/08 23:24:30</sysmodtime>
  </record>
</recordset>
