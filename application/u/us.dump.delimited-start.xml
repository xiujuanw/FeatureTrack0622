<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;us.dump.delimited&quot; and label=&quot;start&quot;" recordid="us.dump.delimited - start">
    <application type="string">us.dump.delimited</application>
    <label type="label">start</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">test</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.excel=$10</statements>
      <statements sctype="operator">$L.file=$4;$L.hide=nullsub($9, false);$L.form="ask.export";if $L.hide then ($L.form="ask.export2");if ($L.excel="excel") then ($L.form="ask.export.excel")</statements>
      <statements sctype="operator">$L.format=nullsub($5, current.format())</statements>
      <statements sctype="operator">$L.filename=$6</statements>
      <statements sctype="operator">$L.array={}</statements>
      <statements sctype="operator">$L.handle=-1</statements>
      <statements sctype="operator">$L.string=""</statements>
      <statements sctype="operator">$L.t="	"</statements>
      <statements sctype="operator">$L.open=false</statements>
      <statements sctype="operator">$L.rio.msg=scmsg(77, "us")</statements>
      <statements sctype="operator">$L.export.headers=nullsub($8, true)</statements>
      <statements sctype="operator">$L.delim=nullsub($7, $L.t)</statements>
      <statements sctype="operator">$L.sep="	"</statements>
      <statements sctype="operator">$L.void=rtecall("rid", $L.rc, $L.file, $L.recordnumber)</statements>
      <statements sctype="operator">$L.void=rtecall("rfirst", $L.rc2, $L.file)</statements>
      <statements sctype="operator">$L.bad.delim.msg=scmsg(1830, "us")</statements>
      <statements sctype="operator">$L.exported.msg=scmsg(1973, "us")</statements>
      <statements sctype="operator">$L.bad.filename.msg=scmsg(2217, "us")</statements>
      <statements sctype="operator">$L.encoding="utf8"</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.excel="excel") then ($L.delim="csv";$L.encoding="utf16le")</statements>
      <statements sctype="operator">$L.success=false</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.propertyArray=jscall("RendingUtil.generateFormPropertyArray", $L.format)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.propertyNameList={}</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.propertyArray) do ($L.propertyName=1 in $L.i in $L.propertyArray;if (index($L.propertyName, $L.propertyNameList)&lt;=0) then ($L.lng=lng($L.propertyNameList)+1;$L.lng in $L.propertyNameList=$L.propertyName))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.record.count=0</statements>
      <statements sctype="operator">$L.filesize=0</statements>
      <statements sctype="operator">$L.filesize.max=jscall("RendingUtil.getMaxExternalFileSize")/2</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.filename))) then if (not  (null($L.delim))) then ($L.sep=$L.delim)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:44:52</sysmodtime>
  </record>
</recordset>
