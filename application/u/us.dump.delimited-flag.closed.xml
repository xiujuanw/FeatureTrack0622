<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;us.dump.delimited&quot; and label=&quot;flag.closed&quot;" recordid="us.dump.delimited - flag.closed">
    <application type="string">us.dump.delimited</application>
    <label type="label">flag.closed</label>
    <comments type="string">add .csv for export to excel</comments>
    <normal type="label">check.delim</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.open=false</statements>
      <statements sctype="operator">if ($L.delim="tab") then ($L.delim=$L.t)</statements>
      <statements sctype="operator">if ($L.delim="comma") then ($L.delim=",")</statements>
      <statements sctype="operator">if ($L.delim="asterix") then ($L.delim="*")</statements>
      <statements sctype="operator">if ($L.delim="caret") then ($L.delim="^")</statements>
      <statements sctype="operator">if ($L.delim="other") then ($L.delim=$L.other)</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">if $L.hide then if ($L.delim="csv" or $L.delim="ssv") then ($L.filename="export.csv") else ($L.filename="export.txt")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.suffix=""</statements>
      <statements sctype="operator">$L.bad.filename=false</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (lng(nullsub($L.filename, ""))&gt;1) then for $i = 1 to lng($L.filename) do ($l.char=substr($L.filename, $i, 1);if ($l.char="?" or $l.char="*" or $l.char="&lt;" or $l.char="&gt;" or $l.char="|" or $l.char="\"") then ($L.bad.filename=true))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (lng(nullsub($L.filename, ""))&gt;0 and $L.bad.filename=false) then ($L.suffix=substr($L.filename, lng($L.filename)))</statements>
      <statements sctype="operator">if ($L.suffix="\\" or $L.suffix="/" or $L.suffix="*" or $L.suffix="." or $L.suffix=":" or $L.suffix="&lt;" or $L.suffix="&gt;" or $L.suffix="?" or $L.suffix="|" or $L.suffix="\"") then ($L.bad.filename=true)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (nullsub($L.filename, "")~="" and not  ($L.bad.filename)) then if ($L.excel="excel" and substr($L.filename, lng($L.filename) - 3, 4)~=".csv") then ($L.filename=$L.filename+".csv")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.sep=$L.delim</statements>
      <statements sctype="operator">if ($L.delim="csv") then ($L.sep=",")</statements>
      <statements sctype="operator">if ($L.delim="ssv") then ($L.sep=";")</statements>
      <statements sctype="operator">if ($L.excel="excel") then ($L.sep="	")</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:44:52</sysmodtime>
  </record>
</recordset>
