<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;us.gen.datadict&quot; and label=&quot;process&quot;" recordid="us.gen.datadict - process">
    <application type="string">us.gen.datadict</application>
    <label type="label">process</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">get</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.rem=" If the extattrname field is not null AND it is NOT an array, then initialize it to be a null array. "</statements>
      <statements sctype="operator">if (not  (null(extattrname in $L.file)) and type(extattrname in $L.file)~=8) then (extattrname in $L.file={})</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (type(globallist in $L.file)~=8) then (globallist in $L.file={, })</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.old=fields in $L.file;$L.man=nullsub(mandatory in $L.file, {});$L.def=nullsub(defaults in $L.file, {});$L.avail=nullsub(avail in $L.file, {});$L.valid=nullsub(validations in $L.file, {});$L.vis=nullsub(invisible in $L.file, {});$L.ro=nullsub(readonly in $L.file, {})</statements>
      <statements sctype="operator">$L.cap=captions in $L.file;$L.mfields=nullsub(matchfields in $L.file, {});$L.mfiles=nullsub(matchfiles in $L.file, {});$L.ldap=nullsub(ldapattrname in $L.file, {});$L.encrypt=nullsub(encrypt in $L.file, {});$L.ext=nullsub(extattrname in $L.file, {});$L.system.fields=nullsub(system.fields in $L.file, {})</statements>
      <statements sctype="operator">$L.globallist=nullsub(globallist in $L.file, {});$L.sysFieldType=nullsub(sysFieldType in $L.file, {});$L.field.usage=nullsub(fieldUsage in $L.file, {});$L.reference.table=nullsub(reference.table in $L.file, {})</statements>
      <statements sctype="operator">mandatory in $L.file={};ldapattrname in $L.file={}</statements>
      <statements sctype="operator">fields in $L.file={};types in $L.file={};avail in $L.file={};invisible in $L.file={};readonly in $L.file={}</statements>
      <statements sctype="operator">captions in $L.file={};reference.table in $L.file={};defaults in $L.file={};matchfields in $L.file={};matchfiles in $L.file={};validations in $L.file={};encrypt in $L.file={};extattrname in $L.file={};system.fields in $L.file={}</statements>
      <statements sctype="operator">name in $L.file=$L.name;fieldUsage in $L.file={};sysFieldType in $L.file={};globallist in $L.file={}</statements>
      <statements sctype="operator">sqlbasename in $L.file=nullsub(sqlbasename in $L.file, $L.sqlbasename)</statements>
      <statements sctype="operator">system in $L.file="miscellaneous"</statements>
      <statements sctype="operator">author in $L.file=nullsub(author in $L.file, operator())</statements>
      <statements sctype="operator">creation.date in $L.file=nullsub(creation.date in $L.file, tod())</statements>
      <statements sctype="operator">editor in $L.file=operator()</statements>
      <statements sctype="operator">last.edit.date in $L.file=tod()</statements>
      <statements sctype="string"/>
      <statements sctype="operator">unique.key in $L.file={}</statements>
      <statements sctype="operator">$L.keys=denull(key in $L.dbdict)</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.keys) do ($L.key=$L.i in $L.keys;if (1 in $L.key=64) then (type in $L.file="IR";condition in $L.file=nullsub(condition in $L.file, true)) else (if (1 in $L.key=28 or 1 in $L.key=12 and lng(unique.key in $L.file)=0) then (unique.key in $L.file=2 in $L.key)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.tmp.datadict.qry=nullsub("name~=\""+name in $L.file+"\" and sqlbasename=\""+str(sqlbasename in $L.file)+"\"", "false")</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">51</sysmodcount>
    <sysmoduser type="string">xuejun</sysmoduser>
    <sysmodtime type="dateTime">03/04/15 18:56:30</sysmodtime>
  </record>
</recordset>
