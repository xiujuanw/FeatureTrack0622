<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;Workflow.unloadByName&quot; and label=&quot;get.common.ruleset&quot;" recordid="Workflow.unloadByName - get.common.ruleset">
    <application type="string">Workflow.unloadByName</application>
    <label type="label">get.common.ruleset</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">unload.wf.rules</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.rulesets=denull(nullsub(onCreateRules in $L.workflow, {}))+denull(nullsub(onUpdateRules in $L.workflow, {}))+denull(nullsub(afterAddRules in $L.workflow, {}))+denull(nullsub(afterUpdateRules in $L.workflow, {}))+denull(nullsub(initRules in $L.workflow, {}))+denull(nullsub(onDisplayRules in $L.workflow, {}))+denull(nullsub(onEnterRules in $L.workflow, {}))+denull(nullsub(onExitRules in $L.workflow, {}))+denull(nullsub(afterEnterRules in $L.workflow, {}))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null(denull($L.rulesets)))) then ($L.ruleset.sql="id isin "+str($L.rulesets)) else ($L.ruleset.sql="false")</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">$L.tRules={}</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">for $L.i = 1 to lng(denull(action in $L.workflow)) do ($L.tRules=$L.tRules+{2 in $L.i in action in $L.workflow})</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull(backendTransition in $L.workflow)) do ($L.tRules=$L.tRules+{3 in $L.i in denull(backendTransition in $L.workflow)})</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null(denull($L.tRules)))) then ($L.tRules.sql="id isin "+str($L.tRules)) else ($L.tRules.sql="false")</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">$L.workflow.message.sql="message.id # \"workflow:"+name in $L.workflow+"_"+tableName in $L.workflow+":\" and class=\"wfA\" and syslanguage~=\"xxx\""</statements>
      <statements sctype="operator">if (not  (null(denull($L.rulesets)))) then ($L.workflow.rMsg.sql="message.id isin "+str($L.rulesets)+" and class#\"local:RuleSet\" and syslanguage~=\"xxx\"") else ($L.workflow.rMsg.sql="false")</statements>
      <statements sctype="operator">if (not  (null(denull($L.tRules)))) then ($L.workflow.rMsg2.sql="message.id isin "+str($L.tRules)+" and class#\"local:RuleSet\" and syslanguage~=\"xxx\"") else ($L.workflow.rMsg2.sql="false")</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">hanrui</sysmoduser>
    <sysmodtime type="dateTime">08/10/14 17:27:10</sysmodtime>
  </record>
</recordset>
