<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;trigger.operator.check&quot; and label=&quot;password.ok.to.change&quot;" recordid="trigger.operator.check - password.ok.to.change">
    <application type="string">trigger.operator.check</application>
    <label type="label">password.ok.to.change</label>
    <comments type="string">if (keep.history in $G.system.info=true and pwd.history.type in $G.system.info="limited.hist") then ($L.icounter in password.hist in $L.file=NULL);$G.Joeh=nullsub(pwd.change.email in $G.system.info, false)</comments>
    <normal type="label">send.message</normal>
    <error type="label">exit.error</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">user.login.count in $L.file=0</statements>
      <statements sctype="operator">password.date in $L.file=tod()</statements>
      <statements sctype="operator">do.password.reset in $L.file=false</statements>
      <statements sctype="operator">$L.old.password=password in $L.file.old</statements>
      <statements sctype="operator">$L.old.password.date=password.date in $L.file.old</statements>
      <statements sctype="operator">$L.old.reset.by=reset.by in $L.file;reset.by in $L.file=operator()</statements>
      <statements sctype="operator">if null(expire.password in $L.file) then (expire.password in $L.file=false)</statements>
      <statements sctype="operator">if (expire.password in $L.file.old=true and name in $L.file=operator()) then (expire.password in $L.file=false)</statements>
      <statements sctype="operator">$L.message="Password was reset by  "+$L.reset.by</statements>
      <statements sctype="operator">pwd.history in $L.file=nullsub(pwd.history in $L.file, {{[]}})</statements>
      <statements sctype="operator">if (keep.history in $G.system.info=true) then (pwd.history in $L.file={{[$L.old.password, $L.old.password.date, $L.old.reset.by]}}+pwd.history in $L.file)</statements>
      <statements sctype="operator">$L.pwd.hist.limit=lng(denull(pwd.history in $L.file));$L.pwd.hist.limit=pwd.hist.limit in $G.system.info+1</statements>
      <statements sctype="operator">$L.icounter=$L.pwd.hist.limit;$L.len=lng(denull(pwd.history in $L.file))</statements>
      <statements sctype="operator">if (keep.history in $G.system.info=true and pwd.history.type in $G.system.info="limited.hist") then while ($L.icounter&lt;=$L.len) do ($L.icounter in pwd.history in $L.file={[, , ]};$L.icounter+=1)</statements>
      <statements sctype="operator">pwd.history in $L.file=denull(pwd.history in $L.file)</statements>
      <statements sctype="operator">$7=0</statements>
      <statements sctype="string"/>
      <statements sctype="operator">cleanup($G.is.operator.file.load)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">11</sysmodcount>
    <sysmoduser type="string">mhuang</sysmoduser>
    <sysmodtime type="dateTime">12/10/10 08:42:45</sysmodtime>
  </record>
</recordset>
