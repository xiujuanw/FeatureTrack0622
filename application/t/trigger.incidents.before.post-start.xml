<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;trigger.incidents.before.post&quot; and label=&quot;start&quot;" recordid="trigger.incidents.before.post - start">
    <application type="string">trigger.incidents.before.post</application>
    <label type="label">start</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">decide.update.cart</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">unassigned in $5=null(assignment in $5)</statements>
      <statements sctype="operator">$L.incident.id=incident.id in $5</statements>
      <statements sctype="operator">callback.type in $5=nullsub(callback.type in $5, "None")</statements>
      <statements sctype="operator">$L.time=tod()</statements>
      <statements sctype="operator">if same(nullsub(full.name in $G.sm.environment, full.name in $G.sm.global.environment), true) then ($L.operator=nullsub($lo.ufname, nullsub(operator(), "NULL"))) else ($L.operator=nullsub(operator(), "NULL"))</statements>
      <statements sctype="operator">$L.operator.uid=nullsub(operator(), "NULL")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.file=$5;$L.old=$4</statements>
      <statements sctype="operator">open in $L.file=nullsub(open in $L.file, "Open - Idle")</statements>
      <statements sctype="operator">update.time in $L.file=$L.time</statements>
      <statements sctype="operator">updated.by in $L.file=$L.operator</statements>
      <statements sctype="operator">updated.by.uid in $L.file=$L.operator.uid</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($6=1) then (open.time in $L.file=nullsub(open.time in $L.file, update.time in $L.file);opened.by in $L.file=nullsub(opened.by in $L.file, updated.by in $L.file);opened.by.uid in $L.file=nullsub(opened.by.uid in $L.file, updated.by.uid in $L.file))</statements>
      <statements sctype="operator">if ($6=1 and open in $L.file="Closed") then (close.time in $L.file=nullsub(close.time in $L.file, $L.time);closed.by in $L.file=nullsub(closed.by in $L.file, $L.operator))</statements>
      <statements sctype="operator">if ($6~=1 and open in $L.file="Closed" and not  (same(open in $L.file, open in $L.old))) then (close.time in $L.file=$L.time;closed.by in $L.file=$L.operator)</statements>
      <statements sctype="operator">if ($G.ess=false or $G.ess=NULL) then (owner.name in $L.file=nullsub(owner.name in $L.file, $L.operator))</statements>
      <statements sctype="operator">solution.candidate in $L.file=nullsub(solution.candidate in $L.file, false)</statements>
      <statements sctype="operator">if (open in $L.file~="Closed" and jscall("IncidentMatching.hasRelatedIncident", incident.id in $L.file)) then (first.call in $L.file=false)</statements>
      <statements sctype="operator">$L.exit.error.msg=scmsg(96, "sm")</statements>
      <statements sctype="operator">reset.approvals in $L.file=false</statements>
      <statements sctype="operator">$L.refresh=false</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.void=jscall("SLMCalculation.logAssignmentChange", $5, $4)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">24</sysmodcount>
    <sysmoduser type="string">miquan</sysmoduser>
    <sysmodtime type="dateTime">02/10/15 17:00:26</sysmodtime>
  </record>
</recordset>
