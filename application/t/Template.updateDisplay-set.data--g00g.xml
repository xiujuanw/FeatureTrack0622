<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;Template.updateDisplay&quot; and label=&quot;set.data&quot;" recordid="Template.updateDisplay - set.data">
    <application type="string">Template.updateDisplay</application>
    <label type="label">set.data</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">check.display.template</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.value=3 in $L.i in templateInfo in $L.template</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.value={} or $L.value="{}") then ($L.value=NULL)</statements>
      <statements sctype="operator">if $L.value#"{" then (if (index("!|", $L.value)&gt;0) then ($L.value=jscall("StringUtil.escapeAllBackSlash", $L.value));$L.value=evaluate(parse($L.value, 2)))</statements>
      <statements sctype="operator">$L.temp=""</statements>
      <statements sctype="operator">if (type($L.value)=8) then ($L.temp=jscall("Template.makeTemplateInfoValueFromArray", denull($L.value), type(1 in $L.value));3 in $L.i in templateInfo in $L.template=$L.temp) else if (type($L.value)~=1) then ($L.temp=strrep($L.value, $L.tab, " ")) else ($L.temp=$L.value)</statements>
      <statements sctype="operator">$L.globallist=NULL</statements>
      <statements sctype="operator">$L.index=index(1 in $L.i in templateInfo in $L.template, fields in $L.datadict)</statements>
      <statements sctype="operator">if ($L.index&gt;0) then ($L.globallist=$L.index in globallist in $L.datadict)</statements>
      <statements sctype="operator">if (not  (null($L.globallist))) then ($L.temp=nullsub(jscall("tableFunctions.getGlDisplayValue", $L.globallist, 3 in $L.i in templateInfo in $L.template), 3 in $L.i in templateInfo in $L.template))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (2 in $L.i in templateInfo in $L.template="8.2" and nullsub(7 in $L.i in templateInfo in $L.template, "other")~="description") then (3 in $L.i in templateInfo in $L.template="{\""+3 in $L.i in templateInfo in $L.template+"\"}")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">//$L.display.temp=jscall("Template.makeDisplayString", nullsub($L.temp, $L.value))</statements>
      <statements sctype="operator">$L.display.temp=""</statements>
      <statements sctype="operator">$L.refTable=jscall("DisplayName.getRefTable", 1 in $L.i in templateInfo in $L.template, tablename in $L.template)</statements>
      <statements sctype="operator">if jscall("DisplayName.hasDisplayName", $L.refTable) then ($L.display.tempCI=jscall("DisplayName.getDisplayNameByLogicalName", $L.value);if (type($L.display.tempCI)=8) then for $L.x = 1 to lng(denull($L.display.tempCI)) do ($L.display.temp=$L.display.temp+$L.x in $L.display.tempCI+" ") else ($L.display.temp=str($L.display.tempCI))) else ($L.display.temp=jscall("Template.makeDisplayString", nullsub($L.temp, $L.value)))</statements>
      <statements sctype="operator">6 in $L.i in templateInfo in $L.template=$L.display.temp</statements>
      <statements sctype="operator">$L.i+=1</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">20</sysmodcount>
    <sysmoduser type="string">huangzhi</sysmoduser>
    <sysmodtime type="dateTime">08/16/17 21:13:01</sysmodtime>
  </record>
</recordset>
