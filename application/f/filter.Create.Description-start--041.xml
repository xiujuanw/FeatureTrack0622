<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;filter.Create.Description&quot; and label=&quot;start&quot;" recordid="filter.Create.Description - start">
    <application type="string">filter.Create.Description</application>
    <label type="label">start</label>
    <comments type="string">$L.field.caption=jscall("tableFunctions.getFieldCaption", aFieldName in $L.filter, tablename in $L.filter)</comments>
    <normal type="label">check.return.type</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.filter=$4</statements>
      <statements sctype="operator">$L.getROcaption=false</statements>
      <statements sctype="operator">aFieldName in $L.filter=jscall("GetFieldNames.constractSingleFieldDescriptor", aFieldName in $L.filter)</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">$L.table.name=1 in jscall("GetFieldNames.getJoinFieldData", aFieldName in $L.filter, tablename in $L.filter)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.field.name=2 in jscall("GetFieldNames.getJoinFieldData", aFieldName in $L.filter, tablename in $L.filter)</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">if (index(";", $L.field.name)&gt;0) then ($L.getROcaption=true)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.getROcaption=false) then ($L.field.caption=jscall("tableFunctions.getFieldCaption", $L.field.name, tablename in $L.filter))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.getROcaption=true) then ($L.field.caption=get.field.caption($L.field.name))</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.getROcaption=false) then ($L.field.type=jscall("tableFunctions.getFieldType", $L.field.name, tablename in $L.filter))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.tempArray=jscall("KMUtils.parseListToSCArray", $L.field.name, ";")</statements>
      <statements sctype="operator">$L.lastFieldIndex=lng(denull($L.tempArray))</statements>
      <statements sctype="operator">$L.aFieldName=$L.lastFieldIndex in $L.tempArray</statements>
      <statements sctype="operator">$L.lastFieldIndex-=1</statements>
      <statements sctype="operator">$L.aTablename=$L.lastFieldIndex in $L.tempArray</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.getROcaption=true) then ($L.field.type=jscall("tableFunctions.getFieldType", $L.aFieldName, $L.aTablename))</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">$L.aValue1=aValue1 in $L.filter</statements>
      <statements sctype="operator">if ($return.type="gl" and not  (null($L.aValue1)) and index($L.aValue1, $return.list)&gt;0) then ($L.index=index($L.aValue1, $return.list);$L.aValue1=nullsub($L.index in $return.display, $L.aValue1))</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">50</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">07/26/16 12:00:09</sysmodtime>
  </record>
</recordset>
