<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;findReplace.utility&quot; and label=&quot;get.format&quot;" recordid="findReplace.utility - get.format">
    <application type="string">findReplace.utility</application>
    <label type="label">get.format</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">check.filename</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.default.format=nullsub(display.format in $L.object, file.name in $L.object)</statements>
      <statements sctype="operator">if (index("$", nullsub(format.name in $L.state, $L.default.format))&gt;0) then ($L.format=evaluate(parse(nullsub(format.name in $L.state, $L.default.format), 2))) else ($L.format=nullsub(format.name in $L.state, $L.default.format))</statements>
      <statements sctype="operator">if (filename($L.env)="docenv" and nullsub(stored.form.name in $L.env, false)) then ($L.format=nullsub(evaluate(format in $L.file), $L.format))</statements>
      <statements sctype="operator">if (profile.appl in $L.object="revision.environment" and nullsub(default.object in $L.object, false)) then ($L.format="sc.revision.format")</statements>
      <statements sctype="operator">if (profile.appl in $L.object="pagelist.environment" and nullsub(default.object in $L.object, false)) then ($L.format=nullsub(pagelist.format in $L.file, $L.format))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.allow.input=evaluate(input.condition in $L.state, 2);$L.format=get.base.form.name($L.format)</statements>
      <statements sctype="operator">$L.fc.name=$L.format</statements>
      <statements sctype="operator">$L.screen.id=nullsub(display.screen in $L.state, "db.view")</statements>
      <statements sctype="operator">$L.dd.reclist=1</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (profile.appl in $L.object="revision.view.environment") then ($L.screen.id="revision.view.record";use.locking in $L.object=false)</statements>
      <statements sctype="operator">$L.orig.format=$L.format</statements>
      <statements sctype="operator">$L.base.format=get.base.form.name($L.format)</statements>
      <statements sctype="operator">$L.qbe.name=filename($L.file)+".qbe"</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">01/17/07 10:08:34</sysmodtime>
  </record>
</recordset>
