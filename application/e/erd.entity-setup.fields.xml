<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;erd.entity&quot; and label=&quot;setup.fields&quot;" recordid="erd.entity - setup.fields">
    <application type="string">erd.entity</application>
    <label type="label">setup.fields</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">exit.normal</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.fields=denull(field in $L.dbdict);$L.primary.key=NULL</statements>
      <statements sctype="operator">$L.temp.struct={"descriptor"};$L.temp.level={0};$L.last.field=""</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.fields) do ($L.i in $L.old.field=1 in $L.i in $L.fields;$L.i in $L.old.type=4 in $L.i in $L.fields;$L.i in $L.old.level=2 in $L.i in $L.fields;$L.i in $L.old.index=3 in $L.i in $L.fields;if (2 in $L.i in $L.fields=1 in $L.temp.level) then (1 in $L.temp.struct=1 in $L.i in $L.fields) else if (2 in $L.i in $L.fields&gt;1 in $L.temp.level) then ($L.temp.struct=insert($L.temp.struct, 1, 1, 1 in $L.i in $L.fields);$L.temp.level=insert($L.temp.level, 1, 1, 2 in $L.i in $L.fields)) else (if (2 in $L.i in $L.fields&lt;$L.temp.level) then ($L.offset=1 in $L.temp.level - 2 in $L.i in $L.fields;$L.temp.struct=delete($L.temp.struct, 1, $L.offset);$L.temp.level=delete($L.temp.level, 1, $L.offset);1 in $L.temp.struct=1 in $L.i in $L.fields;1 in $L.temp.level=2 in $L.i in $L.fields));$L.i in $L.old.structure=2 in $L.temp.struct;for $L.z = 3 to (lng(denull($L.temp.struct)) - 1) do ($L.i in $L.old.structure=$L.z in $L.temp.struct+"__"+$L.i in $L.old.structure))</statements>
      <statements sctype="operator">$L.field.counter=1</statements>
      <statements sctype="operator">$L.types={"FLOAT", "VARCHAR2", "DATE", "CHAR(1)", "XXX", "XXX", "XXX", "VARCHAR2", "XXX", "VARCHAR2", "VARCHAR2"}</statements>
      <statements sctype="operator">$L.types.lng={10, 20, 1, 1, 0, 0, 0, 88, 0, 100, 110}</statements>
      <statements sctype="operator">$L.xml=$L.xml+{"CREATE TABLE "+name in $L.dbdict+" ( "}</statements>
      <statements sctype="operator">for $L.i = 2 to lng(denull($L.old.field)) do ($L.i in $L.old.field=strrep($L.i in $L.old.field, ".", "_");if ($L.i in $L.old.field=$reserved) then ($L.i in $L.old.field)+="_prgn")</statements>
      <statements sctype="operator">for $L.i = 2 to lng(denull($L.old.field)) do ($L.attr="";if ($L.i in $L.old.type={1, 2, 3, 4, 8, 10, 11} and not  (same($L.i in $L.old.structure, $L.i in $L.old.field))) then ($L.this.name=$L.i in $L.old.field;if ($L.i in $L.old.type=8) then ($L.this.name=$L.this.name);if (null($L.i in $L.old.structure) or $L.i in $L.old.structure="descriptor" or true) then ($L.field.name=$L.this.name) else ($L.field.name=$L.i in $L.old.structure+"_"+$L.this.name);$L.type=evaluate($L.i in $L.old.type) in $L.types;$L.attr="  "+$L.field.name+" "+$L.type;if ($L.i in $L.old.type={2, 10, 11}) then $L.attr+=("("+evaluate($L.i in $L.old.type) in $L.types.lng+")");$L.attr+=",";if (not  (same($L.field.name, $L.last.field))) then ($L.xml=$L.xml+{$L.attr});$L.last.field=$L.field.name))</statements>
      <statements sctype="operator">$L.keys=denull(key in $L.dbdict)</statements>
      <statements sctype="operator">for $L.i = 1 to lng($L.keys) do (if (1 in $L.i in $L.keys=12) then ($L.primary.keys=2 in $L.i in $L.keys) else ($L.primary.keys=2 in 1 in $L.keys))</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull($L.primary.keys)) do ($L.i in $L.primary.keys=strrep($L.i in $L.primary.keys, ",", "_");if ($L.i in $L.primary.keys=$reserved) then ($L.i in $L.primary.keys)+="_prgn")</statements>
      <statements sctype="operator">$L.primary.key=1 in $L.primary.keys;for $L.i = 2 to lng(denull($L.primary.keys)) do $L.primary.key+=(","+$L.i in $L.primary.keys)</statements>
      <statements sctype="operator">if (not  (null($L.primary.key))) then ($L.primary.key=strrep($L.primary.key, ".", "_");$L.xml=$L.xml+{"  PRIMARY KEY("+$L.primary.key+")"})</statements>
      <statements sctype="operator">$L.xml=$L.xml+{");", ""}</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">4</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">05/13/05 05:15:41</sysmodtime>
  </record>
</recordset>
