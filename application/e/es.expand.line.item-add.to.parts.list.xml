<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;es.expand.line.item&quot; and label=&quot;add.to.parts.list&quot;" recordid="es.expand.line.item - add.to.parts.list">
    <application type="string">es.expand.line.item</application>
    <label type="label">add.to.parts.list</label>
    <comments type="string">if (not null($L.parent.part)) then if (index($L.y in $L.groups, dependent.group in $L.parent.part)=0) then (28 in $L.element in data in $L.work=nullsub(28 in $L.parent.element in data in $L.work, 28 in $L.element in data in $L.work);17 in $L.element in data in $L.work=nullsub(17 in $L.parent.element in data in $L.work, 17 in $L.element in data in $L.work))</comments>
    <normal type="label">get.vendor</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.element=lng(denull(data in $L.work))</statements>
      <statements sctype="operator">$L.element+=1;if ($L.element=1) then ($L.bundle.name=part.desc in $L.part)</statements>
      <statements sctype="operator">1 in $L.element in data in $L.work=part.no in $L.part</statements>
      <statements sctype="operator">8 in $L.element in data in $L.work=$L.quantity</statements>
      <statements sctype="operator">21 in $L.element in data in $L.work=level in $L.part</statements>
      <statements sctype="operator">22 in $L.element in data in $L.work=sequence in $L.part</statements>
      <statements sctype="operator">2 in $L.element in data in $L.work=part.desc in $L.part</statements>
      <statements sctype="operator">3 in $L.element in data in $L.work=category in $L.part</statements>
      <statements sctype="operator">11 in $L.element in data in $L.work=evaluate(copy.to.li in $L.part)</statements>
      <statements sctype="operator">12 in $L.element in data in $L.work=evaluate(generate.order in $L.part)</statements>
      <statements sctype="operator">17 in $L.element in data in $L.work=$L.parent.element</statements>
      <statements sctype="operator">20 in $L.element in data in $L.work=defer.selection in $L.part;defer.selection in $L.part=nullsub(defer.selection in $L.part, false);if (defer.selection in $L.part=true) then (11 in $L.element in data in $L.work=true)</statements>
      <statements sctype="operator">21 in $L.element in data in $L.work=level in $L.part</statements>
      <statements sctype="operator">22 in $L.element in data in $L.work=sequence in $L.part</statements>
      <statements sctype="operator">4 in $L.element in data in $L.work="s"</statements>
      <statements sctype="operator">26 in $L.element in data in $L.work=$L.bundle.number</statements>
      <statements sctype="operator">30 in $L.element in data in $L.work=$L.parent.element</statements>
      <statements sctype="operator">$L.y=index(part.no in $L.part, $L.components)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.y&gt;0) then (28 in $L.element in data in $L.work=$L.y in $L.groups)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">14</sysmodcount>
    <sysmoduser type="string">rolfel</sysmoduser>
    <sysmodtime type="dateTime">07/08/07 18:47:01</sysmodtime>
  </record>
</recordset>
