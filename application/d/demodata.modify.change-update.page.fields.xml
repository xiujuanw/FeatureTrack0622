<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;demodata.modify.change&quot; and label=&quot;update.page.fields&quot;" recordid="demodata.modify.change - update.page.fields">
    <application type="string">demodata.modify.change</application>
    <label type="label">update.page.fields</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">update.page</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">if (not  (null(date.entered in $L.page))) then (date.entered in $L.page=date.entered in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(request.date in $L.page))) then (request.date in $L.page=request.date in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(assign.date in $L.page))) then (assign.date in $L.page=assign.date in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(coord.date in $L.page))) then (coord.date in $L.page=coord.date in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(planned.start in $L.page))) then (planned.start in $L.page=planned.start in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(planned.end in $L.page))) then (planned.end in $L.page=planned.end in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(orig.date.entered in $L.page))) then (orig.date.entered in $L.page=orig.date.entered in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(close.time in $L.page))) then (close.time in $L.page=close.time in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(down.start in $L.page))) then (down.start in $L.page=down.start in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(down.end in $L.page))) then (down.end in $L.page=down.end in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(install.date in $L.page))) then (install.date in $L.page=install.date in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(sched.outage.start in $L.page))) then (sched.outage.start in $L.page=sched.outage.start in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(sched.outage.end in $L.page))) then (sched.outage.end in $L.page=sched.outage.end in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(actual.outage.start in $L.page))) then (actual.outage.start in $L.page=actual.outage.start in $L.page+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(actual.outage.end in $L.page))) then (actual.outage.end in $L.page=actual.outage.end in $L.page+$L.diff)</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull(approved.dates in $L.page)) do (if (not  (null($L.i in approved.dates in $L.page))) then ($L.i in approved.dates in $L.page=$L.i in approved.dates in $L.page+$L.diff))</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull(resched.outages in $L.page)) do (if (not  (null($L.i in resched.outages in $L.page))) then ($L.i in resched.outages in $L.page=$L.i in resched.outages in $L.page+$L.diff))</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull(cancelled.outages in $L.page)) do (if (not  (null($L.i in cancelled.outages in $L.page))) then ($L.i in cancelled.outages in $L.page=$L.i in cancelled.outages in $L.page+$L.diff))</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull(parts in $L.page)) do (if (not  (null(1 in $L.i in parts in $L.page))) then (1 in $L.i in parts in $L.page=1 in $L.i in parts in $L.page+$L.diff))</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull(labor in $L.page)) do (if (not  (null(1 in $L.i in labor in $L.page))) then (1 in $L.i in labor in $L.page=1 in $L.i in labor in $L.page+$L.diff))</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysmoduser type="string">prietke</sysmoduser>
    <sysmodtime type="dateTime">11/04/09 19:06:29</sysmodtime>
  </record>
</recordset>
