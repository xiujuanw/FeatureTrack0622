<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;dbdict.cleanup&quot; and label=&quot;process.field&quot;" recordid="dbdict.cleanup - process.field">
    <application type="string">dbdict.cleanup</application>
    <label type="label">process.field</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">decide.keyed</normal>
    <error type="label">decide.error.unlock</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.du.field.index=nullsub(cursor.line(1), 2)</statements>
      <statements sctype="operator">if ($L.du.field.index&lt;=1) then ($L.du.field.index=2)</statements>
      <statements sctype="operator">if ($L.du.field.index&gt;lng(field in $L.file.new)) then ($L.du.field.index=lng(field in $L.file.new))</statements>
      <statements sctype="operator">$L.prev=$L.du.field.index - 1</statements>
      <statements sctype="operator">$L.prev.field.contents=1 in $L.prev in field in $L.file.new</statements>
      <statements sctype="operator">$L.junk=strtrml($L.prev.field.contents);$L.junk=strtrmr($L.prev.field.contents)</statements>
      <statements sctype="operator">$L.field.contents=1 in $L.du.field.index in field in $L.file.new</statements>
      <statements sctype="operator">$L.junk=strtrml($L.field.contents);$L.junk=strtrmr($L.field.contents)</statements>
      <statements sctype="operator">if ($L.field.contents=$L.prev.field.contents and not  (same(4 in $L.du.field.index in field in $L.file.new, 4 in $L.prev in field in $L.file.new))) then ($L.du.field.index=$L.prev)</statements>
      <statements sctype="operator">for $L.i = 1 to lng(field in $L.file.new) do (if (not  (null(1 in $L.i in field in $L.file.new))) then ($L.junk=strtrml(1 in $L.i in field in $L.file.new);$L.junk=strtrmr(1 in $L.i in field in $L.file.new)))</statements>
      <statements sctype="operator">$L.temp.struct={"descriptor"};$L.temp.level={0}</statements>
      <statements sctype="operator">for $L.i = 1 to lng(field in $L.file.new) do (if (2 in $L.i in field in $L.file.new=1 in $L.temp.level) then (1 in $L.temp.struct=1 in $L.i in field in $L.file.new) else if (2 in $L.i in field in $L.file.new&gt;1 in $L.temp.level) then ($L.temp.struct=insert($L.temp.struct, 1, 1, 1 in $L.i in field in $L.file.new);$L.temp.level=insert($L.temp.level, 1, 1, 2 in $L.i in field in $L.file.new)) else (if (2 in $L.i in field in $L.file.new&lt;$L.temp.level) then ($L.offset=1 in $L.temp.level - 2 in $L.i in field in $L.file.new;$L.temp.struct=delete($L.temp.struct, 1, $L.offset);$L.temp.level=delete($L.temp.level, 1, $L.offset);1 in $L.temp.struct=1 in $L.i in field in $L.file.new;1 in $L.temp.level=2 in $L.i in field in $L.file.new));$L.i in $L.new.structure=2 in $L.temp.struct;for $L.z = 3 to (lng($L.temp.struct) - 1) do ($L.i in $L.new.structure=$L.z in $L.temp.struct+","+$L.i in $L.new.structure))</statements>
      <statements sctype="operator">$L.field.key.flag=false;$L.field.key.struct.flag=false</statements>
      <statements sctype="operator">$L.keys=key in $L.file.new;$L.keys=denull($L.keys)</statements>
      <statements sctype="operator">$L.lng=lng($L.keys)</statements>
      <statements sctype="operator">if (4 in $L.du.field.index in field in $L.file.new=9) then for $L.z = 1 to lng(denull($L.new.structure)) do (if (index($L.field.contents, $L.z in $L.new.structure)&gt;0) then for $L.i = 1 to $L.lng do for $L.ii = 1 to lng(denull(2 in $L.i in $L.keys)) do (if (index($L.z in $L.new.structure, $L.ii in 2 in $L.i in $L.keys)&gt;0) then ($L.field.key.struct.flag=true))) else for $L.i = 1 to $L.lng do for $L.ii = 1 to lng(denull(2 in $L.i in $L.keys)) do (if (index($L.field.contents, $L.ii in 2 in $L.i in $L.keys)&gt;0) then ($L.field.key.flag=true))</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">8</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">08/09/05 10:15:02</sysmodtime>
  </record>
</recordset>
