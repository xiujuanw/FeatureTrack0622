<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;db.environment&quot; and label=&quot;set.env.2&quot;" recordid="db.environment - set.env.2">
    <application type="string">db.environment</application>
    <label type="label">set.env.2</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">exit.normal</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">load in $L.env=strrep(str(nullsub(db.load in $L.fc, true)), "$file", "$L.file");load in $L.env=parse(strrep(load in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (load in $L.env=parse(strrep(str(nullsub(load in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">unload in $L.env=strrep(str(nullsub(db.unload in $L.fc, true)), "$file", "$L.file");unload in $L.env=parse(strrep(unload in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (unload in $L.env=parse(strrep(str(nullsub(unload in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">mass.add in $L.env=strrep(str(nullsub(db.mass.add in $L.fc, true)), "$file", "$L.file");mass.add in $L.env=parse(strrep(mass.add in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (mass.add in $L.env=parse(strrep(str(nullsub(mass.add in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">mass.update in $L.env=strrep(str(nullsub(db.mass.update in $L.fc, true)), "$file", "$L.file");mass.update in $L.env=parse(strrep(mass.update in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (mass.update in $L.env=parse(strrep(str(nullsub(mass.update in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">mass.delete in $L.env=strrep(str(nullsub(db.mass.delete in $L.fc, true)), "$file", "$L.file");mass.delete in $L.env=parse(strrep(mass.delete in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (mass.delete in $L.env=parse(strrep(str(nullsub(mass.delete in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">complex.update in $L.env=strrep(str(nullsub(db.complex in $L.fc, true)), "$file", "$L.file");complex.update in $L.env=parse(strrep(complex.update in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (complex.update in $L.env=parse(strrep(str(nullsub(complex.update in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">db.complex in $L.env=complex.update in $L.env</statements>
      <statements sctype="operator">db.template in $L.env=strrep(str(nullsub(db.template in $L.fc, true)), "$file", "$L.file");db.template in $L.env=parse(strrep(db.template in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (db.template in $L.env=parse(strrep(str(nullsub(db.template in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">reset in $L.env=strrep(str(nullsub(db.reset in $L.fc, true)), "$file", "$L.file");reset in $L.env=parse(strrep(reset in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (reset in $L.env=parse(strrep(str(nullsub(reset in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">regen in $L.env=strrep(str(nullsub(db.regen in $L.fc, true)), "$file", "$L.file");regen in $L.env=parse(strrep(regen in $L.env, "$file0", "$L.file.save"), 4);for $L.i = 1 to $L.lng do (regen in $L.env=parse(strrep(str(nullsub(regen in $L.env, true)), "$L.file"+str($L.i), "$file"+str($L.i)), 4))</statements>
      <statements sctype="operator">qbe.format in $L.env=default.qbe in $L.fc</statements>
      <statements sctype="operator">stored.form.name in $L.env=format.field in $L.fc</statements>
      <statements sctype="operator">run.script in $L.env=script in $L.fc</statements>
      <statements sctype="operator">use.default.sort in $L.env=db.sort in $L.fc</statements>
      <statements sctype="operator">default.sort in $L.env=default.sort in $L.fc</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">16</sysmodcount>
    <sysmoduser type="string">nandita</sysmoduser>
    <sysmodtime type="dateTime">03/07/11 09:59:41</sysmodtime>
  </record>
</recordset>
