<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;demodata.modify.incident&quot; and label=&quot;update.fields&quot;" recordid="demodata.modify.incident - update.fields">
    <application type="string">demodata.modify.incident</application>
    <label type="label">update.fields</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">update.fields.2</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">open.time in $L.file=$L.new.time</statements>
      <statements sctype="operator">update.time in $L.file=update.time in $L.file+$L.diff</statements>
      <statements sctype="operator">if (not  (null(close.time in $L.file))) then (close.time in $L.file=close.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(alert.time in $L.file))) then (alert.time in $L.file=alert.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(reopen.time in $L.file))) then (reopen.time in $L.file=reopen.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(deadline.alert in $L.file))) then (deadline.alert in $L.file=deadline.alert in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(prev.update.time in $L.file))) then (prev.update.time in $L.file=prev.update.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(unsuspend.time in $L.file))) then (unsuspend.time in $L.file=unsuspend.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(adj.resolution.time in $L.file))) then (adj.resolution.time in $L.file=adj.resolution.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(site.visit.date in $L.file))) then (site.visit.date in $L.file=site.visit.date in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(resolved.time in $L.file))) then (resolved.time in $L.file=resolved.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(scheduled.start in $L.file))) then (scheduled.start in $L.file=scheduled.start in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(scheduled.completion in $L.file))) then (scheduled.completion in $L.file=scheduled.completion in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(contact.time in $L.file))) then (contact.time in $L.file=contact.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(referral.time in $L.file))) then (referral.time in $L.file=referral.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(backup.start in $L.file))) then (backup.start in $L.file=backup.start in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(backup.end in $L.file))) then (backup.end in $L.file=backup.end in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(respond.time in $L.file))) then (respond.time in $L.file=respond.time in $L.file+$L.diff)</statements>
      <statements sctype="operator">if (not  (null(onsite.time in $L.file))) then (onsite.time in $L.file=onsite.time in $L.file+$L.diff)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">prietke</sysmoduser>
    <sysmodtime type="dateTime">11/04/09 19:06:30</sysmodtime>
  </record>
</recordset>
