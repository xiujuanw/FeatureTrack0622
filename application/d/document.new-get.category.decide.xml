<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;document.new&quot; and label=&quot;get.category.decide&quot;" recordid="document.new - get.category.decide">
    <application type="string">document.new</application>
    <label type="label">get.category.decide</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">get.category.decide.1</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.cat.rights=jscall("security.getToken", jscall("security.getArea", $L.name), "allowedCategory")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.cat.rights~={} and $L.cat.rights~=NULL and not  (null($L.cat.rights))) then ($L.cat.default=$L.cat.rights) else ($L.cat.default=NULL)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (scmsg(strrep($L.name, "view", ""), "tablename")~="Change") then ($L.area.def.cat=jscall("settings.getSettingValue", jscall("security.getArea", $L.name), "default.category"))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.area.def.cat="null") then ($L.area.def.cat=NULL)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.area.def.cat)) and index($L.area.def.cat, nullsub($L.cat.default, {$L.area.def.cat}))&gt;0) then ($L.cat.rights={$L.area.def.cat};$L.active.msg=scmsg(2, "document.new");$L.active=false) else ($L.active.msg=scmsg(1, "document.new", {scmsg(strrep($L.name, "view", ""), "tablename")}))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.active.field="active"</statements>
      <statements sctype="operator">if exists("active", $L.category) then ($L.active.field="active")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.cat.rights~={} and $L.cat.rights~=NULL and not  (null($L.cat.rights))) then ($L.init.cat.sql="name isin "+str($L.cat.rights);if exists($L.active.field, $L.category) then $L.init.cat.sql+=(" and "+$L.active.field+"=true"))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if exists($L.active.field, $L.category) then ($L.init.cat.sql=nullsub($L.init.cat.sql, $L.active.field+"=true")) else ($L.init.cat.sql=nullsub($L.init.cat.sql, true))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.file)) and not  (null((category.field.name in $L.object) in $L.file))) then ($L.init.cat.sql=nullsub(category.search.field in $L.object, "name")+"=\""+(category.field.name in $L.object) in $L.file+"\"")</statements>
      <statements sctype="operator">$L.group={}</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:44:19</sysmodtime>
  </record>
</recordset>
