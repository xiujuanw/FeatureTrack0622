<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;validate.fields&quot; and label=&quot;setup.fieldname&quot;" recordid="validate.fields - setup.fieldname">
    <application type="string">validate.fields</application>
    <label type="label">setup.fieldname</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">validate.scalar</normal>
    <error type="localVar">$3</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$vfldsave=str(field.name in $validity)</statements>
      <statements sctype="operator">cleanup($vrfield);cleanup($vrfsave)</statements>
      <statements sctype="operator">$vrfield=evaluate($vfldsave in $val)</statements>
      <statements sctype="operator">$vrfield=str($vrfield)</statements>
      <statements sctype="operator">$bypass=evaluate(nullsub(bypass.cond in $validity, false))</statements>
      <statements sctype="operator">if (index("SysAdmin", $lo.ucapex)&gt;0) then ($bypass=true)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more sctype="array">
      <comments.more sctype="string">Check to see if a fieldname was passed to the subroutine.  If one was not,</comments.more>
      <comments.more sctype="string">then set the global variable $vfldname equal to the field.name specified in</comments.more>
      <comments.more sctype="string">the current validity table record.  If a field name was passed, then set the</comments.more>
      <comments.more sctype="string">global variable equal to it's value.</comments.more>
      <comments.more sctype="string"/>
      <comments.more sctype="string">The evaluate statement causes $vrfield to be set to the value contained in</comments.more>
      <comments.more sctype="string">the field name (specified in the $vfldname variable) in the global file</comments.more>
      <comments.more sctype="string">variable.</comments.more>
      <comments.more sctype="string"/>
      <comments.more sctype="string">Evaluate the condition of the bypass.cond field and store it in the $bypass</comments.more>
      <comments.more sctype="string">variable.  This is used to control the "bypass" function on the RIO panel.</comments.more>
      <comments.more sctype="string"/>
      <comments.more sctype="string">Set the counter $startpos to 1.  This is used to control the starting</comments.more>
      <comments.more sctype="string">element within the valid values list.</comments.more>
      <comments.more sctype="string"/>
      <comments.more sctype="string">Initialize the arrays $range.select and $values.select to be empty.</comments.more>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">11</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">05/13/05 05:16:02</sysmodtime>
  </record>
</recordset>
