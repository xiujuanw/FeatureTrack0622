<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;sla.refresh.active&quot; and label=&quot;increment&quot;" recordid="sla.refresh.active - increment">
    <application type="string">sla.refresh.active</application>
    <label type="label">increment</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">check.get.suspend.time</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">if running in $L.sloresponse then ($L.responses=$L.responses+{slo.name in $L.sloresponse};current.status in $L.sloresponse=2)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if suspended in $L.sloresponse then (current.status in $L.sloresponse=3)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if $L.finished then (current.status in $L.sloresponse=4)</statements>
      <statements sctype="operator">if (not  ($L.started)) then (current.status in $L.sloresponse=5)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.slaactive.last.is.suspend=index($L.state.length in $L.slaactive.states, $L.suspend.states)</statements>
      <statements sctype="operator">$L.slaactive.last.is.outindex=not  (index($L.state.length in $L.slaactive.states, $L.stat.progression))</statements>
      <statements sctype="operator">$L.legacy.suspend=nullsub(legacy.suspend in $L.control, false)</statements>
      <statements sctype="operator">if ($L.legacy.suspend and lng(denull($L.suspend.states))&gt;0 and ($L.slaactive.last.is.suspend or $L.slaactive.last.is.outindex)) then ($L.returnState=jscall("SLACalculation.calLegacySuspendProcessSLOState", $L.slaactive.states, $L.suspend.states, $L.stat.progression, $L.slo.init.index, $L.slo.final.index, current.status in $L.sloresponse);current.status in $L.sloresponse=val(str($L.returnState), 1))</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">if (breached in $L.sloresponse and agreement.category in $L.sloresponse="sla") then (sla.breach in $L.active=true;current.status in $L.sloresponse=1);if (breached in $L.sloresponse and (agreement.category in $L.sloresponse="ola" or agreement.category in $L.sloresponse="uc")) then ($L.ola.breach=true;current.status in $L.sloresponse=1)</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">$L.lastintervalissuspend=false</statements>
      <statements sctype="operator">$L.total.response.state.intervals=lng($L.start)</statements>
      <statements sctype="operator">$L.total.suspend.state.intervals=lng($L.suspended.end)</statements>
      <statements sctype="operator">$L.last.response.state.start=$L.total.response.state.intervals in $L.start</statements>
      <statements sctype="operator">$L.last.response.state.end=$L.total.response.state.intervals in $L.end</statements>
      <statements sctype="operator">$L.last.suspend.state.end=$L.total.suspend.state.intervals in $L.suspended.end</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">$L.suspend.interval.index=-1</statements>
      <statements sctype="operator">if (not  (breached in $L.sloresponse)) then for $L.i = 1 to $L.total.suspend.state.intervals do (if ($L.i in $L.suspended.start=$L.last.response.state.end) then ($L.lastintervalissuspend=true;$L.suspend.interval.index=$L.i))</statements>
      <statements sctype="operator">$L.last.suspend.state.start=$L.suspend.interval.index in $L.suspended.start</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">8</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">04/20/15 18:31:56</sysmodtime>
  </record>
</recordset>
