<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;scm.advanced&quot; and label=&quot;get.records&quot;" recordid="scm.advanced - get.records">
    <application type="string">scm.advanced</application>
    <label type="label">get.records</label>
    <comments type="string">$L.parsed.query=jscall("viewFunctions.parseQueryString", query in $L.inbox.record)</comments>
    <normal type="label">append.query</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">if (not  (null($L.inbox.record))) then if (null(fieldlist in $L.inbox.record) or lng(denull(fieldlist in $L.inbox.record))=0) then ($L.field.list={inbox.type in $L.inbox.record+";*"}) else ($L.field.list={inbox.type in $L.inbox.record+";*"}+fieldlist in $L.inbox.record) else ($L.field.list={$L.filename+";*"})</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.inbox.record))) then if (use.normalized in $L.inbox.record=true) then if (normalized.query in $L.inbox.record)#"jscall" then ($L.void=evaluate(parse("$L.tempQuery=str("+normalized.query in $L.inbox.record+")", 11));$L.raw.query=$L.tempQuery) else ($L.raw.query=normalized.query in $L.inbox.record) else if (query in $L.inbox.record)#"jscall" then ($L.void=evaluate(parse("$L.tempQuery=str("+query in $L.inbox.record+")", 11));$L.raw.query=$L.tempQuery) else ($L.raw.query=query in $L.inbox.record)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if null($L.inbox.record) then ($L.raw.query=nullsub($L.orig.query, $L.query))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.sortby={}</statements>
      <statements sctype="operator">$L.groupby={}</statements>
      <statements sctype="operator">if (not  (null($L.inbox.record))) then ($L.nAutoFormat=lng(sortBy in $L.inbox.record);for $L.i = 1 to $L.nAutoFormat do ($L.sortby=insert($L.sortby, 0, 1, 2 in $L.i in sortBy in $L.inbox.record)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.inbox.record))) then ($L.nAutoFormat=lng(groupBy in $L.inbox.record);for $L.i = 1 to $L.nAutoFormat do ($L.groupby=insert($L.groupby, 0, 1, 1 in $L.i in groupBy in $L.inbox.record)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">// Add the fields in the AutoFormat rules to the list of fields required to generate the query</statements>
      <statements sctype="operator">if (not  (null($L.inbox.record))) then ($L.nAutoFormat=lng(autoFormat in $L.inbox.record);for $L.i = 1 to $L.nAutoFormat do ($L.field.list=insert($L.field.list, 0, 1, 2 in $L.i in autoFormat in $L.inbox.record)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.query=generate.sql.query($L.field.list, $L.raw.query, $L.filename, false, $L.sortby, $L.groupby)</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.inbox.record))) then ($L.sort=$L.dd.sort)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">50</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">11/15/17 15:58:35</sysmodtime>
  </record>
</recordset>
