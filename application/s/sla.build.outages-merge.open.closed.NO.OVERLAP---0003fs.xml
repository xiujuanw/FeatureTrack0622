<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;sla.build.outages&quot; and label=&quot;merge.open.closed.NO.OVERLAP&quot;" recordid="sla.build.outages - merge.open.closed.NO.OVERLAP">
    <application type="string">sla.build.outages</application>
    <label type="label">merge.open.closed.NO.OVERLAP</label>
    <comments type="string">if closed outage OVERLAPS an open outage, it is not considered</comments>
    <normal type="label">set.count.outage.final</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.add.array={{[]}}</statements>
      <statements sctype="operator">for $L.i = 1 to lng(denull($L.tmp.closed)) do ($L.action.array={};for $L.x = 1 to lng(denull($L.outages.array)) do (if (1 in $L.i in $L.tmp.closed&lt;1 in $L.x in $L.outages.array and 2 in $L.i in $L.tmp.closed&lt;1 in $L.x in $L.outages.array or 1 in $L.i in $L.tmp.closed&gt;2 in $L.x in $L.outages.array and 2 in $L.i in $L.tmp.closed&gt;2 in $L.x in $L.outages.array) then ($L.action.array=$L.action.array+{1}) else ($L.action.array=$L.action.array+{0}));if (index(0, $L.action.array)=0) then ($L.add.array.index=lng(denull($L.add.array))+1;1 in $L.add.array.index in $L.add.array=1 in $L.i in $L.tmp.closed;2 in $L.add.array.index in $L.add.array=2 in $L.i in $L.tmp.closed;5 in $L.add.array.index in $L.add.array=5 in $L.i in $L.tmp.closed))</statements>
      <statements sctype="operator">if (lng(denull($L.add.array))&gt;0) then ($L.outages.array=$L.outages.array+$L.add.array)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysmoduser type="string">prietke</sysmoduser>
    <sysmodtime type="dateTime">09/12/07 11:07:13</sysmodtime>
  </record>
</recordset>
