<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;se.base.method&quot; and label=&quot;setup.workflow&quot;" recordid="se.base.method - setup.workflow">
    <application type="string">se.base.method</application>
    <label type="label">setup.workflow</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">decide.action</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.auto.breadcrumb=NULL</statements>
      <statements sctype="operator">$L.manual.breadcrumb=NULL</statements>
      <statements sctype="operator">$L.has.workflow=false</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (exists("current.phase", $L.file) and not  (null($L.file.save))) then ($L.from.phase=current.phase in $L.file.save;if (not  (null($L.wfPhase))) then if (not  (same(current.phase in $L.file, current.phase in $L.file.save)) or not  (same(current.phase in $L.file, phaseName in $L.wfPhase))) then ($L.wfPhase=jscall("Workflow.getNextWorkflowPhaseByLocalFile", current.phase in $L.file);$L.index.wfPhase=index("$L.wfPhase", $L.names);if ($L.index.wfPhase&gt;0) then ($L.index.wfPhase in $L.values=$L.wfPhase);if (nullsub($L.wfType, "manual")="manual") then ($L.manual.breadcrumb=current.phase in $L.file) else ($L.auto.breadcrumb=current.phase in $L.file;$L.suppress=true)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (null($L.wfPhase) and $L.action="add" and not  (null(jscall("Workflow.getWorkflowNameByLocalFile")))) then ($L.wfPhase=jscall("Workflow.getNextWorkflowPhaseByLocalFile");$L.index.wfPhase=index("$L.wfPhase", $L.names);if ($L.index.wfPhase&gt;0) then ($L.index.wfPhase in $L.values=$L.wfPhase))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.protected=false</statements>
      <statements sctype="operator">if exists("sysrestricted", $L.file) then if (not  (lioption("HP System"))) then if nullsub(sysrestricted in $L.file, false) then ($L.protected=true)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.has.workflow=not  (null($L.wfPhase)) and type($L.wfPhase)=6 and not  (null(phaseName in $L.wfPhase))</statements>
      <statements sctype="operator">if ($L.has.workflow and null($L.workflow)) then ($L.workflow=jscall("Workflow.getWorkflowViaPhase", $L.wfPhase))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (null($L.from.phase) and not  (null($L.workflow)) and same($L.action, "add")) then ($L.from.phase=firstPhase in $L.workflow)</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">// QCCR1E124708, hide the check box of Optimizing two saves  and always optimizing the save in the backend</statements>
      <statements sctype="operator">//if (not  (null($L.workflow))) then ($L.wf.optimize.autotran.save=nullsub(optimize.autotran.save in $L.workflow, false))</statements>
      <statements sctype="operator">$L.wf.optimize.autotran.save=nullsub(nullsub($L.wf.optimize.autotran.save, $G.wf.optimize.autotran.save), true)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">14</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">12/20/17 03:12:50</sysmodtime>
  </record>
</recordset>
