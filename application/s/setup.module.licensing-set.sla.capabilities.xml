<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;setup.module.licensing&quot; and label=&quot;set.sla.capabilities&quot;" recordid="setup.module.licensing - set.sla.capabilities">
    <application type="string">setup.module.licensing</application>
    <label type="label">set.sla.capabilities</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">check.incident.environment</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.update.capability=false;$L.license.named=NULL;$L.license.floating=NULL</statements>
      <statements sctype="operator">if (sla.create in $G.sla.profile~=false and not  (null(sla.create in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (sla.update in $G.sla.profile~="never" and not  (null(sla.update in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (sla.delete in $G.sla.profile~=false and not  (null(sla.delete in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (slocat.create in $G.sla.profile~=false and not  (null(slocat.create in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (slocat.update in $G.sla.profile~="never" and not  (null(slocat.update in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (slocat.delete in $G.sla.profile~=false and not  (null(slocat.delete in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (slor.create in $G.sla.profile~=false and not  (null(slor.create in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (slor.update in $G.sla.profile~="never" and not  (null(slor.update in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (slor.delete in $G.sla.profile~=false and not  (null(slor.delete in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (sloa.create in $G.sla.profile~=false and not  (null(sloa.create in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (sloa.update in $G.sla.profile~="never" and not  (null(sloa.update in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if (sloa.delete in $G.sla.profile~=false and not  (null(sloa.delete in $G.sla.profile))) then ($L.update.capability=true)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.sla.expert=jscall("security.hasRight", "Service Level Management", "expert")</statements>
      <statements sctype="operator">$L.sla.admin=jscall("security.hasRight", "Service Level Management", "admin")</statements>
      <statements sctype="operator">if ($L.sla.expert~=false and not  (null($L.sla.expert))) then ($L.update.capability=true)</statements>
      <statements sctype="operator">if ($L.sla.admin~=false and not  (null($L.sla.admin))) then ($L.update.capability=true)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null(contents($L.operator))) and not  ($G.bg)) then if (index("SLA", nullsub(named.modules in $L.operator, {}))&gt;0) then ($L.named=true) else ($L.named=false)</statements>
      <statements sctype="operator">if ($L.update.capability=true and $L.named=true) then ($L.index in $L.module.array="SLA";$L.index in $L.type.array="named";$L.index=$L.index+1) else if ($L.update.capability=true and $L.named=false) then ($L.index in $L.module.array="SLA";$L.index in $L.type.array="floating";$L.index=$L.index+1) else ($G.sla.license="None")</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">18</sysmodcount>
    <sysmoduser type="string">lujim</sysmoduser>
    <sysmodtime type="dateTime">03/01/16 15:32:44</sysmodtime>
  </record>
</recordset>
