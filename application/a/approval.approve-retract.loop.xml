<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;approval.approve&quot; and label=&quot;retract.loop&quot;" recordid="approval.approve - retract.loop">
    <application type="string">approval.approve</application>
    <label type="label">retract.loop</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">check.log</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.group.id=$L.i in $L.match.groups</statements>
      <statements sctype="operator">$L.z=index($L.group.id, approved.groups in $L.approval)</statements>
      <statements sctype="operator">$L.seq=$L.z in approved.seq in $L.approval</statements>
      <statements sctype="operator">$L.retract.status=$L.z in approved.action in $L.approval;if ($L.retract.status="Approved") then ($L.retract.status="Approval") else ($L.retract.status="Denial")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.info.operator=operator()</statements>
      <statements sctype="operator">$L.info.operator.fullname=nullsub($lo.ufname, operator())</statements>
      <statements sctype="operator">// set log operator to "System" if retracted by system</statements>
      <statements sctype="operator">if nullsub($L.retract.by.system, false) then ($L.info.operator="System";$L.info.operator.fullname="System")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.info={tod(), $L.info.operator, NULL, $L.group.id, $L.comments, name in $L.approval, $L.info.operator.fullname, component in $L.approval}</statements>
      <statements sctype="string"/>
      <statements sctype="operator">approved.groups in $L.approval=delete(approved.groups in $L.approval, $L.z)</statements>
      <statements sctype="operator">approved.seq in $L.approval=delete(approved.seq in $L.approval, $L.z)</statements>
      <statements sctype="operator">approved.date in $L.approval=delete(approved.date in $L.approval, $L.z)</statements>
      <statements sctype="operator">approved.by in $L.approval=delete(approved.by in $L.approval, $L.z)</statements>
      <statements sctype="operator">approved.by.fullname in $L.approval=delete(approved.by.fullname in $L.approval, $L.z)</statements>
      <statements sctype="operator">approved.action in $L.approval=delete(approved.action in $L.approval, $L.z)</statements>
      <statements sctype="operator">approved.for in $L.approval=delete(approved.for in $L.approval, $L.z)</statements>
      <statements sctype="operator">$L.x=lng(future.groups in $L.approval)+1</statements>
      <statements sctype="operator">$L.x in future.groups in $L.approval=$L.group.id;$L.x in future.seq in $L.approval=$L.seq</statements>
      <statements sctype="operator">$L.i+=1;$L.action.flag=true</statements>
      <statements sctype="operator">$L.log.action="Retracted earlier "+$L.retract.status</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">11/28/19 17:07:50</sysmodtime>
  </record>
</recordset>
