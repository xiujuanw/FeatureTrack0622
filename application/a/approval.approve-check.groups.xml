<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;approval.approve&quot; and label=&quot;check.groups&quot;" recordid="approval.approve - check.groups">
    <application type="string">approval.approve</application>
    <label type="label">check.groups</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">init.typecheck</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.match.groups={}</statements>
      <statements sctype="operator">$L.temp.pending.groups=current.pending.groups in $L.approval;$L.temp.future.groups=future.groups in $L.approval;$L.temp.approved.groups=approved.groups in $L.approval</statements>
      <statements sctype="operator">if (not  ($L.single.approval)) then (if exists("current.pending.groups", $L.file) then ($L.temp.pending.groups=current.pending.groups in $L.file);if exists("future.groups", $L.file) then ($L.temp.future.groups=future.groups in $L.file);if exists("approvals.required", $L.file) then ($L.temp.future.groups=approvals.required in $L.file);if exists("approved.groups", $L.file) then ($L.temp.approved.groups=approved.groups in $L.file))</statements>
      <statements sctype="operator">for $L.i = 1 to denull(lng($L.groups)) do (if (index($L.i in $L.groups, $L.temp.pending.groups)&gt;0 or index($L.i in $L.groups, $L.temp.future.groups)&gt;0) then ($L.match.groups=insert($L.match.groups, 1, 1, $L.i in $L.groups)))</statements>
      <statements sctype="operator">if ($L.action="retract") then ($L.match.groups={};for $L.i = 1 to denull(lng($L.groups)) do (if (index($L.i in $L.groups, $L.temp.approved.groups)&gt;0) then ($L.match.groups=insert($L.match.groups, 1, 1, $L.i in $L.groups))))</statements>
      <statements sctype="operator">$L.match.groups=denull($L.match.groups)</statements>
      <statements sctype="operator">if ($G.src and not  (null(matched.groups.src in $L.approval))) then ($L.match.groups=jscall("JSON3.parse", matched.groups.src in $L.approval))</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">09/27/17 19:19:15</sysmodtime>
  </record>
</recordset>
