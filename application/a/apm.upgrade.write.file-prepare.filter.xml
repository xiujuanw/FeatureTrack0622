<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;apm.upgrade.write.file&quot; and label=&quot;prepare.filter&quot;" recordid="apm.upgrade.write.file - prepare.filter">
    <application type="string">apm.upgrade.write.file</application>
    <label type="label">prepare.filter</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">get.config</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.filterableReason="none"</statements>
      <statements sctype="operator">$L.key={}</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (substr($L.export.path, lng($L.export.path) - 3)=".dta" and substr($L.export.path, lng($L.export.path) - 11)~="upgdbdct.dta") then ($L.thisTableFilterable=true;$L.filterableReason=""+$L.export.path+" is dta file under data/")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (substr($L.export.path, lng($L.export.path) - 3)=".inf") then ($L.thisTableFilterable=true;$L.filterableReason=""+$L.export.path+" is upgrade.inf/")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.sigmake=jscall("upgradeUtility.getRecord", "signaturemake", "table.name=\""+$L.table+"\"")</statements>
      <statements sctype="operator">if null($L.sigmake) then ($L.thisTableFilterable=false) else (if (not  (null(key in $L.sigmake))) then ($L.key=key in $L.sigmake))</statements>
      <statements sctype="operator">if (null($L.key) or lng(denull($L.key))=0) then ($L.thisTableFilterable=false)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.table="upgradeobjects") then ($L.thisTableFilterable=true;$L.key={"object.name"})</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.void=jscall("upgradeLog.writeLog", "in apm.upgrade.write.file, table "+$L.table+" filterable:"+str($L.thisTableFilterable)+", because "+$L.filterableReason+", key:"+str($L.key), $L.log)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">zhouanqing</sysmoduser>
    <sysmodtime type="dateTime">07/17/16 19:14:36</sysmodtime>
  </record>
</recordset>
