<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;apm.upgrade.purge.nonEngPrmFmt&quot; and label=&quot;start&quot;" recordid="apm.upgrade.purge.nonEngPrmFmt - start">
    <application type="string">apm.upgrade.purge.nonEngPrmFmt</application>
    <label type="label">start</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">exit.normal</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">if $G.DbgAppTrc then ($L.stsMsg="*** Upgrade Status: apm.upgrade.purge.nonEngPrmFmt started. ***";$L.scsFlg=rtecall("log", $L.rtnCod, $L.stsMsg))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">// Establish linkage to files used by this application</statements>
      <statements sctype="operator">$L.scsFlg=rtecall("rinit", $L.rtnCod, $L.codeBfr, "code")</statements>
      <statements sctype="operator">$L.scsFlg=rtecall("rinit", $L.rtnCod, $L.formatBfr, "format")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">// Init the query variable for accessing the format file to process all non-English formats</statements>
      <statements sctype="operator">$L.formatQryVar="syslanguage~=\""+"en"+"\""</statements>
      <statements sctype="string"/>
      <statements sctype="operator">// Process all format records</statements>
      <statements sctype="operator">$L.scsFlg=rtecall("select", $L.rtnCod, $L.formatBfr, $L.formatQryVar)</statements>
      <statements sctype="operator">if ($L.scsFlg=true and $L.rtnCod~=3) then ($L.eof=0;while ($L.eof=0) do ($L.rem=" Determine if this format has a corresponding code record (ie, if it is a RAD parameter format) ";$L.codeQryVar="application=\""+name in $L.formatBfr+"\"";$L.scsFlg2=rtecall("select", $L.rtnCod2, $L.codeBfr, $L.codeQryVar);$L.rem=" If it this format is a RAD parameter format, then delete it ";if ($L.scsFlg2=true and $L.rtnCod2~=3) then ($L.scsFlg3=rtecall("rdelete", $L.rtnCod3, $L.formatBfr));$L.rem=" Retrieve the next format record ";$L.scsFlg=rtecall("next", $L.eof, $L.formatBfr)))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.scsFlg1=rtecall("rinit", $L.rtnCod1, $L.upgradestatus, "upgradestatus")</statements>
      <statements sctype="operator">if $L.scsFlg1 then ($L.scsFlg2=rtecall("select", $L.rtnCod2, $L.upgradestatus, true))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.phase.level="Apply OOB Package";if (option in $L.upgradestatus="unconditional") then ($L.phase.level="Apply Custom Package")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.void=jscall("upgradeLog.logPhaseInfo", $L.phase.level, "Pre Upgrade Action Purge", "start", "upgrade")</statements>
      <statements sctype="operator">$L.void=jscall("upgradeLog.logPhaseInfo", $L.phase.level, "Pre Upgrade Action Purge", "start", "detail")</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">4</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">06/12/16 20:03:13</sysmodtime>
  </record>
</recordset>
