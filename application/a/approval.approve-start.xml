<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;approval.approve&quot; and label=&quot;start&quot;" recordid="approval.approve - start">
    <application type="string">approval.approve</application>
    <label type="label">start</label>
    <comments type="string">*** more below</comments>
    <normal type="label">check.category</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.file=$4;$L.action=nullsub($12, "approve")</statements>
      <statements sctype="operator">$L.module=str(filename($L.file))</statements>
      <statements sctype="operator">$L.object=$5;$L.appr.fc.name=nullsub(appr.fc in $L.object, "none");$L.action.flag=false</statements>
      <statements sctype="operator">$L.exit="normal"</statements>
      <statements sctype="operator">$L.bg=nullsub(val($7, 4), false);$L.suppress=nullsub(val($17, 4), false)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.groups=nullsub($6, {operator()})</statements>
      <statements sctype="operator">if (not  (nullsub($do.mass.approval, false)) and index(operator(), $L.groups)=0) then ($L.groups=insert($L.groups, 1, 1, operator()))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.file.save=$11</statements>
      <statements sctype="operator">$L.appr.query="file.name=\""+filename($L.file)+"\" and unique.key=\""+str(evaluate((1 in unique.field in $L.object) in $L.file))+"\""</statements>
      <statements sctype="operator">$L.category=$9;$L.phase=$10</statements>
      <statements sctype="operator">$L.approval=$15</statements>
      <statements sctype="operator">$L.locked.msg=scmsg(1, "approval")</statements>
      <statements sctype="operator">$L.no.groups.msg=scmsg(2, "approval");if ($L.action="deny") then ($L.no.groups.msg=scmsg(16, "approval"));if ($L.action="retract") then ($L.no.groups.msg=scmsg(11, "approval"))</statements>
      <statements sctype="operator">$L.must.have.msg=scmsg(3, "approval")</statements>
      <statements sctype="operator">$L.use.msg=scmsg(4, "approval");if ($L.action="deny") then ($L.use.msg=scmsg(5, "approval"));if ($L.action="retract") then ($L.use.msg=scmsg(6, "approval"))</statements>
      <statements sctype="operator">$L.fc=1 in $13;$L.fc.master=2 in $13;$L.wfPhase=3 in $13</statements>
      <statements sctype="operator">$L.object.names=local.variables in $L.object</statements>
      <statements sctype="operator">$L.single.approval=false</statements>
      <statements sctype="operator">if (not  (null($L.approval))) then ($L.single.approval=true)</statements>
      <statements sctype="operator">$L.got.comments=false</statements>
      <statements sctype="operator">$L.void=fduplicate($L.object.save, $L.file.save)</statements>
      <statements sctype="operator">if (filename($L.object.save)~=filename($L.file)) then ($L.void=fduplicate($L.object.save, $L.file);$L.void=fduplicate($L.file.save.copy, $L.file.save);$L.void=fduplicate($L.file.save, $L.file))</statements>
      <statements sctype="operator">$16=denull($16)</statements>
      <statements sctype="string"/>
      <statements sctype="string"/>
      <statements sctype="operator">$L.delegate=$18</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">3</sysmodcount>
    <sysmoduser type="string">qiqingsong</sysmoduser>
    <sysmodtime type="dateTime">08/13/14 02:37:31</sysmodtime>
  </record>
</recordset>
