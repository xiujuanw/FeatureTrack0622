<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;AdvFind.appendQuery&quot; and label=&quot;set.final.query&quot;" recordid="AdvFind.appendQuery - set.final.query">
    <application type="string">AdvFind.appendQuery</application>
    <label type="label">set.final.query</label>
    <comments type="string">$L.is.related.query=jscall("viewFunctions.isRelatedObjectQuery", $L.return.sql)</comments>
    <normal type="label">exit.normal</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.return.sql=NULL</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.table.sql)) and not  (same($L.table.sql, "")) and $L.table.sql~="true") then ($L.has.table.sql=false) else ($L.has.table.sql=false)</statements>
      <statements sctype="operator">if (not  (null(filter.sql in $L.advFind.view)) and not  (same(filter.sql in $L.advFind.view, "")) and filter.sql in $L.advFind.view~="true") then ($L.has.filter.sql=true) else ($L.has.filter.sql=false)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.has.table.sql and $L.has.filter.sql) then ($L.return.sql="("+$L.table.sql+") and ("+filter.sql in $L.advFind.view+")")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.has.table.sql and not  ($L.has.filter.sql)) then ($L.return.sql=$L.table.sql)</statements>
      <statements sctype="operator">if (not  ($L.has.table.sql) and $L.has.filter.sql) then ($L.return.sql=filter.sql in $L.advFind.view)</statements>
      <statements sctype="operator">if (not  ($L.has.table.sql) and not  ($L.has.filter.sql)) then ($L.return.sql="true")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.is.related.query=jscall("viewFunctions.isRelatedObjectQuery", $L.return.sql)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($ci.type))) then ($L.joinfile.name=jscall("GetFieldNames.getJoinFileFromDeviceType", $ci.type));if (not  (null($L.joinfile.name))) then ($L.fieldList=jscall("GetFieldNames.getAllFieldsDescriptor", $L.joinfile.name))</statements>
      <statements sctype="operator">if (not  (null($L.fieldList)) or $L.is.related.query="true" and not  (null($L.filter)) and not  (null($L.config))) then ($L.return.sql=jscall("GetFieldNames.removeFileHeader", $L.return.sql);$L.filename=tablename in $L.config;$L.field.list={$L.filename+";*"}+nullsub($L.fieldList, {});$L.related.query=generate.sql.query($L.field.list, $L.return.sql, $L.filename);$L.return.sql=$L.related.query)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$10=$L.return.sql</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">64</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">09/22/15 20:28:35</sysmodtime>
  </record>
</recordset>
