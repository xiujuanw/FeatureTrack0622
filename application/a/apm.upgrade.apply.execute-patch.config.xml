<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;apm.upgrade.apply.execute&quot; and label=&quot;patch.config&quot;" recordid="apm.upgrade.apply.execute - patch.config">
    <application type="string">apm.upgrade.apply.execute</application>
    <label type="label">patch.config</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">test.connect</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.skip=1</statements>
      <statements sctype="operator">$L.options=$G.io.config.base</statements>
      <statements sctype="operator">1 in $L.options="text"</statements>
      <statements sctype="operator">2 in $L.options="r"</statements>
      <statements sctype="operator">$L.void=version()</statements>
      <statements sctype="operator">if (1 in $L.void="mvs") then ($L.connect="qsam") else ($L.connect="file")</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null($L.status.rec))) then ($L.version.pointer=index(current.version in $L.status.rec, jscall("upgradeConstants.FULL_VERSIONS")))</statements>
      <statements sctype="operator">$L.version.pointer=nullsub($L.version.pointer, 0)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">// Retrieve the following information and make it available to the upgrade process by making them global variables</statements>
      <statements sctype="operator">// Version upgrading from and its sequence ($G.tmpUpgFrmVer and $G.tmpUpgFrmVerSeq)</statements>
      <statements sctype="operator">// Version upgrading to and its sequence ($G.tmpUpgToVer and $G.tmpToVerSeq)</statements>
      <statements sctype="operator">//     Version sequence of SC6.2 ($G.tmpSC62VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of SM7 ($G.tmpSM7VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of SM7IIA ($G.tmpSM7IIAVerSeq)</statements>
      <statements sctype="operator">//     Version sequence of SM7.10 ($G.tmpSM71VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 7.11.000 ($G.tmp7.11.000VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 7.11.001 ($G.tmp7.11.001VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 7.11.002 ($G.tmp7.11.002VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 7.11.003 ($G.tmp7.11.003VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 9.20.000 ($G.tmp9.20.000VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 9.21.001 ($G.tmp9.21.001VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 9.21.002 ($G.tmp9.21.002VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 9.21.003 ($G.tmp9.21.003VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 9.30.000 ($G.tmp9.30.000VerSeq)</statements>
      <statements sctype="operator">//     Version sequence of 9.40     ($G.tmp9.40VerSeq)</statements>
      <statements sctype="operator">$G.tmpUpgFrmVer=current.version in $L.status.rec</statements>
      <statements sctype="operator">$G.tmpUpgToVer=version in $L.status.rec</statements>
      <statements sctype="operator">$G.tmpUpgFrmVerSeq=index(current.version in $L.status.rec, $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmpUpgToVerSeq=index(version in $L.status.rec, $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmpSC62VerSeq=index("SC6.2", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmpSM7VerSeq=index("SM7", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmpSM7IIAVerSeq=index("SM7IIA", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmpSM71VerSeq=index("SM7.10", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp7.11.000VerSeq=index("7.11.000", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp7.11.001VerSeq=index("7.11.001", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp7.11.002VerSeq=index("7.11.002", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp7.11.003VerSeq=index("7.11.003", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.20.000VerSeq=index("9.20.000", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.21.001VerSeq=index("9.21.001", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.21.002VerSeq=index("9.21.002", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.21.003VerSeq=index("9.21.003", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.30.000VerSeq=index("9.30.000", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.30.001VerSeq=index("9.30.001", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.30.002VerSeq=index("9.30.002", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.30.003VerSeq=index("9.30.003", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.31VerSeq=index("9.31.0022", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.32VerSeq=index("9.32.0016", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.33VerSeq=index("9.33.0035", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.40VerSeq=index("9.40.0015", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.50VerSeq=index("9.50.0025", $L.SCverArr)</statements>
      <statements sctype="operator">$G.tmp9.60VerSeq=index(jscall("upgradeConstants.TARGET_VERSION"), $L.SCverArr)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.log.msg=scmsg(9022, "upg")</statements>
      <statements sctype="operator">$L.void=jscall("upgradeLog.upgrade", $L.log.msg)</statements>
      <statements sctype="operator">$L.void=jscall("upgradeLog.detail", $L.log.msg)</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">3</sysmodcount>
    <sysmoduser type="string">zhouanqing</sysmoduser>
    <sysmodtime type="dateTime">10/25/17 21:57:28</sysmodtime>
  </record>
</recordset>
