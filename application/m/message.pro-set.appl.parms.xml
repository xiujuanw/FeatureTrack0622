<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;message.pro&quot; and label=&quot;set.appl.parms&quot;" recordid="message.pro - set.appl.parms">
    <application type="string">message.pro</application>
    <label type="label">set.appl.parms</label>
    <comments NullValue="1" type="string"/>
    <normal type="label">call.appl</normal>
    <error type="localVar">$9</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$L.max=lng(denull(user.names in $L.msgclass))</statements>
      <statements sctype="operator">if ($L.max&gt;0 and nullsub(always.send in $L.msgclass, false)) then for $L.i = 1 to $L.max do ($L.temp=$L.i in user.names in $L.msgclass;if (index($L.temp, $L.users)=0) then ($L.users=insert($L.users, 1);1 in $L.users=$L.temp))</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.parms={"text", "name"};$L.values={$L.text, $L.users}</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.connect") then ($L.parms={"index", "prompt", "text", "string1", "number1", "types", "names", "sort"};$L.values={$L.level, $L.class, $L.text, $L.name, $L.no, $L.operator, device.name in $L.msgclass, msg.format in $L.msgclass})</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.email") then ($L.parms={"text", "name", "string1", "types", "numbers", "boolean1", "prompt", "key.null"};$L.values={$L.text, $L.users, $L.name, $L.operator, $L.target, only.send in $L.msgclass, $L.subject, $L.refid})</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.log") then ($L.parms={"index", "prompt", "text", "string1", "number1", "time1", "types"};$L.values={$L.level, $L.class, $L.text, $L.name, $L.no, $L.time, $L.operator})</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.mail") then ($L.parms={"text", "name", "string1", "types", "query", "numbers", "boolean1", "prompt"};$L.values={$L.text, $L.users, $L.name, $L.operator, $L.mailclass, $L.target, only.send in $L.msgclass, $L.subject})</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.print") then ($L.parms={"index", "prompt", "text", "string1", "number1", "types", "names", "sort"};$L.values={$L.level, $L.class, $L.text, $L.name, $L.no, $L.operator, device.name in $L.msgclass, msg.format in $L.msgclass})</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.tso") then ($L.parms={"names", "text"};$L.values={$L.users, $L.text})</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.fax") then ($L.parms={"name", "text"};$L.values={$L.users, $L.text})</statements>
      <statements sctype="operator">if (application in $L.msgtype="message.page") then ($L.parms={"name", "text"};$L.values={$L.users, $L.text})</statements>
      <statements sctype="operator">if (application in $L.msgtype)#"message.noticenter" then ($L.parms={"name", "text", "numbers"};$L.values={$L.users, $L.text, $L.target})</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">27</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/02/16 16:42:36</sysmodtime>
  </record>
</recordset>
