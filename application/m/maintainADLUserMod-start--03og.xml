<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="application">
  <record id="application=&quot;maintainADLUserMod&quot; and label=&quot;start&quot;" recordid="maintainADLUserMod - start">
    <application type="string">maintainADLUserMod</application>
    <label type="label">start</label>
    <comments type="string">Perform housekeeping function.</comments>
    <normal type="label">ini.fil.010</normal>
    <error type="label">exit.error.msg</error>
    <format type="string">process</format>
    <file NullValue="1" type="file"/>
    <all.null NullValue="1" type="label"/>
    <key.null NullValue="1" type="label"/>
    <key.dupl NullValue="1" type="label"/>
    <second.file NullValue="1" type="file"/>
    <target.file NullValue="1" type="file"/>
    <record NullValue="1" type="file"/>
    <query NullValue="1" type="string"/>
    <name NullValue="1" type="string"/>
    <names NullValue="1" sctype="array">
      <names NullValue="1" type="string"/>
    </names>
    <values NullValue="1" sctype="array">
      <values NullValue="1" type="string"/>
    </values>
    <prompt NullValue="1" type="string"/>
    <condition NullValue="1" sctype="array">
      <condition NullValue="1" type="boolean"/>
    </condition>
    <option NullValue="1" sctype="array">
      <option NullValue="1" type="decimal"/>
    </option>
    <description NullValue="1" sctype="array">
      <description NullValue="1" type="string"/>
    </description>
    <exit NullValue="1" sctype="array">
      <exit NullValue="1" type="label"/>
    </exit>
    <index NullValue="1" type="decimal"/>
    <empty NullValue="1" type="label"/>
    <one.rec NullValue="1" type="label"/>
    <text NullValue="1" type="string"/>
    <statements sctype="array">
      <statements sctype="operator">$rem="   The parameters that are passed in to this application are:                                                                                                                                               "</statements>
      <statements sctype="operator">$rem="      $TAGVALUE - The string that contains the name of the ADL-enabled file followed by the key value(s) of that file                                                      "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="    The tag value is in this format:   fffff;v1;v2;v3; vn)                                                                                                                                                          "</statements>
      <statements sctype="operator">$rem="                                                where fffff is the ADL-enabled file name                                                                                                                              "</statements>
      <statements sctype="operator">$rem="                                                v1 is the value of the 1st field in the key to ADL-enabled file                                                                                              "</statements>
      <statements sctype="operator">$rem="                                                v2 is the value of the 2nd field in the key to ADL-enabled file                                                                                             "</statements>
      <statements sctype="operator">$rem="                                                v3 is the value of the 3rd field in the key to ADL-enabled file                                                                                              "</statements>
      <statements sctype="operator">$rem="                                                vn is the value of the nth field in the key to ADL-enabled file                                                                                              "</statements>
      <statements sctype="operator">$rem="   The delimiter between the file name and the first key value is a semicolon (;), the delimiter between key values is also a semicolon(;)                           "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="   As of the time that this application was written, the ADL-enabled files are:                                                                                                                      "</statements>
      <statements sctype="operator">$rem="            cm3r  (aka Change Database)                                                                                                                                                                                "</statements>
      <statements sctype="operator">$rem="            core (aka Global Knowledge Database)                                                                                                                                                                 "</statements>
      <statements sctype="operator">$rem="            helptext (aka Help Database)                                                                                                                                                                                 "</statements>
      <statements sctype="operator">$rem="            incidents (aka Call Database)                                                                                                                                                                                 "</statements>
      <statements sctype="operator">$rem="            knowledge (aka Knowledge Database)                                                                                                                                                                  "</statements>
      <statements sctype="operator">$rem="            KnowledgePak (aka KnowledgePak Database)                                                                                                                                                     "</statements>
      <statements sctype="operator">$rem="            probcause (aka Internal Knowledge Database)                                                                                                                                                      "</statements>
      <statements sctype="operator">$rem="            probsummary (aka Incident Database)                                                                                                                                                                    "</statements>
      <statements sctype="operator">$rem="         Note: The maximum number of fields making up the key has arbitrarily been chosen as 7 (seven)                                                                             "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="   Parse the incoming parameter into the following portions:                                                                                                                                                "</statements>
      <statements sctype="operator">$rem="      The file portion                                                                                                                                                                                                              "</statements>
      <statements sctype="operator">$rem="      The key values portion                                                                                                                                                                                                 "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.tagval=$4</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.keyvalbegpos=index(";", $L.tagval, 1)</statements>
      <statements sctype="operator">$L.filnamlng=$L.keyvalbegpos - 1</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="   Isolate the file portion                                                                                                                                                                                                       "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.adlenbfilnam=" "</statements>
      <statements sctype="operator">$L.vod=stradj($L.adlenbfilnam, $L.filnamlng)</statements>
      <statements sctype="operator">$L.vod=strcpy($L.adlenbfilnam, 1, $L.tagval, 1, $L.filnamlng)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="   Isolate the values portion                                                                                                                                                                                                 "</statements>
      <statements sctype="operator">$rem="      Determine where the values portion begin                                                                                                                                                                    "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.keyvalstr=$L.tagval</statements>
      <statements sctype="operator">$L.vod=strclpl($L.keyvalstr, $L.keyvalbegpos)</statements>
      <statements sctype="operator">$L.keyvallng=lng($L.keyvalstr)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="      Parse the key values string into the key values array                                                                                                                                                   "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.keyval={}</statements>
      <statements sctype="operator">$L.wrkstr=" ";$L.vod=strpadr($L.wrkstr, 500)</statements>
      <statements sctype="operator">$L.laschrprc=" "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="      The index usage in the following routine is:                                                                                                                                                                  "</statements>
      <statements sctype="operator">$rem="         $L.idx   = index thru $L.keyvalstr string                                                                                                                                                                     "</statements>
      <statements sctype="operator">$rem="         $L.idxi   = index thru $L.keyval array                                                                                                                                                                         "</statements>
      <statements sctype="operator">$rem="         $L.idxj = index thru $L.wrkstr                                                                                                                                                                                     "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.idx=1;$L.idxi=1;$L.idxj=0</statements>
      <statements sctype="string"/>
      <statements sctype="operator">while ($L.idx&lt;=$L.keyvallng) do ($L.wrkfld=" ";$L.vod=strcpy($L.wrkfld, 1, $L.keyvalstr, $L.idx, 1);if ($L.wrkfld~=";") then ($L.idxj+=1;$L.vod=strcpy($L.wrkstr, $L.idxj, $L.keyvalstr, $L.idx, 1)) else ($L.idxi in $L.keyval=$L.wrkstr;$L.idxi+=1;$L.idxj=0;$L.laschrprc=" ";$L.wrkstr=" ";$L.vod=strpadr($L.wrkstr, 500));$L.vod=strcpy($L.laschrprc, 1, $L.keyvalstr, $L.idx, 1);$L.idx+=1)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="      If the last character processed was NOT a semicolon (ie, was not a delimiter), go ahead and put the last value processed into the key values array"</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if ($L.laschrprc~=";") then ($L.idxi in $L.keyval=$L.wrkstr)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.keyval=denull($L.keyval)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.key001val=1 in $L.keyval</statements>
      <statements sctype="string"/>
      <statements sctype="operator">if (not  (null(2 in $L.keyval))) then ($L.key002val=2 in $L.keyval)</statements>
      <statements sctype="operator">if (not  (null(3 in $L.keyval))) then ($L.key003val=3 in $L.keyval)</statements>
      <statements sctype="operator">if (not  (null(4 in $L.keyval))) then ($L.key004val=4 in $L.keyval)</statements>
      <statements sctype="operator">if (not  (null(5 in $L.keyval))) then ($L.key005val=5 in $L.keyval)</statements>
      <statements sctype="operator">if (not  (null(6 in $L.keyval))) then ($L.key006val=6 in $L.keyval)</statements>
      <statements sctype="operator">if (not  (null(7 in $L.keyval))) then ($L.key007val=7 in $L.keyval)</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$rem="   Prepare for call to the display application                                                                                                                                                                        "</statements>
      <statements sctype="string"/>
      <statements sctype="operator">$L.scrID="adlusermods"</statements>
      <statements sctype="operator">$L.fmt="adlusermods"</statements>
    </statements>
    <cond.input NullValue="1" type="boolean"/>
    <sort NullValue="1" sctype="array">
      <sort NullValue="1" type="string"/>
    </sort>
    <types NullValue="1" sctype="array">
      <types NullValue="1" type="string"/>
    </types>
    <levels NullValue="1" sctype="array">
      <levels NullValue="1" type="decimal"/>
    </levels>
    <numbers NullValue="1" sctype="array">
      <numbers NullValue="1" type="decimal"/>
    </numbers>
    <number1 NullValue="1" type="decimal"/>
    <string1 NullValue="1" type="string"/>
    <time1 NullValue="1" type="dateTime"/>
    <boolean1 NullValue="1" type="boolean"/>
    <times NullValue="1" sctype="array">
      <times NullValue="1" type="dateTime"/>
    </times>
    <expressions NullValue="1" sctype="array">
      <expressions NullValue="1" type="expression"/>
    </expressions>
    <comments.more NullValue="1" sctype="array">
      <comments.more NullValue="1" type="string"/>
    </comments.more>
    <file.variables NullValue="1" sctype="array">
      <file.variables NullValue="1" type="file"/>
    </file.variables>
    <second.record NullValue="1" type="file"/>
    <booleans NullValue="1" sctype="array">
      <booleans NullValue="1" type="boolean"/>
    </booleans>
    <table NullValue="1" type="unknown"/>
    <tables NullValue="1" sctype="array">
      <tables NullValue="1" type="unknown"/>
    </tables>
    <sysmodcount type="decimal">4</sysmodcount>
    <sysmoduser type="string">pbudic</sysmoduser>
    <sysmodtime type="dateTime">06/04/07 07:47:52</sysmodtime>
  </record>
</recordset>
