<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="help">
  <record id="field.name=&quot;expressions&quot; and file.name=&quot;import&quot; and term=NULL and format.name=NULL and syslanguage=&quot;en&quot;" recordid="expressions - import -  -  - en">
    <topic NullValue="1" type="string"/>
    <field.name type="string">expressions</field.name>
    <file.name type="string">import</file.name>
    <format.name NullValue="1" type="string"/>
    <term NullValue="1" type="string"/>
    <keywords NullValue="1" sctype="array">
      <keywords NullValue="1" type="string"/>
    </keywords>
    <brief sctype="array">
      <brief sctype="string">Boolean expressions that identify the data in the external file to use in the query.</brief>
      <brief sctype="string"/>
      <brief sctype="string">Service Manager uses this array field to provide initialization instructions prior to building the query for import and to define variables used in the query.</brief>
    </brief>
    <detail sctype="array">
      <detail sctype="string">For example, your external file may contain a list of location records, each of which contains city, state and ZIP code in this Format:</detail>
      <detail sctype="string">City: starting in column 1 for 20 characters</detail>
      <detail sctype="string">State: starting in column 21 for 2 characters</detail>
      <detail sctype="string">Zip: starting in column 23 for 9 characters</detail>
      <detail sctype="string"/>
      <detail sctype="string">To select using city, and assign the value in the first 20 bytes of the external record to the variable called $variable.name, use the expression:</detail>
      <detail sctype="string">$variable.name=substr($import.string, 1, 20)</detail>
      <detail sctype="string"/>
      <detail sctype="string">The name of the variable is arbitrary, but you should use something descriptive and unique.</detail>
      <detail sctype="string"/>
      <detail sctype="string">After assigning data to the variable, you may want to manipulate it. For example, you might want to remove trailing blanks. Use the strtrm function to do so.</detail>
      <detail sctype="string"/>
      <detail sctype="string">This example changes the value of $variable.name; no value is assigned to $junk:</detail>
      <detail sctype="string">$junk=strtrmr($variable.name)</detail>
      <detail sctype="string"/>
      <detail sctype="string">You can also translate values to upper or lower case, convert strings to times, etc.</detail>
      <detail sctype="string"/>
      <detail sctype="string">Refer to the Service Manager Rapid Application Development (RAD) Guide for more information.</detail>
    </detail>
    <record.number NullValue="1" type="decimal"/>
    <customer.id NullValue="1" type="string"/>
    <copy.id NullValue="1" type="string"/>
    <old.module NullValue="1" type="string"/>
    <update.time type="dateTime">06/30/06 05:34:35</update.time>
    <required NullValue="1" type="boolean"/>
    <owner NullValue="1" type="string"/>
    <module NullValue="1" sctype="array">
      <module NullValue="1" type="string"/>
    </module>
    <operator type="string">falcon</operator>
    <syslanguage type="string">en</syslanguage>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">05/08/07 07:48:49</sysmodtime>
    <pending.review type="boolean">false</pending.review>
  </record>
</recordset>
