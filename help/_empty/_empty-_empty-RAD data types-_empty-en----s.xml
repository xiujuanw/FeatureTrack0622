<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="help">
  <record id="field.name=NULL and file.name=NULL and term=&quot;RAD data types&quot; and format.name=NULL and syslanguage=&quot;en&quot;" recordid="RAD data types -  - en">
    <topic NullValue="1" type="string"/>
    <field.name NullValue="1" type="string"/>
    <file.name NullValue="1" type="string"/>
    <format.name NullValue="1" type="string"/>
    <term type="string">RAD data types</term>
    <keywords NullValue="1" sctype="array">
      <keywords NullValue="1" type="string"/>
    </keywords>
    <brief sctype="array">
      <brief sctype="string">A data type characterizes a set of values and a set of operations applicable to those values.</brief>
      <brief sctype="string"/>
      <brief sctype="string">The values include literals, variables of appropriate types, and values obtained as the result of operations.</brief>
      <brief sctype="string"/>
      <brief sctype="string">Data types can be either primitive or compound. The difference between a primitive and compound data type is that compound data types consist of several elements, each of a specific data type.</brief>
    </brief>
    <detail sctype="array">
      <detail sctype="string">Rapid Application Development has four primitive data types and three compound data types.</detail>
      <detail sctype="string"/>
      <detail sctype="string">PRIMITIVE DATA TYPES</detail>
      <detail sctype="string"/>
      <detail sctype="string">Fields with a data type of Number contain an amount and can be a whole number, a positive or negative number, or a decimal number.</detail>
      <detail sctype="string"/>
      <detail sctype="string">Fields with a data type of character contain a sequence of zero or more letters, digits, or special characters. You can include non-characters in strings by using their hexadecimal code preceded by a backslash, such as \1A.</detail>
      <detail sctype="string"/>
      <detail sctype="string">Delimit character data with double quotes (" ").</detail>
      <detail sctype="string"/>
      <detail sctype="string">Fields with a data type of Date/Time contain a date or a time. You can use either absolute format ('mm/dd/yy hh:mm:ss') or relative format ('ddd hh:mm:ss').</detail>
      <detail sctype="string"/>
      <detail sctype="string">Delimit time data with single quotes (' ').</detail>
      <detail sctype="string"/>
      <detail sctype="string">Fields with a data type of Boolean contain expressions that evaluate to true, false, or unknown (of undetermined truth-value). You can perform logical operations on Boolean data types.</detail>
      <detail sctype="string"/>
      <detail sctype="string">COMPOUND DATA TYPES</detail>
      <detail sctype="string"/>
      <detail sctype="string">You may combine primitive data types to form compound data types. Any compound data type can have elements of any other valid data types.</detail>
      <detail sctype="string"/>
      <detail sctype="string">Fields with a data type of Array contain a list of elements of the same data type accessed by index (element) number. The term array is synonymous with the terms list, vector, and sequence. Elements in arrays can be of any data types (including arrays). The number of items in an array can vary. You do not have to allocate it in advance.</detail>
      <detail sctype="string"/>
      <detail sctype="string">Delimit arrays with curly braces ().</detail>
      <detail sctype="string"/>
      <detail sctype="string">To extract an element from an array, use the following syntax:</detail>
      <detail sctype="string">$array[element number]</detail>
      <detail sctype="string">or</detail>
      <detail sctype="string">element number in $array</detail>
      <detail sctype="string"/>
      <detail sctype="string">Fields with a data type of Structure contain a group of named elements of (possibly) different data types accessed by index (element) name or number. Items in a structure can be of any data types.</detail>
      <detail sctype="string"/>
      <detail sctype="string">Delimit structures with both curly braces and square brackets ({[]}).</detail>
      <detail sctype="string"/>
      <detail sctype="string">To extract an element from a structure, use the following syntax:</detail>
      <detail sctype="string">$structure[field name]</detail>
      <detail sctype="string">or</detail>
      <detail sctype="string">field name in $structure</detail>
      <detail sctype="string"/>
      <detail sctype="string">FILES</detail>
      <detail sctype="string"/>
      <detail sctype="string">A file is a set of related records treated as a unit stored on disk. The term file is synonymous with the terms relation, table, or dataset. All or any portion of a file can reside in memory so that you can display or modify it. Every file must have a file name and other descriptive data in a database dictionary (dbdict). The dbdict resides in the table dbdict.</detail>
      <detail sctype="string"/>
      <detail sctype="string">The file name must be a single word without spaces or periods.</detail>
    </detail>
    <record.number NullValue="1" type="decimal"/>
    <customer.id NullValue="1" type="string"/>
    <copy.id NullValue="1" type="string"/>
    <old.module NullValue="1" type="string"/>
    <update.time type="dateTime">06/30/06 05:34:06</update.time>
    <required NullValue="1" type="boolean"/>
    <owner NullValue="1" type="string"/>
    <module NullValue="1" sctype="array">
      <module NullValue="1" type="string"/>
    </module>
    <operator type="string">falcon</operator>
    <syslanguage type="string">en</syslanguage>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">05/08/07 07:48:14</sysmodtime>
    <pending.review type="boolean">false</pending.review>
  </record>
</recordset>
