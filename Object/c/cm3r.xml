<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Object">
  <record id="file.name=&quot;cm3r&quot;" recordid="cm3r">
    <file.name type="string">cm3r</file.name>
    <file.name.vj.1 type="string">cm3r</file.name.vj.1>
    <common.name type="string">109</common.name>
    <profile.appl type="string">secRoleBasedAccess</profile.appl>
    <profile.variable type="string">$L.env</profile.variable>
    <open.state type="string">change.open</open.state>
    <paging.file type="string">cm3rpage</paging.file>
    <global.lists sctype="array">
      <global.lists sctype="string">cm3rcategory</global.lists>
      <global.lists sctype="string">cm3rcatphase</global.lists>
      <global.lists sctype="string">cm3tcategory</global.lists>
      <global.lists sctype="string">cm3tcatphase</global.lists>
      <global.lists sctype="string">Change Task Status</global.lists>
    </global.lists>
    <search.state type="string">change.search</search.state>
    <category.file.name type="string">cm3rcategory</category.file.name>
    <phase.file.name type="string">cm3rcatphase</phase.file.name>
    <local.variables sctype="array">
      <local.variables sctype="string">$L.fc.master</local.variables>
      <local.variables sctype="string">$L.lock.name</local.variables>
      <local.variables sctype="string">$L.smart.search</local.variables>
      <local.variables sctype="string">$L.number.record</local.variables>
      <local.variables sctype="string">$irspread</local.variables>
      <local.variables sctype="string">$L.saved</local.variables>
      <local.variables sctype="string">$L.has.tasks</local.variables>
      <local.variables sctype="string">$L.review.number</local.variables>
      <local.variables sctype="string">$L.copy.number</local.variables>
      <local.variables sctype="string">$L.docwithview</local.variables>
      <local.variables sctype="string">$L.kmdoc</local.variables>
      <local.variables sctype="string">$L.externaldoc</local.variables>
      <local.variables sctype="string">$L.isexternalchange</local.variables>
      <local.variables sctype="string">$L.sla.id</local.variables>
      <local.variables sctype="string">$L.slo.current.status</local.variables>
      <local.variables sctype="string">$L.slo.name</local.variables>
      <local.variables sctype="string">$L.slo.initial.state</local.variables>
      <local.variables sctype="string">$L.slo.final.state</local.variables>
      <local.variables sctype="string">$L.slo.expiration.time</local.variables>
      <local.variables sctype="string">$L.file.save</local.variables>
      <local.variables sctype="string">$L.allowOpenTasks</local.variables>
      <local.variables sctype="string">$L.phase.save</local.variables>
      <local.variables sctype="string">$L.wfPhase.save</local.variables>
      <local.variables sctype="string">$L.wfgWFName</local.variables>
      <local.variables sctype="string">$L.wfgWFPhase</local.variables>
      <local.variables sctype="string">$L.wfgWFTable</local.variables>
      <local.variables sctype="string">$L.wfgWFRecId</local.variables>
      <local.variables sctype="string">$L.clientType</local.variables>
      <local.variables sctype="string">$L.migrated.workflow</local.variables>
      <local.variables sctype="string">$L.wfT.Phase</local.variables>
    </local.variables>
    <unique.fieldxxx NullValue="1" type="string"/>
    <qbe.screen.id NullValue="1" type="string"/>
    <qbe.format NullValue="1" type="string"/>
    <list.state type="string">change.list</list.state>
    <default.state type="string">change.view</default.state>
    <unique.field sctype="array">
      <unique.field sctype="string">header,number</unique.field>
    </unique.field>
    <use.locking type="boolean">true</use.locking>
    <default.object NullValue="1" type="boolean"/>
    <alert.location NullValue="1" type="string"/>
    <alert.condition type="operator">open in $L.file~=false</alert.condition>
    <alert.field.name NullValue="1" type="string"/>
    <alert.status.field type="string">alert.stage</alert.status.field>
    <appr.cond.type type="string">allfirstdeny</appr.cond.type>
    <denial.type type="string">immediate</denial.type>
    <desc.field NullValue="1" type="string"/>
    <appr.fc NullValue="1" type="string"/>
    <approval.process type="string">change.approved</approval.process>
    <denial.process type="string">change.approved</denial.process>
    <single.notify.approval type="string">ChM Change Approval</single.notify.approval>
    <single.notify.denial type="string">ChM Change Denial</single.notify.denial>
    <single.notify.retraction type="string">ChM Change Retract</single.notify.retraction>
    <final.notify.approval type="string">ChM Final Approval</final.notify.approval>
    <final.notify.denial type="string">ChM Final Denial</final.notify.denial>
    <log.approvals type="boolean">true</log.approvals>
    <browse.state type="string">change.browse</browse.state>
    <parent.id NullValue="1" sctype="array">
      <parent.id NullValue="1" type="string"/>
    </parent.id>
    <parent.object NullValue="1" sctype="array">
      <parent.object NullValue="1" type="string"/>
    </parent.object>
    <number.record type="string">cm3r</number.record>
    <revision.file NullValue="1" type="string"/>
    <max.revisions NullValue="1" type="decimal"/>
    <lock.parent NullValue="1" type="boolean"/>
    <log.alerts type="boolean">true</log.alerts>
    <alert.update.process type="string">change.approved</alert.update.process>
    <alerts.against.parent NullValue="1" type="string"/>
    <close.state type="string">change.close</close.state>
    <master.fc type="string">cm3r</master.fc>
    <sc.manage.screen type="string">jscall("changeManagement.transDispFmt",nullsub(request.manage.format in $G.cm3r.environment,"sc.manage.chm"))</sc.manage.screen>
    <scm.inbox type="string">initial.request.inbox in $G.cm3r.environment</scm.inbox>
    <scm.query type="string">assigned.to=NULL</scm.query>
    <scm.condition type="operator">lioption("Change Management") and index("SysAdmin", $lo.ucapex)&gt;0 or index("ChMAdmin", $lo.ucapex)&gt;0 or index("change request", $lo.ucapex)&gt;0 or index("change", $lo.ucapex)&gt;0</scm.condition>
    <scm.add.condition type="operator">open in $G.cm3r.environment</scm.add.condition>
    <scm.add.appl type="string">cm3r.main</scm.add.appl>
    <scm.add.names sctype="array">
      <scm.add.names sctype="string">prompt</scm.add.names>
    </scm.add.names>
    <scm.add.values sctype="array">
      <scm.add.values sctype="string">val("true",4)</scm.add.values>
    </scm.add.values>
    <scm.thread.inbox.search type="boolean">true</scm.thread.inbox.search>
    <scm.thread.search.list NullValue="1" type="boolean"/>
    <scm.thread.list.edit NullValue="1" type="boolean"/>
    <scm.search.format NullValue="1" type="string"/>
    <scm.query.name type="string">scmsg(492, "us")</scm.query.name>
    <scm.thread.inbox.edit type="boolean">true</scm.thread.inbox.edit>
    <lock.on.display NullValue="1" type="boolean"/>
    <preapprove.cond NullValue="1" type="boolean"/>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">05/13/19 19:02:31</sysmodtime>
    <joindef NullValue="1" type="string"/>
    <manual.states NullValue="1" sctype="array">
      <manual.states NullValue="1" type="string"/>
    </manual.states>
    <alerts NullValue="1" sctype="array">
      <alerts NullValue="1" type="string"/>
    </alerts>
    <alert.recalc type="operator">evaluate(nullsub(parse(str(alertsRecalc in $L.wfPhase), 2), false))</alert.recalc>
    <alert.reset type="operator">evaluate(nullsub(parse(str(alertsReset in $L.wfPhase), 2), false)) or not  (same(current.phase in $L.file, current.phase in $L.file.save))</alert.reset>
    <approval.condition type="boolean">true</approval.condition>
    <approval.location type="string">record</approval.location>
    <approval.field.name type="string">phaseApprovals</approval.field.name>
    <approval.recalc type="operator">evaluate(nullsub(parse(str(approvalsRecalc in $L.wfPhase), 2), false))</approval.recalc>
    <approval.reset type="operator">not  (same(current.phase in $L.file, current.phase in $L.file.save)) and (nullsub($L.migrated.workflow, false)=false or category in $L.file.save~="Unplanned Change") or evaluate(nullsub(parse(str(approvalsReset in $L.wfPhase), 2), false))</approval.reset>
    <approvals NullValue="1" sctype="array">
      <approvals NullValue="1" type="string"/>
    </approvals>
    <approval.status.field type="string">approval.status</approval.status.field>
    <approval.groups NullValue="1" type="string"/>
    <global.inbox NullValue="1" type="boolean"/>
    <personal.inbox NullValue="1" type="boolean"/>
    <watch.variables NullValue="1" sctype="array">
      <watch.variables NullValue="1" type="string"/>
    </watch.variables>
    <approval.comments type="boolean">false</approval.comments>
    <engine.access NullValue="1" type="boolean"/>
    <special.object.type NullValue="1" type="string"/>
    <special.object.file NullValue="1" type="string"/>
    <display.format NullValue="1" type="string"/>
    <notification.add type="string">ChM Change Open</notification.add>
    <notification.update type="string">ChM Change Update</notification.update>
    <notification.delete NullValue="1" type="string"/>
    <activitylog.file.name type="string">activitycm3r</activitylog.file.name>
    <activity.selection.var type="string">$cm.activity</activity.selection.var>
    <activity.mandatory type="boolean">false</activity.mandatory>
    <activity.mandatory.msg type="string">scmsg(2210, "us")</activity.mandatory.msg>
    <update.field.var type="string">$cm.update</update.field.var>
    <activity.post.link NullValue="1" type="string"/>
    <aggregate.approvals NullValue="1" type="boolean"/>
    <tableAccess NullValue="1" type="file"/>
    <assignedToFields sctype="array">
      <assignedToFields sctype="string">coordinator</assignedToFields>
      <assignedToFields sctype="string">assigned.to</assignedToFields>
    </assignedToFields>
    <workgroupFields sctype="array">
      <workgroupFields sctype="string">assign.dept</workgroupFields>
    </workgroupFields>
    <statusField NullValue="1" type="string"/>
    <supportTemplates type="boolean">true</supportTemplates>
    <default.template type="operator">default.template in $L.category</default.template>
    <watch.variable.name NullValue="1" sctype="array">
      <watch.variable.name NullValue="1" type="string"/>
    </watch.variable.name>
    <watch.variable.type NullValue="1" sctype="array">
      <watch.variable.type NullValue="1" type="string"/>
    </watch.variable.type>
    <watch.variable.global.list NullValue="1" sctype="array">
      <watch.variable.global.list NullValue="1" type="string"/>
    </watch.variable.global.list>
    <workflowLocation type="string">category</workflowLocation>
    <workflow NullValue="1" type="string"/>
    <retract.process type="string">change.approved</retract.process>
    <action sctype="array">
      <action sctype="structure">
        <actionName type="string">Show Risk Result</actionName>
        <actionId type="string">riskResult.show</actionId>
        <actionCondition type="operator">$enablenativeRC="true" and (category in $L.file="Change Proposal" or category in $L.file="Emergency Change" or category in $L.file="Normal Change" or category in $L.file="Standard Change" or category in $L.file="Release Management")</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$enablenativeRC"&gt;$enablenativeRC&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;collection logical="AND" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Category"&gt;category&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Change Proposal&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="OR" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Category"&gt;category&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Emergency Change&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="OR" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Category"&gt;category&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Normal Change&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="OR" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Category"&gt;category&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Standard Change&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="OR" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Category"&gt;category&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Release Management&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">340</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction type="string"/>
        <actionCondDesc type="string">( $enablenativeRC = "true" AND ( Category in CurrentRecord = "Change Proposal" OR Category in CurrentRecord = "Emergency Change" OR Category in CurrentRecord = "Normal Change" OR Category in CurrentRecord = "Standard Change" OR Category in CurrentRecord = "Release Management"))</actionCondDesc>
        <actionMsgId type="decimal">6</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Calculate Risk</actionName>
        <actionId type="string">RiskAssess.calc.preview</actionId>
        <actionCondition type="operator">$enablenativeRC="true" and not  (same(active in $L.file, false)) and (workflow in $L.category="Release Management" or workflow in $L.category="Normal" and not  (same(name in $L.wfPhase, "Registration and Categorization")) or workflow in $L.category="Standard Change" and not  (same(name in $L.wfPhase, "Registration and Categorization")) or workflow in $L.category="Emergency" and not  (same(name in $L.wfPhase, "Registration and Categorization")) or workflow in $L.category="Change Proposal" and not  (same(name in $L.wfPhase, "Registration and Categorization")))</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$enablenativeRC"&gt;$enablenativeRC&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Active"&gt;active&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="boolean"&gt;false&lt;/Value&gt;&lt;/condition&gt;&lt;collection logical="AND" negate=""&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;Category&lt;/TableName&gt;&lt;FieldName caption="Workflow"&gt;workflow&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Release Management&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;collection logical="OR" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;Category&lt;/TableName&gt;&lt;FieldName caption="Workflow"&gt;workflow&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Normal&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentWFPhase&lt;/TableName&gt;&lt;FieldName caption="Name"&gt;name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType=""&gt;Registration and Categorization&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;collection logical="OR" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;Category&lt;/TableName&gt;&lt;FieldName caption="Workflow"&gt;workflow&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Standard Change&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentWFPhase&lt;/TableName&gt;&lt;FieldName caption="Name"&gt;name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType=""&gt;Registration and Categorization&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;collection logical="OR" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;Category&lt;/TableName&gt;&lt;FieldName caption="Workflow"&gt;workflow&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Emergency&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentWFPhase&lt;/TableName&gt;&lt;FieldName caption="Name"&gt;name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType=""&gt;Registration and Categorization&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;collection logical="OR" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;Category&lt;/TableName&gt;&lt;FieldName caption="Workflow"&gt;workflow&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;Change Proposal&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentWFPhase&lt;/TableName&gt;&lt;FieldName caption="Name"&gt;name&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType=""&gt;Registration and Categorization&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/collection&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">341</actionOption>
        <actionLock type="boolean">true</actionLock>
        <actionRunAction type="string"/>
        <actionCondDesc type="string">( $enablenativeRC = "true" AND Active in CurrentRecord != false AND (( Workflow in Category = "Release Management") OR ( Workflow in Category = "Normal" AND Name in CurrentWFPhase != "Registration and Categorization") OR ( Workflow in Category = "Standard Change" AND Name in CurrentWFPhase != "Registration and Categorization") OR ( Workflow in Category = "Emergency" AND Name in CurrentWFPhase != "Registration and Categorization") OR ( Workflow in Category = "Change Proposal" AND Name in CurrentWFPhase != "Registration and Categorization")))</actionCondDesc>
        <actionMsgId type="decimal">5</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Unlink Record</actionName>
        <actionId type="string">Unlink Record</actionId>
        <actionCondition type="operator">nullsub(active in $L.wfPhase, false)=true</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub(active in $L.wfPhase, false)=true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3062</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: nullsub(active in $L.wfPhase, false)=true)</actionCondDesc>
        <actionMsgId type="decimal">3</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Link New Record</actionName>
        <actionId type="string">Link New Record</actionId>
        <actionCondition type="operator">nullsub(active in $L.wfPhase, false)=true</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub(active in $L.wfPhase, false)=true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3061</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: nullsub(active in $L.wfPhase, false)=true)</actionCondDesc>
        <actionMsgId type="decimal">2</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Associate Record</actionName>
        <actionId type="string">Associate Record</actionId>
        <actionCondition type="operator">nullsub(active in $L.wfPhase, false)=true</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub(active in $L.wfPhase, false)=true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3060</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: nullsub(active in $L.wfPhase, false)=true)</actionCondDesc>
        <actionMsgId type="decimal">1</actionMsgId>
      </action>
    </action>
    <onCreateRules NullValue="1" sctype="array">
      <onCreateRules NullValue="1" type="string"/>
    </onCreateRules>
    <onUpdateRules NullValue="1" sctype="array">
      <onUpdateRules NullValue="1" type="string"/>
    </onUpdateRules>
    <afterAddRules sctype="array">
      <afterAddRules sctype="string">chm.audit.record</afterAddRules>
    </afterAddRules>
    <afterUpdateRules sctype="array">
      <afterUpdateRules sctype="string">common.taskplan.ticket.change</afterUpdateRules>
      <afterUpdateRules sctype="string">chm.audit.record</afterUpdateRules>
    </afterUpdateRules>
    <initRules sctype="array">
      <initRules sctype="string">common.taskplan.ticket.init</initRules>
    </initRules>
    <onDisplayRules sctype="array">
      <onDisplayRules sctype="string">common.relatedrecord.init.vars</onDisplayRules>
      <onDisplayRules sctype="string">common.workflow.init.vars</onDisplayRules>
      <onDisplayRules sctype="string">chm.attachment.init.vars</onDisplayRules>
    </onDisplayRules>
    <onEnterRules NullValue="1" sctype="array">
      <onEnterRules NullValue="1" type="string"/>
    </onEnterRules>
    <onExitRules sctype="array">
      <onExitRules sctype="string">common.taskplan.ticket.phase.change</onExitRules>
    </onExitRules>
    <afterEnterRules sctype="array">
      <afterEnterRules sctype="string">common.taskplan.ticket.change</afterEnterRules>
      <afterEnterRules sctype="string">common.taskplan.sync.changephase.totaskparentphase</afterEnterRules>
      <afterEnterRules sctype="string">chm.sync.status.to.interaction</afterEnterRules>
      <afterEnterRules sctype="string">chm.audit.record</afterEnterRules>
    </afterEnterRules>
    <reject.reason.values type="string">Change Reject Reasons</reject.reason.values>
    <approval.enabled NullValue="1" type="boolean"/>
  </record>
</recordset>
