<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="OOFlow">
  <record id="uuid=&quot;d7b4dd34-5562-4b91-94c2-12706df3acfd&quot;" recordid="d7b4dd34-5562-4b91-94c2-12706df3acfd">
    <uuid type="string">d7b4dd34-5562-4b91-94c2-12706df3acfd</uuid>
    <sysmodtime type="dateTime">01/22/17 17:48:16</sysmodtime>
    <sysmodcount type="decimal">7</sysmodcount>
    <sysmoduser type="string">SMOO1</sysmoduser>
    <path type="string">/Library/Request Fulfillment/Accelerator Packs/Employee Onboarding/Onboard Employee On-Premise</path>
    <name type="string">Onboard Employee On-Premise</name>
    <description type="string">&lt;pre&gt;
Creates New Active Directory user and an Exchange Mailbox to the same user.  After creating the user and mailbox, an email is being sent with the user details. The user is forced to change his password at first log in.
The flow generates the CN, SAMAccount, and Mailbox using the user's first name and last name, if they are already exists, the flow will generate new values (based on the user's name) up to 100 times.

Inputs:
    adHost - The IP or host name of the domain controller, without the port number.
Examples: test.example.com,  test.example.com, &lt;IPv4Address&gt;, &lt;IPv6Address&gt;, etc.
Value format: The format of an IPv4 address is: [0-225].[0-225].[0-225].[0-225]. The format of an IPv6 address is ####:####:####:####:####:####:####:####/### (with a prefix), where each #### is a hexadecimal value between 0 to FFFF and the prefix /### is a decimal value between 0 to 128. The prefix length is optional.
    adPort: The host's unsecured port.
    adUsername - User to connect to Active Directory as.
Example: domain\administrator
    adPassword - Password to connect to Active Directory as.
    requestId - HP Service Anywhere's request Id.
    isMailboxNeeded - determine whether a New Mailbox should be created (mailbox can't be created if a new AD user wasn't created).
    organizationUnit - The organizational Unit DN.
Example: OU=OUTest,DC=battleground,DC=ad
    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is used. Default port for SSL is 636.
Default value: true
Valid values: true, false.
    firstName - Employee's first name.
    lastName - Employee's last name.
    userStreet - Employee's street.
    userCity - Employee's city.
    userStateOrProvince - Employee's state or province option.
    userZipOrPostalCode - Employee's zip or postal code.
    userCountryOrRegion - Employee's country or region. The format for this input should be countryName,countryAbbreviation,countryCode. countryName sets the value for the "co" property, countryAbbreviation sets the "c" property using the two-letter country code, countryCode sets the "countryCode"   property using the numeric value of the country.
    userAttributesList - The list of the attributes to set to the user. Should be provided in the following format: attribute:value, separated by new line. Make sure that the attributes are valid Active Directory attributes.
    exchangeHost - The Exchange 2010 or 2013 server host.
    exchangeUsername - The username to use when connecting to the server.
    exchangePassword - The password to use when connecting to the server.
    exchangeAuthType - Specifies the mechanism that is used to authenticate the user's credentials. 
                        Valid values: "Default", "Basic", "Credssp", "Digest", "Kerberos", "Negotiate", and "NegotiateWithImplicitCredential".
Default value: "Default".
    exchangeDatabase 	- Specifies which Exchange database will contain the new mailbox. If this input is empty, then the operation should be performed on an Exchange mailbox server role containing at least one mailbox database.
    emailHostname - The hostname or ip address of the smtp server.
    emailPort - The port smtp service is listening.
    emailFrom - The email address from which notifications are being sent automatically.
    managerEmail -  Specifies the primary SMTP address for the mailbox to be enabled.
    trustAllRoots - Specifies whether to enable weak security over SSL. A SSL certificate is trusted even if no trusted certification authority issued it.
Default value: true.
Valid values: true, false.
    keyStore - The location of the KeyStore file.
Example: %JAVA_HOME%/jre/lib/security/cacerts
    keyStorePassword - The password associated with the KeyStore file.
    trustKeystore - The location of the TrustStore file.
Example: %JAVA_HOME%/jre/lib/security/cacerts
    trustPassword - The password associated with the TrustStore file.

Outputs:
   returnResult - a message specifying the success or failure of the operation.
   userDN - the new user DN.
   userSAMAAccountName - the new user SAM account name.
   maillAddress - the user email address.

Responses:
    success - New user and mailbox were created successfully.
    failure - flow failed to create the user.
    noActionTaken - failed to generate unique CN or SAMAccount for the user.

Notes:
1.  If the useSSL input value is set to true then this operation will connect to the Active Directory server using the ldaps protocol on port 636. Installing a valid certificate on a domain controller permits the LDAP service to listen for, and automatically accept, SSL connections for both LDAP and global catalog traffic. If a valid ssl certificate is not installed on the domain controller, the operation will fail with something like "javax.naming.CommunicationException: simple bind failed: [Root exception is javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake".
2.  It is recommended that this operation be used with the useSSL input set to true. This is due to the fact this operation interacts with the user's password through LDAP and there is a constraint in Microsoft Active Directory namely that manipulating a user's password through LDAP can be done given certain restrictions and one of those restrictions is that the communication between the client and the server should be done over Secure Socket Layer (SSL) connection. (More details can be found at the following link http://support.microsoft.com/kb/269190/en-us )
3.  If the operation is used with useSSL set to false it will fail with the message "LDAP: error code 53 - 0000001F: SvcErr: DSID-031A12D2, problem 5003 (WILL_NOT_PERFORM), data 0" which usually indicates that the LDAP server cannot process the request because of server-defined restrictions.
4.  The "userPassword" input field must meet the following requirements:
        - is at least six characters long
        - contains characters from at least three of the following five categories: English uppercase characters ('A' - 'Z'), English lowercase characters ('a' - 'z'), base 10 digits ('0' - '9'), non-alphanumeric (For example: '!', '$', '#', or '%'), Unicode characters
        - does not contain three or more characters from the user's account name
5.  If the input value for useSSL is set to true then the connection will be made using LDAPS, otherwise the connection will be made using LDAP.
6.  If the port number is not specified in the host input the default ports will be used to make the connection (port 636 for LDAPS and 389 for LDAP).
7.  Please see the notes in the Exchange Mailbox description and in the Active Directory folder description.

&lt;/pre&gt;</description>
    <lastmodifiedtime type="string">1469085667081</lastmodifiedtime>
    <paras sctype="array">
      <paras sctype="structure">
        <para.name type="string">adHost</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">adPort</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">adUsername</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">adPassword</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">true</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">requestId</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">isMailboxNeeded</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">organizationUnit</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">userFirstName</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">userLastName</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">exchangeHost</para.name>
        <para.required type="string">false</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">exchangeUsername</para.name>
        <para.required type="string">false</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">exchangePassword</para.name>
        <para.required type="string">false</para.required>
        <para.sensitive type="string">true</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">exchangeAuthType</para.name>
        <para.required type="string">false</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">emailHostname</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">emailFrom</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
      <paras sctype="structure">
        <para.name type="string">managerEmail</para.name>
        <para.required type="string">true</para.required>
        <para.sensitive type="string">false</para.sensitive>
      </paras>
    </paras>
    <scheduled type="decimal">2</scheduled>
  </record>
</recordset>
