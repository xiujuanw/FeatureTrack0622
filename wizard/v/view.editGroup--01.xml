<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="wizard">
  <record id="name=&quot;view.editGroup&quot;" recordid="view.editGroup">
    <name type="string">view.editGroup</name>
    <file.selection type="string">passed</file.selection>
    <create.record.filename NullValue="1" type="string"/>
    <select.record.filename NullValue="1" type="string"/>
    <select.query NullValue="1" type="string"/>
    <resolve.variables NullValue="1" type="boolean"/>
    <wizard.type type="string">input</wizard.type>
    <wizard.variables sctype="array">
      <wizard.variables sctype="string">$L.field.list</wizard.variables>
    </wizard.variables>
    <initial.process NullValue="1" type="string"/>
    <init.expressions sctype="array">
      <init.expressions sctype="operator">groupBy in $L.file=val(nullsub(groupBy in $L.file, {{[, , ]}, {[, , ]}, {[, , ]}, {[, , ]}}), 8)</init.expressions>
      <init.expressions sctype="operator">$L.lng=lng(denull(groupByFieldName in $L.file))</init.expressions>
      <init.expressions sctype="operator">for $L.index = 1 to $L.lng do (if (index(1 in $L.index in groupBy in $L.file, fieldlist in $L.file)&gt;0) then (3 in $L.index in groupBy in $L.file=true) else (3 in $L.index in groupBy in $L.file=false))</init.expressions>
      <init.expressions sctype="operator">for $L.z = 1 to lng(denull(groupBy in $L.file)) do (2 in $L.z in groupBy in $L.file=nullsub(2 in $L.z in groupBy in $L.file, "ascending"))</init.expressions>
      <init.expressions sctype="operator">$groupfieldNames=jscall("GetFieldNames.makeGroupFields", inbox.type in $L.file)</init.expressions>
      <init.expressions sctype="operator">$L.temp.base.field.captions=jscall("convertToCaptions.getFieldCaptions", $groupfieldNames, inbox.type in $L.file)</init.expressions>
      <init.expressions sctype="operator">$L.sort.array={$L.temp.base.field.captions, $groupfieldNames}</init.expressions>
      <init.expressions sctype="operator">$L.void=rtecall("sort", $L.rc, $L.sort.array, 0, 0);$L.temp.base.field.captions=1 in $L.sort.array;$groupfieldNames=2 in $L.sort.array</init.expressions>
      <init.expressions sctype="string"/>
      <init.expressions sctype="operator">$groupfieldNames1=$groupfieldNames;$groupfieldNames2=$groupfieldNames;$groupfieldNames3=$groupfieldNames;$groupfieldNames4=$groupfieldNames</init.expressions>
      <init.expressions sctype="operator">$groupfieldCaptions1=$L.temp.base.field.captions;$groupfieldCaptions2=$L.temp.base.field.captions;$groupfieldCaptions3=$L.temp.base.field.captions;$groupfieldCaptions4=$L.temp.base.field.captions</init.expressions>
      <init.expressions sctype="string"/>
      <init.expressions sctype="operator">$L.temp.field.caption1=jscall("convertToRelatedObjectCaptions.getROFieldCaption", 1 in 1 in groupBy in $L.file)</init.expressions>
      <init.expressions sctype="operator">$L.temp.field.caption2=jscall("convertToRelatedObjectCaptions.getROFieldCaption", 1 in 2 in groupBy in $L.file)</init.expressions>
      <init.expressions sctype="operator">$L.temp.field.caption3=jscall("convertToRelatedObjectCaptions.getROFieldCaption", 1 in 3 in groupBy in $L.file)</init.expressions>
      <init.expressions sctype="operator">$L.temp.field.caption4=jscall("convertToRelatedObjectCaptions.getROFieldCaption", 1 in 4 in groupBy in $L.file)</init.expressions>
      <init.expressions sctype="string"/>
      <init.expressions sctype="string"/>
      <init.expressions sctype="operator">if (index(";", 1 in 1 in groupBy in $L.file)&gt;1) then ($groupfieldNames1=insert($groupfieldNames1, 1, 1, 1 in 1 in groupBy in $L.file);$groupfieldCaptions1=insert($groupfieldCaptions1, 1, 1, $L.temp.field.caption1))</init.expressions>
      <init.expressions sctype="operator">if (index(";", 1 in 2 in groupBy in $L.file)&gt;1) then ($groupfieldNames2=insert($groupfieldNames2, 1, 1, 1 in 2 in groupBy in $L.file);$groupfieldCaptions2=insert($groupfieldCaptions2, 1, 1, $L.temp.field.caption2))</init.expressions>
      <init.expressions sctype="operator">if (index(";", 1 in 3 in groupBy in $L.file)&gt;1) then ($groupfieldNames3=insert($groupfieldNames3, 1, 1, 1 in 3 in groupBy in $L.file);$groupfieldCaptions3=insert($groupfieldCaptions3, 1, 1, $L.temp.field.caption3))</init.expressions>
      <init.expressions sctype="operator">if (index(";", 1 in 4 in groupBy in $L.file)&gt;1) then ($groupfieldNames4=insert($groupfieldNames4, 1, 1, 1 in 4 in groupBy in $L.file);$groupfieldCaptions4=insert($groupfieldCaptions4, 1, 1, $L.temp.field.caption4))</init.expressions>
    </init.expressions>
    <run.expressions NullValue="1" type="boolean"/>
    <expressions sctype="array">
      <expressions sctype="operator">for $L.z = 1 to lng(denull(groupBy in $L.file)) do (2 in $L.z in groupBy in $L.file=nullsub(2 in $L.z in groupBy in $L.file, "ascending"))</expressions>
      <expressions sctype="operator">for $L.z = 1 to lng(denull(groupBy in $L.file)) do (if (1 in $L.z in groupBy in $L.file=NULL) then (groupBy in $L.file=delete(groupBy in $L.file, $L.z, 1)))</expressions>
      <expressions sctype="operator">for $L.z = 1 to lng(denull(groupBy in $L.file)) do (if (index(";", 1 in $L.z in groupBy in $L.file)=0) then (1 in $L.z in groupBy in $L.file=inbox.type in $L.file+";"+1 in $L.z in groupBy in $L.file))</expressions>
      <expressions sctype="string"/>
      <expressions sctype="operator">$L.lng=lng(denull(groupByFieldName in $L.file))</expressions>
      <expressions sctype="operator">for $L.index = 1 to $L.lng do (if (index(1 in $L.index in groupBy in $L.file, fieldlist in $L.file)=0 and 3 in $L.index in groupBy in $L.file=true) then (fieldlist in $L.file=insert(fieldlist in $L.file, 0, 1, 1 in $L.index in groupBy in $L.file)))</expressions>
      <expressions sctype="operator">for $L.index = 1 to $L.lng do ($L.fieldlist.index=index(1 in $L.index in groupBy in $L.file, fieldlist in $L.file);if ($L.fieldlist.index&gt;0 and 3 in $L.index in groupBy in $L.file=false) then (fieldlist in $L.file=delete(fieldlist in $L.file, $L.fieldlist.index, 1)))</expressions>
    </expressions>
    <run.process NullValue="1" type="boolean"/>
    <process.name NullValue="1" type="string"/>
    <run.format.control NullValue="1" type="boolean"/>
    <format.control type="string">view.editGroup</format.control>
    <format.control.type NullValue="1" type="string"/>
    <bad.validation.action type="string">return</bad.validation.action>
    <display.when.complete NullValue="1" type="boolean"/>
    <display.mode NullValue="1" type="string"/>
    <allow.finish type="boolean">true</allow.finish>
    <restart.condition NullValue="1" type="boolean"/>
    <next.wizard sctype="array">
      <next.wizard sctype="string">view.configureView_1</next.wizard>
    </next.wizard>
    <next.wizard.cond sctype="array">
      <next.wizard.cond sctype="globalVar">$L.configure</next.wizard.cond>
    </next.wizard.cond>
    <link.record NullValue="1" type="string"/>
    <prompt type="string">scmsg(74,"wizard")</prompt>
    <message NullValue="1" sctype="array">
      <message NullValue="1" type="string"/>
    </message>
    <message.cond NullValue="1" sctype="array">
      <message.cond NullValue="1" type="boolean"/>
    </message.cond>
    <message.type NullValue="1" sctype="array">
      <message.type NullValue="1" type="string"/>
    </message.type>
    <sub.format type="string">view.editGroup</sub.format>
    <use.file.as.selection NullValue="1" type="boolean"/>
    <query.for.records NullValue="1" type="boolean"/>
    <query.for.records.filename NullValue="1" type="string"/>
    <query.for.records.query NullValue="1" type="string"/>
    <title type="string">scmsg(78,"wizard", {inbox.name in $L.passed.file})</title>
    <select.no.records NullValue="1" type="string"/>
    <bitmap NullValue="1" type="string"/>
    <perform.action.on type="string">file</perform.action.on>
    <reset.to.selections NullValue="1" type="boolean"/>
    <window.title type="string">scmsg(73,"wizard")</window.title>
    <display.screen type="string">view.editGroup</display.screen>
    <mult.field.name NullValue="1" type="string"/>
    <message.level NullValue="1" sctype="array">
      <message.level NullValue="1" type="decimal"/>
    </message.level>
    <start NullValue="1" type="boolean"/>
    <usage NullValue="1" sctype="array">
      <usage NullValue="1" type="string"/>
    </usage>
    <query.for.records.sort NullValue="1" sctype="array">
      <query.for.records.sort NullValue="1" type="string"/>
    </query.for.records.sort>
    <allow.skip NullValue="1" type="boolean"/>
    <query.select.one.record NullValue="1" type="string"/>
    <comments NullValue="1" sctype="array">
      <comments NullValue="1" type="string"/>
    </comments>
    <query.select.no.records NullValue="1" type="string"/>
    <query.no.records.msg NullValue="1" type="string"/>
    <brief.description type="string">Edit Group By Information</brief.description>
    <cancel.expressions NullValue="1" sctype="array">
      <cancel.expressions NullValue="1" type="expression"/>
    </cancel.expressions>
    <global.lists NullValue="1" sctype="array">
      <global.lists NullValue="1" type="string"/>
    </global.lists>
    <javascript.actions NullValue="1" type="string"/>
    <javascript.init NullValue="1" type="string"/>
    <javascript.cancel NullValue="1" type="string"/>
    <disable.next.previous type="boolean">false</disable.next.previous>
    <sysmodtime type="dateTime">02/19/20 22:14:28</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">55</sysmodcount>
    <disable.next NullValue="1" type="boolean"/>
    <reset.current.file NullValue="1" type="boolean"/>
    <disable.previous type="boolean">true</disable.previous>
    <formName NullValue="1" type="string"/>
    <noPromptOnCancel NullValue="1" type="boolean"/>
    <prev.wizard NullValue="1" sctype="array">
      <prev.wizard NullValue="1" type="string"/>
    </prev.wizard>
    <prev.wizard.cond NullValue="1" sctype="array">
      <prev.wizard.cond NullValue="1" type="boolean"/>
    </prev.wizard.cond>
    <previous.cond NullValue="1" type="boolean"/>
  </record>
</recordset>
