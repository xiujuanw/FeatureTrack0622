<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="wizard">
  <record id="name=&quot;Add Service SLA - Catalog Item (2)&quot;" recordid="Add Service SLA - Catalog Item (2)">
    <name type="string">Add Service SLA - Catalog Item (2)</name>
    <file.selection type="string">passed</file.selection>
    <create.record.filename NullValue="1" type="string"/>
    <select.record.filename NullValue="1" type="string"/>
    <select.query NullValue="1" type="string"/>
    <resolve.variables type="boolean">true</resolve.variables>
    <wizard.type type="string">input</wizard.type>
    <wizard.variables NullValue="1" sctype="array">
      <wizard.variables NullValue="1" type="string"/>
    </wizard.variables>
    <initial.process NullValue="1" type="string"/>
    <init.expressions NullValue="1" sctype="array">
      <init.expressions NullValue="1" type="expression"/>
    </init.expressions>
    <run.expressions NullValue="1" type="boolean"/>
    <expressions sctype="array">
      <expressions sctype="operator">for $i = 1 to lng(denull($sla.list)) do ($valid.slas=insert($valid.slas, 0, 1, val($i in $sla.list)))</expressions>
      <expressions sctype="operator">$L.void="Variable to store the lenght of the array of structures"</expressions>
      <expressions sctype="operator">$arraylng=lng(denull(serviceSLAs in $L.file))</expressions>
      <expressions sctype="operator">$L.void="Verifies if the SLA already exists on the array of structures to consolidate if it finds it"</expressions>
      <expressions sctype="operator">if (val($arraylng)&gt;=1) then for $j = 1 to val($arraylng) do (if ($sla.id=1 in $j in serviceSLAs in $L.file) then ($sla.found=true;$pos1=$j;$j=$arraylng) else ($sla.found=false;$pos1=$arraylng+1)) else ($sla.found=false;$pos1=1)</expressions>
      <expressions sctype="operator">$L.void="Variable to store the lenght of the array of limit SLAs"</expressions>
      <expressions sctype="operator">$LAarraylng=lng(denull($valid.slas))</expressions>
      <expressions sctype="operator">$L.void="Stores the SLA id added"</expressions>
      <expressions sctype="operator">1 in $pos1 in serviceSLAs in $L.file=$sla.id</expressions>
      <expressions sctype="operator">$L.void="Verifies if the limiting SLAs already exist on the array of structures to consolidate if it finds them"</expressions>
      <expressions sctype="operator">if $sla.found then for $k = 1 to $LAarraylng do (if ($k in $valid.slas) isin (2 in $pos1 in serviceSLAs in $L.file) then (2 in $pos1 in serviceSLAs in $L.file=2 in $pos1 in serviceSLAs in $L.file) else (2 in $pos1 in serviceSLAs in $L.file=insert(2 in $pos1 in serviceSLAs in $L.file, 0, 1, $k in $valid.slas)))</expressions>
      <expressions sctype="operator">if (not  ($sla.found)) then (2 in $pos1 in serviceSLAs in $L.file=$valid.slas)</expressions>
    </expressions>
    <run.process NullValue="1" type="boolean"/>
    <process.name type="string">svcCat.disp.serviceSLA.info</process.name>
    <run.format.control NullValue="1" type="boolean"/>
    <format.control NullValue="1" type="string"/>
    <format.control.type type="string">update</format.control.type>
    <bad.validation.action type="string">return</bad.validation.action>
    <display.when.complete NullValue="1" type="boolean"/>
    <display.mode NullValue="1" type="string"/>
    <allow.finish type="boolean">true</allow.finish>
    <restart.condition NullValue="1" type="boolean"/>
    <next.wizard NullValue="1" sctype="array">
      <next.wizard NullValue="1" type="string"/>
    </next.wizard>
    <next.wizard.cond NullValue="1" sctype="array">
      <next.wizard.cond NullValue="1" type="boolean"/>
    </next.wizard.cond>
    <link.record NullValue="1" type="string"/>
    <prompt type="string">scmsg(82,"wizard")</prompt>
    <message NullValue="1" sctype="array">
      <message NullValue="1" type="string"/>
    </message>
    <message.cond NullValue="1" sctype="array">
      <message.cond NullValue="1" type="boolean"/>
    </message.cond>
    <message.type NullValue="1" sctype="array">
      <message.type NullValue="1" type="string"/>
    </message.type>
    <sub.format type="string">wiz.sla.select.2</sub.format>
    <use.file.as.selection NullValue="1" type="boolean"/>
    <query.for.records NullValue="1" type="boolean"/>
    <query.for.records.filename NullValue="1" type="string"/>
    <query.for.records.query NullValue="1" type="string"/>
    <title type="string">scmsg(80,"wizard")</title>
    <select.no.records NullValue="1" type="string"/>
    <bitmap NullValue="1" type="string"/>
    <perform.action.on type="string">file</perform.action.on>
    <reset.to.selections type="boolean">false</reset.to.selections>
    <window.title type="string">scmsg(80,"wizard")</window.title>
    <display.screen NullValue="1" type="string"/>
    <mult.field.name NullValue="1" type="string"/>
    <message.level NullValue="1" sctype="array">
      <message.level NullValue="1" type="decimal"/>
    </message.level>
    <start type="boolean">false</start>
    <usage NullValue="1" sctype="array">
      <usage NullValue="1" type="string"/>
    </usage>
    <query.for.records.sort NullValue="1" sctype="array">
      <query.for.records.sort NullValue="1" type="string"/>
    </query.for.records.sort>
    <allow.skip NullValue="1" type="boolean"/>
    <query.select.one.record NullValue="1" type="string"/>
    <comments NullValue="1" sctype="array">
      <comments NullValue="1" type="string"/>
    </comments>
    <query.select.no.records NullValue="1" type="string"/>
    <query.no.records.msg NullValue="1" type="string"/>
    <brief.description type="string">Add User limitations to Catalog Item</brief.description>
    <cancel.expressions sctype="array">
      <cancel.expressions sctype="operator">$L.void=rtecall("rinit", $L.rc.sla, $L.slaInfo, "sla")</cancel.expressions>
      <cancel.expressions sctype="operator">$sla.id=NULL;$serviceSLAname={};$accessSLAs={};$displaySLAs=NULL</cancel.expressions>
      <cancel.expressions sctype="operator">for $j = 1 to lng(denull(serviceSLAs in $L.file)) do ($L.qry.sla="agreement.id="+val(1 in $j in serviceSLAs in $L.file);$L.success=rtecall("select", $L.rc.sla2, $L.slaInfo, $L.qry.sla);$serviceSLAname=insert($serviceSLAname, 0, 1, nullsub(title in $L.slaInfo, "")))</cancel.expressions>
      <cancel.expressions sctype="operator">for $j = 1 to lng(denull(serviceSLAs in $L.file)) do (if (not  (null(2 in $j in serviceSLAs in $L.file))) then (for $k = 1 to lng(denull(2 in $j in serviceSLAs in $L.file)) do ($L.qry.sla2="agreement.id="+val($k in 2 in $j in serviceSLAs in $L.file);$L.success=rtecall("select", $L.rc.sla3, $L.slaInfo, $L.qry.sla2);if (not  (null($displaySLAs))) then ($displaySLAs=str($displaySLAs)+", "+nullsub(str(title in $L.slaInfo), "")) else ($displaySLAs=nullsub(str(title in $L.slaInfo), "")));$accessSLAs=insert($accessSLAs, 0, 1, $displaySLAs);$displaySLAs=NULL) else ($displaySLAs="";$accessSLAs=insert($accessSLAs, 0, 1, $displaySLAs);$displaySLAs=NULL))</cancel.expressions>
    </cancel.expressions>
    <global.lists NullValue="1" sctype="array">
      <global.lists NullValue="1" type="string"/>
    </global.lists>
    <javascript.actions NullValue="1" type="string"/>
    <javascript.init NullValue="1" type="string"/>
    <javascript.cancel NullValue="1" type="string"/>
    <disable.next.previous NullValue="1" type="boolean"/>
    <sysmodtime type="dateTime">06/06/07 05:32:26</sysmodtime>
    <sysmoduser type="string">rolfel</sysmoduser>
    <sysmodcount type="decimal">1</sysmodcount>
    <disable.next type="boolean">true</disable.next>
    <reset.current.file NullValue="1" type="boolean"/>
    <disable.previous NullValue="1" type="boolean"/>
    <formName NullValue="1" type="string"/>
    <noPromptOnCancel NullValue="1" type="boolean"/>
    <prev.wizard NullValue="1" sctype="array">
      <prev.wizard NullValue="1" type="string"/>
    </prev.wizard>
    <prev.wizard.cond NullValue="1" sctype="array">
      <prev.wizard.cond NullValue="1" type="boolean"/>
    </prev.wizard.cond>
    <previous.cond NullValue="1" type="boolean"/>
  </record>
</recordset>
