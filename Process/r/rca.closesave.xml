<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Process">
  <record id="process=&quot;rca.closesave&quot;" recordid="rca.closesave">
    <process type="string">rca.closesave</process>
    <pre.expressions sctype="array">
      <pre.expressions sctype="operator">if same(nullsub(full.name in $G.rc.environment, full.name in $G.rc.global.environment), true) then ($L.operator=nullsub($lo.ufname, nullsub(operator(), "NULL"))) else ($L.operator=nullsub(operator(), "NULL"))</pre.expressions>
      <pre.expressions sctype="operator">$L.stamp=str(tod())+" ("+$L.operator+"):"</pre.expressions>
      <pre.expressions sctype="operator">if ($rc.update={}) then ($rc.update={""})</pre.expressions>
      <pre.expressions sctype="operator">$L.action="update"</pre.expressions>
      <pre.expressions sctype="operator">if $L.mode#"add" then ($L.action="add")</pre.expressions>
    </pre.expressions>
    <post.expressions sctype="array">
      <post.expressions sctype="operator">if ($L.exit="normal") then ($pmt.update={};cleanup($pmt.activity))</post.expressions>
      <post.expressions sctype="operator">if ($L.exit="normal") then ($kne.update={};cleanup($kne.activity))</post.expressions>
      <post.expressions sctype="operator">if ($L.exit="normal") then ($rc.update={};cleanup($pm.activity))</post.expressions>
      <post.expressions sctype="operator">if ($L.exit="normal") then ($ket.update={};cleanup($ket.activity))</post.expressions>
      <post.expressions sctype="operator">if ($L.exit="normal") then ($L.exit="reeval")</post.expressions>
    </post.expressions>
    <rad sctype="array">
      <rad sctype="structure">
        <application type="string">getnumb</application>
        <names sctype="array">
          <names sctype="string">name</names>
          <names sctype="string">index</names>
          <names sctype="string">text</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.number.record</values>
          <values sctype="string">id in $L.file</values>
          <values sctype="string">"string"</values>
        </values>
        <rad.condition type="globalVar">$L.temp</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">$L.temp=null(id in $L.file)</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">$L.number.record=number.record in $L.object</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="array">
          <post.rad.expressions sctype="operator">if ($L.temp and filename($L.file)="rootcausetask") then (id in $L.file=parent.problem in $L.file+"-"+id in $L.file)</post.rad.expressions>
          <post.rad.expressions sctype="operator">if ($L.temp and filename($L.file)="knownerrortask") then (id in $L.file=parent.error in $L.file+"-"+id in $L.file)</post.rad.expressions>
        </post.rad.expressions>
      </rad>
      <rad sctype="structure">
        <application type="string">se.base.method</application>
        <names sctype="array">
          <names sctype="string">file</names>
          <names sctype="string">text</names>
          <names sctype="string">record</names>
          <names sctype="string">second.file</names>
          <names sctype="string">second.record</names>
          <names sctype="string">prompt</names>
          <names sctype="string">target.file</names>
          <names sctype="string">cond.input</names>
          <names sctype="string">query</names>
          <names sctype="string">tables</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.file</values>
          <values sctype="string">$L.exit</values>
          <values sctype="string">$L.fc</values>
          <values sctype="string">$L.file.save</values>
          <values sctype="string">$L.object</values>
          <values sctype="string">$L.action</values>
          <values sctype="string">$L.fc.master</values>
          <values sctype="string">$L.same</values>
          <values sctype="string">$L.mode</values>
          <values sctype="string">{$L.category,$L.phase}</values>
        </values>
        <rad.condition type="boolean">true</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">if (filename($L.file)~="knownerrortask") then ($L.old.status=status in $L.file;status in $L.file="Closed";$L.old.rcStatus=rcStatus in $L.file;rcStatus in $L.file="Closed") else ($L.old.status=status in $L.file;status in $L.file="Closed";$L.old.keStatus=keStatus in $L.file;keStatus in $L.file="Closed")</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">open in $L.file=false;$L.save.mode="close";$L.mode="close"</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">$L.update.save=update in $L.file</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">if (filename($L.file)="rootcause") then if ($L.mode~="add" and journal.pm in $G.rc.global.environment and lng(denull($rc.update))&gt;0 and denull($rc.update)~={""}) then (update in $L.file=nullsub(denull($rc.update), {""})+denull(update in $L.file);update in $L.file=insert(update in $L.file, 1, 1, $L.stamp))</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">if (filename($L.file)="rootcausetask") then if ($L.mode~="add" and journal.pm in $G.rc.global.environment and lng(denull($pmt.update))&gt;0 and denull($pmt.update)~={""}) then (update in $L.file=nullsub(denull($pmt.update), {""})+denull(update in $L.file);update in $L.file=insert(update in $L.file, 1, 1, $L.stamp))</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">if (filename($L.file)="knownerror") then if ($L.mode~="add" and journal.pm in $G.rc.global.environment and lng(denull($kne.update))&gt;0 and denull($kne.update)~={""}) then (update in $L.file=nullsub(denull($kne.update), {""})+denull(update in $L.file);update in $L.file=insert(update in $L.file, 1, 1, $L.stamp))</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">if (filename($L.file)="knownerrortask") then if ($L.mode~="add" and journal.pm in $G.rc.global.environment and lng(denull($ket.update))&gt;0 and denull($ket.update)~={""}) then (update in $L.file=nullsub(denull($ket.update), {""})+denull(update in $L.file);update in $L.file=insert(update in $L.file, 1, 1, $L.stamp))</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="array">
          <post.rad.expressions sctype="operator">if ($L.exit="bad.val" and filename($L.file)~="knownerrortask") then ($L.mode="update";$L.exit.when.done=false;update in $L.file=$L.update.save;open in $L.file=true;status in $L.file=$status.save;rcStatus in $L.file=$L.old.rcStatus) else if ($L.exit="bad.val" and filename($L.file)="knownerrortask") then ($L.mode="update";$L.exit.when.done=false;update in $L.file=$L.update.save;open in $L.file=true;status in $L.file=$status.save;keStatus in $L.file=$L.old.keStatus) else ($L.exit="normal")</post.rad.expressions>
          <post.rad.expressions sctype="string"/>
          <post.rad.expressions sctype="operator">cleanup($status.save);cleanup($L.old.rcStatus);cleanup($L.old.keStatus)</post.rad.expressions>
        </post.rad.expressions>
      </rad>
    </rad>
    <next.process sctype="array">
      <next.process sctype="string">rca.save</next.process>
      <next.process sctype="string">record.update.conflicts.auto</next.process>
    </next.process>
    <process.condition sctype="array">
      <process.condition sctype="boolean">false</process.condition>
      <process.condition sctype="operator">updatestatus($L.file)=$G.RC.MODIFIED and not  ($G.bg)</process.condition>
    </process.condition>
    <run.standard NullValue="1" type="boolean"/>
    <sysmodcount type="decimal">22</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">01/13/19 17:22:02</sysmodtime>
    <save.cursor.position NullValue="1" type="boolean"/>
    <run.in.window NullValue="1" type="boolean"/>
    <window.name NullValue="1" type="string"/>
    <javascript.pre NullValue="1" type="string"/>
    <javascript.post NullValue="1" type="string"/>
    <baseMethod NullValue="1" type="string"/>
  </record>
</recordset>
