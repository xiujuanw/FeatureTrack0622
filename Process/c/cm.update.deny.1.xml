<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Process">
  <record id="process=&quot;cm.update.deny.1&quot;" recordid="cm.update.deny.1">
    <process type="string">cm.update.deny.1</process>
    <pre.expressions sctype="array">
      <pre.expressions sctype="operator">$release.backout=false</pre.expressions>
      <pre.expressions sctype="operator">$release.close2=nullsub($release.close2, false)</pre.expressions>
      <pre.expressions sctype="operator">$L.imp.msg1=scmsg(1460, "fc")</pre.expressions>
      <pre.expressions sctype="operator">$L.imp.msg2=scmsg(1461, "fc")</pre.expressions>
      <pre.expressions sctype="operator">$L.acc.msg=scmsg(1462, "fc")</pre.expressions>
    </pre.expressions>
    <post.expressions sctype="array">
      <post.expressions sctype="operator">if ($L.exit="normal") then ($L.exit="closestate")</post.expressions>
      <post.expressions sctype="operator">if ($L.exit="bg") then ($L.exit="exit")</post.expressions>
      <post.expressions sctype="operator">if ($L.exit="exit") then ($L.exit.when.done=true;if (filename($L.file)="cm3r") then ($phasepntr=NULL);if (filename($L.file)="cm3t") then ($tphasepntr=NULL))</post.expressions>
      <post.expressions sctype="operator">if ($L.bg and $L.exit="exit") then ($L.exit="normal")</post.expressions>
      <post.expressions sctype="operator">if (not  ($L.bg)) then if ($L.exit="nosave") then ($L.exit="normal")</post.expressions>
      <post.expressions sctype="operator">cleanup($release.close2)</post.expressions>
    </post.expressions>
    <rad sctype="array">
      <rad sctype="structure">
        <application type="string">sla.confirm.outage</application>
        <names sctype="array">
          <names sctype="string">file</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.file</values>
        </values>
        <rad.condition type="operator">$L.last and enable in $G.sla.environment</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">$L.file.vars={$L.category, $L.phase, $L.fc, $L.fc.master}</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">if (index(current.phase in $L.file, phases in $L.category)=lng(denull(phases in $L.category))) then ($L.last=true) else ($L.last=false)</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">if (name in $L.category="Subscription" and current.phase in $L.file="Subscription Implementation") then ($L.implementation=true) else ($L.implementation=false)</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">if (name in $L.category="Subscription" and current.phase in $L.file="Subscription Acceptance") then ($L.implementation2=true) else ($L.implementation2=false)</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">$L.closeno=false;$L.implementation.failed=false;$L.acceptance.failed=false</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="string"/>
      </rad>
      <rad sctype="structure">
        <application type="string">apm.mb.ok</application>
        <names sctype="array">
          <names sctype="string">text</names>
          <names sctype="string">index</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.imp.msg1</values>
          <values sctype="string">3</values>
        </values>
        <rad.condition type="globalVar">$L.implementation.failed</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">if ($L.implementation and nullsub(implementationComplete in $L.file, false)=false) then ($L.implementation.failed=true;$L.closeno=true;$L.exit="nosave")</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="string"/>
      </rad>
      <rad sctype="structure">
        <application type="string">apm.mb.ok</application>
        <names sctype="array">
          <names sctype="string">text</names>
          <names sctype="string">index</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.imp.msg2</values>
          <values sctype="string">3</values>
        </values>
        <rad.condition type="operator">$L.implementation.failed and $L.closeno=false</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">if ($L.implementation and lng(denull(implementationComments in $L.file))=0) then ($L.implementation.failed=true;$L.exit="nosave")</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="array">
          <post.rad.expressions sctype="operator">if ($L.implementation and lng(denull(implementationComments in $L.file))=0) then ($L.closeno=true)</post.rad.expressions>
        </post.rad.expressions>
      </rad>
      <rad sctype="structure">
        <application type="string">apm.mb.ok</application>
        <names sctype="array">
          <names sctype="string">text</names>
          <names sctype="string">index</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.acc.msg</values>
          <values sctype="string">3</values>
        </values>
        <rad.condition type="globalVar">$L.acceptance.failed</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">if ($L.implementation2 and lng(denull(acceptanceComments in $L.file))=0) then ($L.acceptance.failed=true;$L.closeno=true;$L.exit="nosave")</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="string"/>
      </rad>
      <rad sctype="structure">
        <application type="string">cm.close</application>
        <names sctype="array">
          <names sctype="string">record</names>
          <names sctype="string">second.file</names>
          <names sctype="string">boolean1</names>
          <names sctype="string">prompt</names>
          <names sctype="string">file.variables</names>
          <names sctype="string">second.record</names>
          <names sctype="string">target.file</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.file</values>
          <values sctype="string">$L.object</values>
          <values sctype="string">$L.bg</values>
          <values sctype="string">$L.exit</values>
          <values sctype="string">$L.file.vars</values>
          <values sctype="string">$L.file.save</values>
          <values sctype="string">$L.parent</values>
        </values>
        <rad.condition type="operator">$L.closeno=false</rad.condition>
        <pre.rad.expressions sctype="string"/>
        <post.rad.expressions sctype="array">
          <post.rad.expressions sctype="operator">$L.exit=nullsub($L.exit, "whoknows")</post.rad.expressions>
          <post.rad.expressions sctype="operator">if ($L.exit="whoknows") then ($L.exit=NULL)</post.rad.expressions>
        </post.rad.expressions>
      </rad>
      <rad sctype="structure">
        <application type="string">cm.deny.dataModEvent</application>
        <names sctype="array">
          <names sctype="string">file</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.file</values>
        </values>
        <rad.condition type="boolean">true</rad.condition>
        <pre.rad.expressions sctype="string"/>
        <post.rad.expressions sctype="string"/>
      </rad>
      <rad sctype="structure">
        <application type="string">change.update.save</application>
        <names sctype="array">
          <names sctype="string">record</names>
          <names sctype="string">second.file</names>
          <names sctype="string">boolean1</names>
          <names sctype="string">second.record</names>
          <names sctype="string">file.variables</names>
          <names sctype="string">target.file</names>
          <names sctype="string">prompt</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.file</values>
          <values sctype="string">$L.object</values>
          <values sctype="string">$L.bg</values>
          <values sctype="string">$L.file.save</values>
          <values sctype="string">$L.file.vars</values>
          <values sctype="string">$L.parent</values>
          <values sctype="string">$L.exit</values>
        </values>
        <rad.condition type="operator">$L.closeno=true and $L.migrated.workflow=false and jscall("ProcessDesignerEnablement.isChangeEnabled")=true</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">$L.file.vars={$L.category, $L.phase, $L.fc, $L.fc.master}</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="string"/>
      </rad>
      <rad sctype="structure">
        <application type="string">cm.update.save</application>
        <names sctype="array">
          <names sctype="string">record</names>
          <names sctype="string">second.file</names>
          <names sctype="string">boolean1</names>
          <names sctype="string">second.record</names>
          <names sctype="string">file.variables</names>
          <names sctype="string">target.file</names>
          <names sctype="string">prompt</names>
          <names sctype="string">names</names>
          <names sctype="string">values</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.file</values>
          <values sctype="string">$L.object</values>
          <values sctype="string">$L.bg</values>
          <values sctype="string">$L.file.save</values>
          <values sctype="string">$L.file.vars</values>
          <values sctype="string">$L.parent</values>
          <values sctype="string">$L.exit</values>
          <values sctype="string">$L.pd.file.names</values>
          <values sctype="string">$L.pd.file.vars</values>
        </values>
        <rad.condition type="operator">$L.closeno=true and (jscall("ProcessDesignerEnablement.isChangeEnabled")=false or $L.migrated.workflow=true)</rad.condition>
        <pre.rad.expressions sctype="string"/>
        <post.rad.expressions sctype="string"/>
      </rad>
    </rad>
    <next.process NullValue="1" sctype="array">
      <next.process NullValue="1" type="string"/>
    </next.process>
    <process.condition NullValue="1" sctype="array">
      <process.condition NullValue="1" type="boolean"/>
    </process.condition>
    <run.standard NullValue="1" type="boolean"/>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">shiji.shu</sysmoduser>
    <sysmodtime type="dateTime">09/18/13 13:20:19</sysmodtime>
    <save.cursor.position NullValue="1" type="boolean"/>
    <run.in.window NullValue="1" type="boolean"/>
    <window.name NullValue="1" type="string"/>
    <javascript.pre type="string">if (vars['$G.pd.change.enabled'] &amp;&amp; vars['$L.migrated.workflow']===null)
{
	vars['$L.migrated.workflow']=lib.ProcessDesignerEnablement.isMigratedWorkflowUsed(system.functions.filename(vars['$L.file']),vars['$L.file']['category']);
}</javascript.pre>
    <javascript.post NullValue="1" type="string"/>
    <baseMethod NullValue="1" type="string"/>
  </record>
</recordset>
