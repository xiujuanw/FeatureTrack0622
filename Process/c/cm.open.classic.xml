<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Process">
  <record id="process=&quot;cm.open.classic&quot;" recordid="cm.open.classic">
    <process type="string">cm.open.classic</process>
    <pre.expressions sctype="array">
      <pre.expressions sctype="operator">if (not  (null(logical.name in $L.file)) and index(logical.name in $L.file, assets in $L.file)=0) then (assets in $L.file=insert(assets in $L.file, 1, 1, logical.name in $L.file))</pre.expressions>
      <pre.expressions sctype="operator">if (filename($L.file)="cm3r") then ($SMOO=sysinfo.get("environment")#"scguiwweb" and SMOO in $G.system.info and OOCM in $G.system.info=true)</pre.expressions>
      <pre.expressions sctype="operator">if (null(execute.mode in $L.file) and filename($L.file)="cm3r") then (execute.mode in $L.file="noauto")</pre.expressions>
    </pre.expressions>
    <post.expressions sctype="array">
      <post.expressions sctype="operator">if ($L.exit~="normal") then if (filename($L.file)="cm3r") then ($phasepntr=NULL)</post.expressions>
      <post.expressions sctype="operator">if ($L.exit~="normal") then if (filename($L.file)="cm3t") then ($tphasepntr=NULL)</post.expressions>
      <post.expressions sctype="operator">if ($L.exit="normal") then ($L.exit="new")</post.expressions>
      <post.expressions sctype="string"/>
      <post.expressions sctype="operator">$idol.cmopen.exit=$L.exit</post.expressions>
    </post.expressions>
    <rad sctype="array">
      <rad sctype="structure">
        <application type="string">Template.apply.default.template</application>
        <names sctype="array">
          <names sctype="string">name</names>
          <names sctype="string">file</names>
        </names>
        <values sctype="array">
          <values sctype="string">"cm3r"</values>
          <values sctype="string">$L.file</values>
        </values>
        <rad.condition type="boolean">false</rad.condition>
        <pre.rad.expressions sctype="string"/>
        <post.rad.expressions sctype="string"/>
      </rad>
      <rad sctype="structure">
        <application type="string">cm.open</application>
        <names sctype="array">
          <names sctype="string">record</names>
          <names sctype="string">second.file</names>
          <names sctype="string">boolean1</names>
          <names sctype="string">cond.input</names>
          <names sctype="string">second.record</names>
          <names sctype="string">prompt</names>
          <names sctype="string">target.file</names>
          <names sctype="string">query</names>
          <names sctype="string">string1</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.file</values>
          <values sctype="string">$L.object</values>
          <values sctype="string">$L.bg</values>
          <values sctype="string">val("false",4)</values>
          <values sctype="string">$L.file.save</values>
          <values sctype="string">$L.exit</values>
          <values sctype="string">$L.parent</values>
          <values sctype="string">$L.related.filename</values>
          <values sctype="string">$L.related.id</values>
        </values>
        <rad.condition type="boolean">true</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">if $G.pd.change.enabled then ($L.pd.file.names={"$L.category", "$L.wfExitRules", "$L.wfTransitionRules", "$L.wfT.Phase", "$L.fc", "$L.fc.master", "$L.workflow", "$L.phase", "$L.saved", "$L.parent", "$L.wfPhase", "$L.wfPhase.save", "$L.orig.format", "$L.wfRules", "$L.wfMode", "$L.wfType", "$L.to.phaseId"};if (not  (null($L.object))) then ($L.pd.file.names=denull(local.variables in $L.object)+$L.pd.file.names);$L.pd.file.vars={};$L.pd.file.vars=getvariables($L.pd.file.names))</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="array">
          <post.rad.expressions sctype="operator">if ($G.pd.change.enabled and $L.exit~="bad.val" and $L.exit~="badval" and $L.exit~="nosave") then ($L.void=setvariables($L.pd.file.names, $L.pd.file.vars))</post.rad.expressions>
        </post.rad.expressions>
      </rad>
      <rad sctype="structure">
        <application type="string">Template.apply.default.template</application>
        <names sctype="array">
          <names sctype="string">name</names>
          <names sctype="string">file</names>
        </names>
        <values sctype="array">
          <values sctype="string">filename($L.file)</values>
          <values sctype="string">$L.file</values>
        </values>
        <rad.condition type="operator">$L.exit="normal"</rad.condition>
        <pre.rad.expressions sctype="string"/>
        <post.rad.expressions sctype="string"/>
      </rad>
    </rad>
    <next.process NullValue="1" sctype="array">
      <next.process NullValue="1" type="string"/>
    </next.process>
    <process.condition NullValue="1" sctype="array">
      <process.condition NullValue="1" type="boolean"/>
    </process.condition>
    <run.standard type="boolean">false</run.standard>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">System.Admin</sysmoduser>
    <sysmodtime type="dateTime">12/10/15 19:27:17</sysmodtime>
    <save.cursor.position NullValue="1" type="boolean"/>
    <run.in.window NullValue="1" type="boolean"/>
    <window.name NullValue="1" type="string"/>
    <javascript.pre NullValue="1" type="string"/>
    <javascript.post NullValue="1" type="string"/>
    <baseMethod NullValue="1" type="string"/>
  </record>
</recordset>
