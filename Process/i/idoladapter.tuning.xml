<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Process">
  <record id="process=&quot;idoladapter.tuning&quot;" recordid="idoladapter.tuning">
    <process type="string">idoladapter.tuning</process>
    <pre.expressions NullValue="1" sctype="array">
      <pre.expressions NullValue="1" type="expression"/>
    </pre.expressions>
    <post.expressions sctype="array">
      <post.expressions sctype="operator">$L.exit="normal"</post.expressions>
    </post.expressions>
    <rad sctype="array">
      <rad sctype="structure">
        <application type="string">apm.mb.ok</application>
        <names sctype="array">
          <names sctype="string">text</names>
          <names sctype="string">index</names>
        </names>
        <values sctype="array">
          <values sctype="string">$error.msg</values>
          <values sctype="string">3</values>
        </values>
        <rad.condition type="operator">not  (null($error.msg))</rad.condition>
        <pre.rad.expressions sctype="array"/>
        <post.rad.expressions sctype="array"/>
      </rad>
      <rad sctype="structure">
        <application type="string">apm.mb.yes.no.1</application>
        <names sctype="array">
          <names sctype="string">text</names>
          <names sctype="string">index</names>
          <names sctype="string">prompt</names>
        </names>
        <values sctype="array">
          <values sctype="string">$L.msg</values>
          <values sctype="string">2</values>
          <values sctype="string">$proceed</values>
        </values>
        <rad.condition type="globalVar">$L.continue</rad.condition>
        <pre.rad.expressions sctype="array">
          <pre.rad.expressions sctype="operator">$proceed="no"</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">$L.exit="exit"</pre.rad.expressions>
          <pre.rad.expressions sctype="operator">$L.msg=scmsg("28", "idol")</pre.rad.expressions>
        </pre.rad.expressions>
        <post.rad.expressions sctype="string"/>
      </rad>
    </rad>
    <next.process NullValue="1" sctype="array">
      <next.process NullValue="1" type="string"/>
    </next.process>
    <process.condition NullValue="1" sctype="array">
      <process.condition NullValue="1" type="boolean"/>
    </process.condition>
    <run.standard NullValue="1" type="boolean"/>
    <sysmodcount type="decimal">8</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">08/04/14 20:57:04</sysmodtime>
    <save.cursor.position NullValue="1" type="boolean"/>
    <run.in.window NullValue="1" type="boolean"/>
    <window.name NullValue="1" type="string"/>
    <javascript.pre type="string">vars.$L_continue=true;

//print("vars.$L_javascript == " + vars.$L_javascript);

if (!vars['$error.msg']) {
	if (lib.IDOL_SMIS.hasAvailableTask(vars['$L.file']['adapter.id'], 'tuning')){
		vars['$error.msg'] = system.functions.scmsg('26', 'idol', []);
		vars.$L_continue = false;
		return;
	}
	/*if (vars['$G.multi']) {
		var companies = lib.IDOL_Utilities.getCompaniesForTraining();
		if (companies.length === 0) {
			vars['$error.msg'] = system.functions.scmsg('7', 'idol', [vars['$L.file']['category.group.name']]);
			vars.$L_continue = false;
			return;
		} else {
			vars['$lo.securityGroups'] = '';
			vars['$securityGroup'] = companies;
			for (var i = 0; i &lt; companies.length; i++) {
				vars['$lo.securityGroups'] += companies[i];
				if (i &lt; companies.length - 1) {
					vars['$lo.securityGroups'] += ',';
				}
			}
		}

	}*/
	/*ar = lib.acicategory.autoCategorizationTaskIsRunning(vars.$L_file.adapter_id);
//print("autoCategorizationTaskIsRunning == " + ar );
	if (ar)
	{
		vars['$error.msg'] = system.functions.scmsg('10', 'idol');
		vars.$L_continue = false;
		vars.$L_exit="";
	}*/
} else {
	vars.$L_continue = false;
}</javascript.pre>
    <javascript.post type="string">if (vars.$proceed == "yes") {
	var rc = vars.$L_file.doAction('save');
	if (rc) {
		//if (vars.$securityGroup == null) {
		var parameters = [{value: vars.$L_file.adapter_id, type: "Number"}];
		//} else {
		//var parameters = [{value: vars.$L_file.adapter_id, type: "Number"}, {value: vars.$lo_securityGroups, type: "String"}];
		//}
		var taskId = lib.IDOL_SMIS.addIDOLTask("tuning", vars.$L_file.adapter_id, 'idoladapter', parameters);
		if (taskId) system.functions.msg(system.functions.scmsg('29','idol'), 1);
	}
}
lib.IDOL_Utilities.cleanUpTrainTestInList();</javascript.post>
    <baseMethod NullValue="1" type="string"/>
  </record>
</recordset>
