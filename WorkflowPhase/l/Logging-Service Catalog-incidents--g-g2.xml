<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="WorkflowPhase">
  <record id="phaseName=&quot;Logging&quot; and workflowName=&quot;Service Catalog&quot; and tableName=&quot;incidents&quot;" recordid="Logging - Service Catalog - incidents">
    <workflowName type="string">Service Catalog</workflowName>
    <tableName type="string">incidents</tableName>
    <phaseName type="string">Logging</phaseName>
    <name type="string">Logging</name>
    <displayForm type="string">sd.interaction.svc.logging</displayForm>
    <onCreateRules sctype="array">
      <onCreateRules sctype="string">sd.svc.logging.mandatory.ess</onCreateRules>
      <onCreateRules sctype="string">sd.svc.journalUpdate</onCreateRules>
      <onCreateRules sctype="string">sd.clone.addition.processing</onCreateRules>
    </onCreateRules>
    <onUpdateRules NullValue="1" sctype="array">
      <onUpdateRules NullValue="1" type="string"/>
    </onUpdateRules>
    <onDeleteRules NullValue="1" sctype="array">
      <onDeleteRules NullValue="1" type="string"/>
    </onDeleteRules>
    <manualTransition sctype="array">
      <manualTransition sctype="structure">
        <mtToPhase type="string">Closure</mtToPhase>
        <mtOptionName type="string">closeme</mtOptionName>
        <mtOptionLoc type="decimal">1</mtOptionLoc>
        <mtCondition type="operator">nullsub($G.ess, false)=false and category in $L.file~="service catalog" and $L.tableAccess.delete=true</mtCondition>
        <mtOption type="decimal">62</mtOption>
        <mtRules sctype="array">
          <mtRules sctype="string">sd.svc.logging.mandatory</mtRules>
          <mtRules sctype="string">sd.svc.initial</mtRules>
          <mtRules sctype="string">sd.svc.first.call.close</mtRules>
          <mtRules sctype="string">sd.svc.close.wizard</mtRules>
          <mtRules sctype="string">sd.svc.close</mtRules>
          <mtRules sctype="string">sd.svc.notification.closure</mtRules>
          <mtRules sctype="string">sd.svc.journalUpdate</mtRules>
        </mtRules>
        <mtCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub($G.ess, false)=false and category in $L.file~=&amp;quot;service catalog&amp;quot; and $L.tableAccess.delete = true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</mtCondXML>
        <mtCondDesc type="string">( Expression: nullsub($G.ess, false)=false and category in $L.file~="service catalog" and $L.tableAccess.delete = true)</mtCondDesc>
        <mtId type="decimal">2</mtId>
        <mtxCoordinate type="decimal">490</mtxCoordinate>
        <mtyCoordinate type="decimal">20</mtyCoordinate>
        <mtOrientation NullValue="1" type="decimal"/>
        <mtRunSaveBefore NullValue="1" type="boolean"/>
        <mtDescription NullValue="1" type="string"/>
      </manualTransition>
    </manualTransition>
    <autoTransition NullValue="1" sctype="array">
      <autoTransition sctype="structure">
        <atToPhase NullValue="1" type="string"/>
        <atCondition NullValue="1" type="boolean"/>
        <atRules NullValue="1" sctype="array">
          <atRules NullValue="1" type="string"/>
        </atRules>
        <atCondXML NullValue="1" type="string"/>
        <atCondDesc NullValue="1" type="string"/>
        <atxCoordinate NullValue="1" type="decimal"/>
        <atyCoordinate NullValue="1" type="decimal"/>
        <atOrientation NullValue="1" type="decimal"/>
        <atDescription NullValue="1" type="string"/>
      </autoTransition>
    </autoTransition>
    <description type="string">Logging</description>
    <defaultTransition type="string">Categorization</defaultTransition>
    <defaultTransitionRules sctype="array">
      <defaultTransitionRules sctype="string">sd.svc.set.priority</defaultTransitionRules>
      <defaultTransitionRules sctype="string">sd.svc.categorization.status</defaultTransitionRules>
      <defaultTransitionRules sctype="string">sd.set.assignment</defaultTransitionRules>
    </defaultTransitionRules>
    <detailedDescription NullValue="1" type="string"/>
    <active type="boolean">true</active>
    <owner NullValue="1" type="string"/>
    <approvals NullValue="1" sctype="array">
      <approvals NullValue="1" type="string"/>
    </approvals>
    <action sctype="array">
      <action sctype="structure">
        <actionName type="string">Change Category</actionName>
        <actionId type="string">sd.action.change.category</actionId>
        <actionCondition type="operator">jscall("sdUtil.changeCatBlocked")=false</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"jscall(&amp;quot;sdUtil.changeCatBlocked&amp;quot;)=false"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">283</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: jscall("sdUtil.changeCatBlocked")=false)</actionCondDesc>
        <actionMsgId type="decimal">6</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Service Desk Interactions List</actionName>
        <actionId type="string">sd.svc.open.interactions.list</actionId>
        <actionCondition type="operator">evaluate($L.tableAccess.view) and nullsub($G.ess, false)=false</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"evaluate($L.tableAccess.view) and nullsub($G.ess, false)=false"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">282</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: evaluate($L.tableAccess.view) and nullsub($G.ess, false)=false)</actionCondDesc>
        <actionMsgId type="decimal">5</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Get SLA/Entitlement</actionName>
        <actionId type="string">sd.svc.get.sla</actionId>
        <actionCondition type="operator">enable in $G.sla.environment and nullsub($G.ess, false)=false</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"enable in $G.sla.environment and nullsub($G.ess, false)=false"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">281</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: enable in $G.sla.environment and nullsub($G.ess, false)=false)</actionCondDesc>
        <actionMsgId type="decimal">4</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Notify</actionName>
        <actionId type="string">sd.svc.notify</actionId>
        <actionCondition type="operator">jscall("security.getToken", "Service Desk", "view")=true</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="security"&gt;&lt;Area caption="Service Desk"&gt;Service Desk&lt;/Area&gt;&lt;Right caption="View"&gt;view&lt;/Right&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="boolean"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">286</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( the "View" value in the "Service Desk" Security Area = true)</actionCondDesc>
        <actionMsgId type="decimal">1</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Escalate</actionName>
        <actionId type="string">sd.svc.escalate</actionId>
        <actionCondition type="operator">evaluate($L.tableAccess.view) and nullsub($G.ess, false)=false and parse(jscall("settings.getSettingValue", jscall("security.getArea", filename($L.file)), "allow.escalate"), 4) and escalate in $L.category=true</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"evaluate($L.tableAccess.view) and nullsub($G.ess, false)=false and parse(jscall(&amp;quot;settings.getSettingValue&amp;quot;, jscall(&amp;quot;security.getArea&amp;quot;, filename($L.file)), &amp;quot;allow.escalate&amp;quot;), 4) and (escalate in $L.category=true)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">1</actionLoc>
        <actionOption type="decimal">61</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: evaluate($L.tableAccess.view) and nullsub($G.ess, false)=false and parse(jscall("settings.getSettingValue", jscall("security.getArea", filename($L.file)), "allow.escalate"), 4) and (escalate in $L.category=true))</actionCondDesc>
        <actionMsgId type="decimal">2</actionMsgId>
      </action>
    </action>
    <afterUpdateRules NullValue="1" sctype="array">
      <afterUpdateRules NullValue="1" type="string"/>
    </afterUpdateRules>
    <initRules sctype="array">
      <initRules sctype="string">sd.svc.initial</initRules>
      <initRules sctype="string">sd.svc.initial.status</initRules>
      <initRules sctype="string">sd.svc.initial.status.list</initRules>
      <initRules sctype="string">sd.svc.general.initial</initRules>
      <initRules sctype="string">sd.svc.logging.initial</initRules>
      <initRules sctype="string">sd.svc.initial.ess</initRules>
    </initRules>
    <onDisplayRules NullValue="1" sctype="array">
      <onDisplayRules NullValue="1" type="string"/>
    </onDisplayRules>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">03/20/20 00:55:30</sysmodtime>
    <sysmodcount type="decimal">31</sysmodcount>
    <altForm sctype="array">
      <altForm sctype="structure">
        <altFormId type="string">ext-gen256</altFormId>
        <altFormName type="string">ess.SD.update.edit</altFormName>
        <altFormDesc type="string">ESS Service Desk Update Form</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and $view.ess.mode.two="true" and same(jscall("security.getToken", "Service Desk", "ess.edit.format"), NULL)</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$view.ess.mode.two"&gt;$view.ess.mode.two&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="security"&gt;&lt;Area caption="Service Desk"&gt;Service Desk&lt;/Area&gt;&lt;Right caption="ess.edit.format"&gt;ess.edit.format&lt;/Right&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND $view.ess.mode.two = "true" AND the "ess.edit.format" value in the "Service Desk" Security Area = NULL)</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
      <altForm sctype="structure">
        <altFormId type="string">ext-gen309</altFormId>
        <altFormName type="string">jscall("security.getToken","Service Desk","ess.edit.format")</altFormName>
        <altFormDesc type="string">Service Desk " Edit Form" configured in Service Desk Security Settings</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and $view.ess.mode.two="true" and not  (same(jscall("security.getToken", "Service Desk", "ess.edit.format"), NULL))</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$view.ess.mode.two"&gt;$view.ess.mode.two&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="security"&gt;&lt;Area caption="Service Desk"&gt;Service Desk&lt;/Area&gt;&lt;Right caption="ess.edit.format"&gt;ess.edit.format&lt;/Right&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND $view.ess.mode.two = "true" AND the "ess.edit.format" value in the "Service Desk" Security Area != NULL)</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
      <altForm sctype="structure">
        <altFormId type="string">ext-gen257</altFormId>
        <altFormName type="string">ess.SD.Approval</altFormName>
        <altFormDesc type="string">ESS Service Desk Approval Form</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and (same($G.ess.mode.one, NULL) or $G.ess.mode.one="true") and $G.ess.approval="true" and $essview.approvals="true"</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;collection logical="AND" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess.mode.one"&gt;$G.ess.mode.one&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="OR" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess.mode.one"&gt;$G.ess.mode.one&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess.approval"&gt;$G.ess.approval&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$essview.approvals"&gt;$essview.approvals&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND ( $G.ess.mode.one = NULL OR $G.ess.mode.one = "true") AND $G.ess.approval = "true" AND $essview.approvals = "true")</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
      <altForm sctype="structure">
        <altFormId type="string">ext-gen256</altFormId>
        <altFormName type="string">ess.svccat.items</altFormName>
        <altFormDesc type="string">ESS Service Catalog Items Form</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and (same($G.ess.mode.one, NULL) or $G.ess.mode.one="true") and $G.svccat.related="true" and $view.catitems="true"</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;collection logical="AND" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess.mode.one"&gt;$G.ess.mode.one&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="OR" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess.mode.one"&gt;$G.ess.mode.one&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.svccat.related"&gt;$G.svccat.related&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$view.catitems"&gt;$view.catitems&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND ( $G.ess.mode.one = NULL OR $G.ess.mode.one = "true") AND $G.svccat.related = "true" AND $view.catitems = "true")</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
      <altForm sctype="structure">
        <altFormId type="string">ext-gen258</altFormId>
        <altFormName type="string">ess.related</altFormName>
        <altFormDesc type="string">ESS Related Records Form</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and (same($G.ess.mode.one, NULL) or $G.ess.mode.one="true") and $view.ess.related="true"</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;collection logical="AND" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess.mode.one"&gt;$G.ess.mode.one&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="OR" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess.mode.one"&gt;$G.ess.mode.one&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$view.ess.related"&gt;$view.ess.related&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND ( $G.ess.mode.one = NULL OR $G.ess.mode.one = "true") AND $view.ess.related = "true")</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
      <altForm sctype="structure">
        <altFormId type="string">ext-gen290</altFormId>
        <altFormName type="string">ess.SD.open.idol</altFormName>
        <altFormDesc type="string">ESS IDOL Form</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and $idol.format="true"</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$idol.format"&gt;$idol.format&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND $idol.format = "true")</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
      <altForm sctype="structure">
        <altFormId type="string">ext-gen257</altFormId>
        <altFormName type="string">ess.SD.open</altFormName>
        <altFormDesc type="string">ESS Service Desk Open Form</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and same(jscall("security.getToken", "Service Desk", "ess.initial.format"), NULL)</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="security"&gt;&lt;Area caption="Service Desk"&gt;Service Desk&lt;/Area&gt;&lt;Right caption="ess.initial.format"&gt;ess.initial.format&lt;/Right&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND the "ess.initial.format" value in the "Service Desk" Security Area = NULL)</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
      <altForm sctype="structure">
        <altFormId type="string">ext-gen310</altFormId>
        <altFormName type="string">jscall("security.getToken","Service Desk","ess.initial.format")</altFormName>
        <altFormDesc type="string">Service Desk " Initial Form" configured in Service Desk Security Settings</altFormDesc>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition type="operator">$G.ess="true" and not  (same(jscall("security.getToken", "Service Desk", "ess.initial.format"), NULL))</altFormCondition>
        <altFormCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="security"&gt;&lt;Area caption="Service Desk"&gt;Service Desk&lt;/Area&gt;&lt;Right caption="ess.initial.format"&gt;ess.initial.format&lt;/Right&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;NULL&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</altFormCondXML>
        <altFormCondDesc type="string">( $G.ess = "true" AND the "ess.initial.format" value in the "Service Desk" Security Area != NULL)</altFormCondDesc>
        <altFormType type="string">disp</altFormType>
      </altForm>
    </altForm>
    <alerts NullValue="1" sctype="array">
      <alerts NullValue="1" type="string"/>
    </alerts>
    <approvalsRecalc NullValue="1" type="boolean"/>
    <approvalsReset NullValue="1" type="boolean"/>
    <alertsRecalc NullValue="1" type="boolean"/>
    <alertsReset NullValue="1" type="boolean"/>
    <approvalsRecalcXML NullValue="1" type="string"/>
    <approvalsResetXML NullValue="1" type="string"/>
    <alertsRecalcXML NullValue="1" type="string"/>
    <alertsResetXML NullValue="1" type="string"/>
    <updateCond type="operator">$L.mode="add" and $L.tableAccess.new="true" or $L.mode~="add" and $L.tableAccess.update="true" and not  (same(approval.status in $L.file, "denied"))</updateCond>
    <updateCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"($L.mode=&amp;quot;add&amp;quot; and $L.tableAccess.new=&amp;quot;true&amp;quot;)or ($L.mode~=&amp;quot;add&amp;quot; and $L.tableAccess.update=&amp;quot;true&amp;quot; and not same(approval.status in $L.file, &amp;quot;denied&amp;quot;))"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</updateCondXML>
    <updateCondDesc type="string">( Expression: ($L.mode="add" and $L.tableAccess.new="true")or ($L.mode~="add" and $L.tableAccess.update="true" and not same(approval.status in $L.file, "denied")))</updateCondDesc>
    <approvalsRecalcDesc NullValue="1" type="string"/>
    <approvalsResetDesc NullValue="1" type="string"/>
    <alertsRecalcDesc NullValue="1" type="string"/>
    <alertsResetDesc NullValue="1" type="string"/>
    <length type="decimal">50</length>
    <width type="decimal">100</width>
    <xCoordinate type="decimal">10</xCoordinate>
    <yCoordinate type="decimal">90</yCoordinate>
    <dtxCoordinate type="decimal">0</dtxCoordinate>
    <dtyCoordinate type="decimal">0</dtyCoordinate>
    <dtOrientation NullValue="1" type="decimal"/>
    <phaseOrder type="decimal">1</phaseOrder>
    <afterEnterRules NullValue="1" sctype="array">
      <afterEnterRules NullValue="1" type="string"/>
    </afterEnterRules>
  </record>
</recordset>
