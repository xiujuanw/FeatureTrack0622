<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="WorkflowPhase">
  <record id="phaseName=&quot;Discovery Assessment&quot; and workflowName=&quot;Unplanned Change&quot; and tableName=&quot;cm3r&quot;" recordid="Discovery Assessment - Unplanned Change - cm3r">
    <workflowName type="string">Unplanned Change</workflowName>
    <tableName type="string">cm3r</tableName>
    <phaseName type="string">Discovery Assessment</phaseName>
    <name type="string">Discovery Assessment</name>
    <displayForm type="string">chm.discover.assess</displayForm>
    <onCreateRules sctype="array">
      <onCreateRules sctype="string">chm.mandatory.unplanned</onCreateRules>
    </onCreateRules>
    <onUpdateRules sctype="array">
      <onUpdateRules sctype="string">chm.mandatory.unplanned</onUpdateRules>
    </onUpdateRules>
    <onDeleteRules NullValue="1" sctype="array">
      <onDeleteRules NullValue="1" type="string"/>
    </onDeleteRules>
    <manualTransition sctype="array">
      <manualTransition sctype="structure">
        <mtToPhase type="string">Discovery Back Out</mtToPhase>
        <mtOptionName type="string">Backout</mtOptionName>
        <mtOptionLoc type="decimal">1</mtOptionLoc>
        <mtCondition type="operator">approval.status in $L.file="denied" and (index("ChMAdmin", $lo.ucapex)&gt;0 or index("SysAdmin", $lo.ucapex)&gt;0 or index("change owner", $G.role)&gt;0)</mtCondition>
        <mtOption type="decimal">60</mtOption>
        <mtRules sctype="array">
          <mtRules sctype="string">chm.mandatory.unplanned</mtRules>
        </mtRules>
        <mtCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"approval.status in $L.file="denied" and (index("ChMAdmin", $lo.ucapex)&gt;0 or index("SysAdmin", $lo.ucapex)&gt;0 or index("change owner",$G.role)&gt;0)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</mtCondXML>
        <mtCondDesc type="string">( Expression: approval.status in $L.file="denied" and (index("ChMAdmin", $lo.ucapex)&gt;0 or index("SysAdmin", $lo.ucapex)&gt;0 or index("change owner",$G.role)&gt;0))</mtCondDesc>
        <mtId type="decimal">1</mtId>
        <mtxCoordinate type="decimal">140</mtxCoordinate>
        <mtyCoordinate type="decimal">90</mtyCoordinate>
        <mtOrientation NullValue="1" type="decimal"/>
        <mtRunSaveBefore type="boolean">false</mtRunSaveBefore>
        <mtDescription NullValue="1" type="string"/>
      </manualTransition>
      <manualTransition sctype="structure">
        <mtToPhase type="string">Closure</mtToPhase>
        <mtOptionName type="string">Close</mtOptionName>
        <mtOptionLoc type="decimal">1</mtOptionLoc>
        <mtCondition type="operator">not  (same(approval.status in $L.file, "pending")) and not  (same(approval.status in $L.file, "denied")) and $L.tableAccess.delete="true"</mtCondition>
        <mtOption type="decimal">61</mtOption>
        <mtRules sctype="array">
          <mtRules sctype="string">chm.mandatory.unplanned</mtRules>
        </mtRules>
        <mtCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Approval Status"&gt;approval.status&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType=""&gt;pending&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Approval Status"&gt;approval.status&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType=""&gt;denied&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.delete"&gt;$L.tableAccess.delete&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType=""&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</mtCondXML>
        <mtCondDesc type="string">( approval.status in CurrentRecord != "pending" AND approval.status in CurrentRecord != "denied" AND $L.tableAccess.delete = "true")</mtCondDesc>
        <mtId type="decimal">3</mtId>
        <mtxCoordinate type="decimal">70</mtxCoordinate>
        <mtyCoordinate type="decimal">200</mtyCoordinate>
        <mtOrientation NullValue="1" type="decimal"/>
        <mtRunSaveBefore NullValue="1" type="boolean"/>
        <mtDescription NullValue="1" type="string"/>
      </manualTransition>
    </manualTransition>
    <autoTransition NullValue="1" sctype="array">
      <autoTransition sctype="structure">
        <atToPhase NullValue="1" type="string"/>
        <atCondition NullValue="1" type="boolean"/>
        <atRules NullValue="1" sctype="array">
          <atRules NullValue="1" type="string"/>
        </atRules>
        <atCondXML NullValue="1" type="string"/>
        <atCondDesc NullValue="1" type="string"/>
        <atxCoordinate NullValue="1" type="decimal"/>
        <atyCoordinate NullValue="1" type="decimal"/>
        <atOrientation NullValue="1" type="decimal"/>
        <atDescription NullValue="1" type="string"/>
      </autoTransition>
    </autoTransition>
    <description type="string">Discovery Assessment</description>
    <defaultTransition NullValue="1" type="string"/>
    <defaultTransitionRules NullValue="1" sctype="array">
      <defaultTransitionRules NullValue="1" type="string"/>
    </defaultTransitionRules>
    <detailedDescription NullValue="1" type="string"/>
    <active type="boolean">true</active>
    <owner NullValue="1" type="string"/>
    <approvals sctype="array">
      <approvals sctype="string">Assessment</approvals>
    </approvals>
    <action NullValue="1" sctype="array">
      <action sctype="structure">
        <actionName NullValue="1" type="string"/>
        <actionId NullValue="1" type="string"/>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc NullValue="1" type="decimal"/>
        <actionOption NullValue="1" type="decimal"/>
        <actionLock NullValue="1" type="boolean"/>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId NullValue="1" type="decimal"/>
      </action>
    </action>
    <afterUpdateRules sctype="array">
      <afterUpdateRules sctype="string">chm.deny.dataModEvent</afterUpdateRules>
    </afterUpdateRules>
    <initRules NullValue="1" sctype="array">
      <initRules NullValue="1" type="string"/>
    </initRules>
    <onDisplayRules NullValue="1" sctype="array">
      <onDisplayRules NullValue="1" type="string"/>
    </onDisplayRules>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">09/25/14 14:21:20</sysmodtime>
    <sysmodcount type="decimal">4</sysmodcount>
    <altForm NullValue="1" sctype="array">
      <altForm sctype="structure">
        <altFormId NullValue="1" type="decimal"/>
        <altFormName NullValue="1" type="string"/>
        <altFormDesc NullValue="1" type="string"/>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition NullValue="1" type="boolean"/>
        <altFormCondXML NullValue="1" type="string"/>
        <altFormCondDesc NullValue="1" type="string"/>
        <altFormType NullValue="1" type="string"/>
      </altForm>
    </altForm>
    <alerts sctype="array">
      <alerts sctype="string">not assigned</alerts>
      <alerts sctype="string">notice</alerts>
      <alerts sctype="string">pending2</alerts>
      <alerts sctype="string">pending3</alerts>
    </alerts>
    <approvalsRecalc type="boolean">true</approvalsRecalc>
    <approvalsReset type="boolean">false</approvalsReset>
    <alertsRecalc type="boolean">true</alertsRecalc>
    <alertsReset type="boolean">false</alertsReset>
    <approvalsRecalcXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</approvalsRecalcXML>
    <approvalsResetXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"false"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</approvalsResetXML>
    <alertsRecalcXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</alertsRecalcXML>
    <alertsResetXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"false"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</alertsResetXML>
    <updateCond type="operator">$L.tableAccess.new="true" and $L.mode="add" or $L.tableAccess.update="true" and not  (same($L.mode, "add"))</updateCond>
    <updateCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.new"&gt;$L.tableAccess.new&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.mode"&gt;$L.mode&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;add&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;collection logical="OR" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.update"&gt;$L.tableAccess.update&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.mode"&gt;$L.mode&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;add&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</updateCondXML>
    <updateCondDesc type="string">(( $L.tableAccess.new = "true" AND $L.mode = "add") OR ( $L.tableAccess.update = "true" AND $L.mode != "add"))</updateCondDesc>
    <approvalsRecalcDesc type="string">( Expression: true)</approvalsRecalcDesc>
    <approvalsResetDesc type="string">( Expression: false)</approvalsResetDesc>
    <alertsRecalcDesc type="string">( Expression: true)</alertsRecalcDesc>
    <alertsResetDesc type="string">( Expression: false)</alertsResetDesc>
    <length type="decimal">60</length>
    <width type="decimal">120</width>
    <xCoordinate type="decimal">10</xCoordinate>
    <yCoordinate type="decimal">60</yCoordinate>
    <dtxCoordinate NullValue="1" type="decimal"/>
    <dtyCoordinate NullValue="1" type="decimal"/>
    <dtOrientation NullValue="1" type="decimal"/>
    <phaseOrder type="decimal">1</phaseOrder>
    <afterEnterRules NullValue="1" sctype="array">
      <afterEnterRules NullValue="1" type="string"/>
    </afterEnterRules>
  </record>
</recordset>
