<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="WorkflowPhase">
  <record id="phaseName=&quot;Active&quot; and workflowName=&quot;Generic Task&quot; and tableName=&quot;cm3t&quot;" recordid="Active - Generic Task - cm3t">
    <workflowName type="string">Generic Task</workflowName>
    <tableName type="string">cm3t</tableName>
    <phaseName type="string">Active</phaseName>
    <name type="string">Active</name>
    <displayForm type="string">chm.task</displayForm>
    <onCreateRules sctype="array">
      <onCreateRules sctype="string">chm.task.initialize.status</onCreateRules>
      <onCreateRules sctype="string">chm.task.notification.pending.close.risk</onCreateRules>
    </onCreateRules>
    <onUpdateRules sctype="array">
      <onUpdateRules sctype="string">chm.task.mandatory</onUpdateRules>
      <onUpdateRules sctype="string">chm.task.validation</onUpdateRules>
    </onUpdateRules>
    <onDeleteRules NullValue="1" sctype="array">
      <onDeleteRules NullValue="1" type="string"/>
    </onDeleteRules>
    <manualTransition sctype="array">
      <manualTransition sctype="structure">
        <mtToPhase type="string">Cancelled</mtToPhase>
        <mtOptionName type="string">Cancel Task</mtOptionName>
        <mtOptionLoc type="decimal">2</mtOptionLoc>
        <mtCondition type="operator">$L.tableAccess.update="true"</mtCondition>
        <mtOption type="decimal">280</mtOption>
        <mtRules sctype="array">
          <mtRules sctype="string">chm.task.closure.wizard</mtRules>
          <mtRules sctype="string">chm.task.initialize.status.manualcancel</mtRules>
        </mtRules>
        <mtCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.update"&gt;$L.tableAccess.update&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</mtCondXML>
        <mtCondDesc type="string">( $L.tableAccess.update = "true")</mtCondDesc>
        <mtId type="decimal">2</mtId>
        <mtxCoordinate type="decimal">0</mtxCoordinate>
        <mtyCoordinate type="decimal">0</mtyCoordinate>
        <mtOrientation NullValue="1" type="decimal"/>
        <mtRunSaveBefore type="boolean">false</mtRunSaveBefore>
        <mtDescription NullValue="1" type="string"/>
      </manualTransition>
      <manualTransition sctype="structure">
        <mtToPhase type="string">Closed</mtToPhase>
        <mtOptionName type="string">Close</mtOptionName>
        <mtOptionLoc type="decimal">1</mtOptionLoc>
        <mtCondition type="operator">$L.tableAccess.delete="true" and risk.assessment in $L.file&lt;="2"</mtCondition>
        <mtOption type="decimal">61</mtOption>
        <mtRules sctype="array">
          <mtRules sctype="string">chm.task.close.dependent</mtRules>
          <mtRules sctype="string">chm.task.check.avai.status</mtRules>
          <mtRules sctype="string">chm.task.closure.wizard</mtRules>
        </mtRules>
        <mtCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.delete"&gt;$L.tableAccess.delete&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Risk Assessment"&gt;risk.assessment&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;let&lt;/Comparison&gt;&lt;Value dataType="string"&gt;2&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</mtCondXML>
        <mtCondDesc type="string">( $L.tableAccess.delete = "true" AND risk.assessment in CurrentRecord &lt;= "2")</mtCondDesc>
        <mtId type="decimal">4</mtId>
        <mtxCoordinate type="decimal">230</mtxCoordinate>
        <mtyCoordinate type="decimal">90</mtyCoordinate>
        <mtOrientation NullValue="1" type="decimal"/>
        <mtRunSaveBefore type="boolean">true</mtRunSaveBefore>
        <mtDescription NullValue="1" type="string"/>
      </manualTransition>
      <manualTransition sctype="structure">
        <mtToPhase type="string">Review</mtToPhase>
        <mtOptionName type="string">Review</mtOptionName>
        <mtOptionLoc type="decimal">1</mtOptionLoc>
        <mtCondition type="operator">$L.tableAccess.update="true" and risk.assessment in $L.file&gt;"2"</mtCondition>
        <mtOption type="decimal">60</mtOption>
        <mtRules sctype="array">
          <mtRules sctype="string">chm.task.notification.review</mtRules>
          <mtRules sctype="string">chm.task.mandatory</mtRules>
          <mtRules sctype="string">chm.task.validation</mtRules>
          <mtRules sctype="string">chm.task.check.avai.status</mtRules>
        </mtRules>
        <mtCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.update"&gt;$L.tableAccess.update&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="field"&gt;&lt;TableName&gt;CurrentRecord&lt;/TableName&gt;&lt;FieldName caption="Risk Assessment"&gt;risk.assessment&lt;/FieldName&gt;&lt;/operand&gt;&lt;Comparison&gt;gt&lt;/Comparison&gt;&lt;Value dataType="string"&gt;2&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</mtCondXML>
        <mtCondDesc type="string">( $L.tableAccess.update = "true" AND risk.assessment in CurrentRecord &gt; "2")</mtCondDesc>
        <mtId type="decimal">5</mtId>
        <mtxCoordinate type="decimal">0</mtxCoordinate>
        <mtyCoordinate type="decimal">0</mtyCoordinate>
        <mtOrientation NullValue="1" type="decimal"/>
        <mtRunSaveBefore NullValue="1" type="boolean"/>
        <mtDescription NullValue="1" type="string"/>
      </manualTransition>
    </manualTransition>
    <autoTransition sctype="array">
      <autoTransition sctype="structure">
        <atToPhase type="string">Cancelled</atToPhase>
        <atCondition type="operator">not  (null(completion.code in $L.file)) and not  (null(closing.comments in $L.file)) and status in $L.file=30</atCondition>
        <atRules sctype="array"/>
        <atCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="false"&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"not null(completion.code in $L.file) and not null(closing.comments in $L.file) and status in $L.file =30"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</atCondXML>
        <atCondDesc type="string">( Expression: not null(completion.code in $L.file) and not null(closing.comments in $L.file) and status in $L.file =30)</atCondDesc>
        <atxCoordinate type="decimal">180</atxCoordinate>
        <atyCoordinate type="decimal">180</atyCoordinate>
        <atOrientation NullValue="1" type="decimal"/>
        <atDescription NullValue="1" type="string"/>
      </autoTransition>
    </autoTransition>
    <description type="string">Active</description>
    <defaultTransition NullValue="1" type="string"/>
    <defaultTransitionRules NullValue="1" sctype="array">
      <defaultTransitionRules NullValue="1" type="string"/>
    </defaultTransitionRules>
    <detailedDescription NullValue="1" type="string"/>
    <active type="boolean">true</active>
    <owner NullValue="1" type="string"/>
    <approvals NullValue="1" sctype="array">
      <approvals NullValue="1" type="string"/>
    </approvals>
    <action sctype="array">
      <action sctype="structure">
        <actionName type="string">Risk Assessment Refresh</actionName>
        <actionId type="string">chm.task.risk.refresh</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3000</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">Always</actionCondDesc>
        <actionMsgId type="decimal">2</actionMsgId>
      </action>
    </action>
    <afterUpdateRules sctype="array">
      <afterUpdateRules sctype="string">chm.task.notification.active</afterUpdateRules>
      <afterUpdateRules sctype="string">chm.task.notification.pending.close.risk</afterUpdateRules>
    </afterUpdateRules>
    <initRules NullValue="1" sctype="array">
      <initRules NullValue="1" type="string"/>
    </initRules>
    <onDisplayRules NullValue="1" sctype="array">
      <onDisplayRules NullValue="1" type="string"/>
    </onDisplayRules>
    <sysmoduser type="string">zhouanqing</sysmoduser>
    <sysmodtime type="dateTime">05/13/19 21:10:53</sysmodtime>
    <sysmodcount type="decimal">22</sysmodcount>
    <altForm NullValue="1" sctype="array">
      <altForm sctype="structure">
        <altFormId NullValue="1" type="decimal"/>
        <altFormName NullValue="1" type="string"/>
        <altFormDesc NullValue="1" type="string"/>
        <altFormRight NullValue="1" type="string"/>
        <altFormCondition NullValue="1" type="boolean"/>
        <altFormCondXML NullValue="1" type="string"/>
        <altFormCondDesc NullValue="1" type="string"/>
        <altFormType NullValue="1" type="string"/>
      </altForm>
    </altForm>
    <alerts NullValue="1" sctype="array">
      <alerts NullValue="1" type="string"/>
    </alerts>
    <approvalsRecalc NullValue="1" type="boolean"/>
    <approvalsReset NullValue="1" type="boolean"/>
    <alertsRecalc NullValue="1" type="boolean"/>
    <alertsReset NullValue="1" type="boolean"/>
    <approvalsRecalcXML NullValue="1" type="string"/>
    <approvalsResetXML NullValue="1" type="string"/>
    <alertsRecalcXML NullValue="1" type="string"/>
    <alertsResetXML NullValue="1" type="string"/>
    <updateCond type="operator">$L.tableAccess.new="true" and $L.mode="add" or $L.tableAccess.update="true" and not  (same($L.mode, "add"))</updateCond>
    <updateCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.new"&gt;$L.tableAccess.new&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.mode"&gt;$L.mode&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;add&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;collection logical="OR" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.tableAccess.update"&gt;$L.tableAccess.update&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.mode"&gt;$L.mode&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;add&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</updateCondXML>
    <updateCondDesc type="string">(( $L.tableAccess.new = "true" AND $L.mode = "add") OR ( $L.tableAccess.update = "true" AND $L.mode != "add"))</updateCondDesc>
    <approvalsRecalcDesc NullValue="1" type="string"/>
    <approvalsResetDesc NullValue="1" type="string"/>
    <alertsRecalcDesc NullValue="1" type="string"/>
    <alertsResetDesc NullValue="1" type="string"/>
    <length type="decimal">50</length>
    <width type="decimal">100</width>
    <xCoordinate type="decimal">160</xCoordinate>
    <yCoordinate type="decimal">110</yCoordinate>
    <dtxCoordinate NullValue="1" type="decimal"/>
    <dtyCoordinate NullValue="1" type="decimal"/>
    <dtOrientation NullValue="1" type="decimal"/>
    <phaseOrder type="decimal">2</phaseOrder>
    <afterEnterRules NullValue="1" sctype="array">
      <afterEnterRules NullValue="1" type="string"/>
    </afterEnterRules>
  </record>
</recordset>
