<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Workflow">
  <record id="name=&quot;Incident Task&quot; and tableName=&quot;imTask&quot;" recordid="Incident Task - imTask">
    <name type="string">Incident Task</name>
    <tableName type="string">imTask</tableName>
    <type type="string">complex</type>
    <defaultPhase type="string">Active</defaultPhase>
    <description type="string">Incident Task</description>
    <defaultForm NullValue="1" type="string"/>
    <firstPhase type="string">Waiting</firstPhase>
    <sysmoduser type="string">zhouanqing</sysmoduser>
    <sysmodtime type="dateTime">05/26/17 17:42:20</sysmodtime>
    <sysmodcount type="decimal">14</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
    <action sctype="array">
      <action sctype="structure">
        <actionName type="string">View Archived Emails</actionName>
        <actionId type="string">view.archived.email</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">311</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">4</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Create Template from Record</actionName>
        <actionId type="string">create.template</actionId>
        <actionCondition type="operator">nullsub(jscall("security.getRights", "Incident Tasks", "modifyTemplate"), "false")="true" and supportTemplates in $L.object=true and current.phase in $L.file~="Waiting"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub(jscall(&amp;quot;security.getRights&amp;quot;,&amp;quot;Incident Tasks&amp;quot;, &amp;quot;modifyTemplate&amp;quot;),&amp;quot;false&amp;quot;)=&amp;quot;true&amp;quot; and supportTemplates in $L.object=true and current.phase in $L.file~=&amp;quot;Waiting&amp;quot;"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">310</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: nullsub(jscall("security.getRights","Incident Tasks", "modifyTemplate"),"false")="true" and supportTemplates in $L.object=true and current.phase in $L.file~="Waiting")</actionCondDesc>
        <actionMsgId type="decimal">2</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Apply Template</actionName>
        <actionId type="string">apply.template</actionId>
        <actionCondition type="operator">supportTemplates in $L.object=true and (current.phase in $L.file~="Closure" or current.phase in $L.file~="Cancelled") and ($L.tableAccess.update and current.phase in $L.file~="Closure" and current.phase in $L.file~="Cancelled" or current.phase in $L.file="Waiting" and $L.tableAccess.new)</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"supportTemplates in $L.object=true and (current.phase in $L.file~=&amp;quot;Closure&amp;quot; or current.phase in $L.file~=&amp;quot;Cancelled&amp;quot;) and (($L.tableAccess.update and current.phase in $L.file~=&amp;quot;Closure&amp;quot; and current.phase in $L.file~=&amp;quot;Cancelled&amp;quot;) or (current.phase in $L.file=&amp;quot;Waiting&amp;quot; and $L.tableAccess.new))"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">1</actionLoc>
        <actionOption type="decimal">90</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( supportTemplates in $L.object=true and (current.phase in $L.file~="Closure" or current.phase in $L.file~="Cancelled") and (($L.tableAccess.update and current.phase in $L.file~="Closure" and current.phase in $L.file~="Cancelled") or (current.phase in $L.file="Waiting" and $L.tableAccess.new)) )</actionCondDesc>
        <actionMsgId type="decimal">1</actionMsgId>
      </action>
    </action>
    <onCreateRules NullValue="1" sctype="array">
      <onCreateRules NullValue="1" type="string"/>
    </onCreateRules>
    <onUpdateRules sctype="array">
      <onUpdateRules sctype="string">im.validate.cost</onUpdateRules>
      <onUpdateRules sctype="string">im.task.calculate.cost</onUpdateRules>
    </onUpdateRules>
    <afterAddRules sctype="array">
      <afterAddRules sctype="string">im.task.notification.AssignmentGroup</afterAddRules>
      <afterAddRules sctype="string">im.task.notification.Assignee</afterAddRules>
    </afterAddRules>
    <afterUpdateRules sctype="array">
      <afterUpdateRules sctype="string">im.task.populate.parent.cost</afterUpdateRules>
    </afterUpdateRules>
    <initRules sctype="array">
      <initRules sctype="string">im.task.clear.vars</initRules>
    </initRules>
    <onDisplayRules NullValue="1" sctype="array">
      <onDisplayRules NullValue="1" type="string"/>
    </onDisplayRules>
    <backendTransition sctype="array">
      <backendTransition sctype="structure">
        <btToPhase type="string">Cancelled</btToPhase>
        <btCondition NullValue="1" type="boolean"/>
        <btRule type="string">im.task.cancel</btRule>
        <btCondXML NullValue="1" type="string"/>
        <btCondDesc NullValue="1" type="string"/>
        <btAction type="string">auto.cancel</btAction>
      </backendTransition>
    </backendTransition>
    <onEnterRules sctype="array">
      <onEnterRules sctype="string">im.validate.cost</onEnterRules>
      <onEnterRules sctype="string">im.task.calculate.cost</onEnterRules>
    </onEnterRules>
    <onExitRules NullValue="1" sctype="array">
      <onExitRules NullValue="1" type="string"/>
    </onExitRules>
    <afterEnterRules sctype="array">
      <afterEnterRules sctype="string">im.task.populate.parent.cost</afterEnterRules>
    </afterEnterRules>
    <is.legacy.workflow NullValue="1" type="boolean"/>
    <legacy.fc NullValue="1" type="string"/>
    <legacy.open.state NullValue="1" type="string"/>
    <legacy.close.state NullValue="1" type="string"/>
    <legacy.default.state NullValue="1" type="string"/>
    <legacy.browse.state NullValue="1" type="string"/>
    <optimize.autotran.save type="boolean">true</optimize.autotran.save>
  </record>
</recordset>
