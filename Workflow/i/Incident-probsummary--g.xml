<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Workflow">
  <record id="name=&quot;Incident&quot; and tableName=&quot;probsummary&quot;" recordid="Incident - probsummary">
    <name type="string">Incident</name>
    <tableName type="string">probsummary</tableName>
    <type type="string">complex</type>
    <defaultPhase type="string">Categorization</defaultPhase>
    <description type="string">&lt;p&gt;Incident workflow.&lt;/p&gt;
</description>
    <defaultForm NullValue="1" type="string"/>
    <firstPhase type="string">Logging</firstPhase>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:48:53</sysmodtime>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
    <action sctype="array">
      <action sctype="structure">
        <actionName type="string">Refresh Teams Conversation</actionName>
        <actionId type="string">msteams.refresh.conversation</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3039</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">21</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Discuss on Teams</actionName>
        <actionId type="string">msteams.chat.incident</actionId>
        <actionCondition type="operator">jscall("MicrosoftTeamsConversation.isShowConversationAction", $L.file) and nullsub(major.incident in $L.file, false)=true and $L.mode~="add"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"jscall(&amp;quot;MicrosoftTeamsConversation.isShowConversationAction&amp;quot;,$L.file) and nullsub(major.incident in $L.file, false)=true and $L.mode~=&amp;quot;add&amp;quot;"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">1</actionLoc>
        <actionOption type="decimal">91</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: jscall("MicrosoftTeamsConversation.isShowConversationAction",$L.file) and nullsub(major.incident in $L.file, false)=true and $L.mode~="add")</actionCondDesc>
        <actionMsgId type="decimal">20</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">View Archived Emails</actionName>
        <actionId type="string">view.archived.email</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">318</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">19</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">ce.acknowledge</actionName>
        <actionId type="string">im.incident.acknowledge</actionId>
        <actionCondition type="operator">nullsub($G.bg, false)=true</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub($G.bg, false)=true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">317</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: nullsub($G.bg, false)=true)</actionCondDesc>
        <actionMsgId type="decimal">10</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Solution Matching</actionName>
        <actionId type="string">im.incident.matching</actionId>
        <actionCondition type="operator">$L.tableAccess.update and nullsub(status in $L.file, "")~="closed"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$L.tableAccess.update and nullsub(status in $L.file, &amp;quot;&amp;quot;)~=&amp;quot;closed&amp;quot;"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">316</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">$L.tableAccess.update and nullsub(status in $L.file, "")~="closed"</actionCondDesc>
        <actionMsgId type="decimal">17</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Unlink All Child Incidents</actionName>
        <actionId type="string">im.child.unlinkAll</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3038</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">16</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Unlink Selected Child Incidents</actionName>
        <actionId type="string">im.child.unlink</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3037</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">15</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Set Number of Children per Page</actionName>
        <actionId type="string">im.child.recordPerPage</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3036</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">14</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Goto Previouse Page</actionName>
        <actionId type="string">im.child.prev</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3035</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">13</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Goto Next Page</actionName>
        <actionId type="string">im.child.next</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3034</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">12</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Goto Page N</actionName>
        <actionId type="string">im.child.goToPage</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3033</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">11</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Untick the Master Incident</actionName>
        <actionId type="string">im.master.incident.untick</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3032</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">10</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Get Parent Incident</actionName>
        <actionId type="string">im.parent</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3031</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">9</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Run Context</actionName>
        <actionId type="string">im.run.context.wizard</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3030</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">8</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Create Template from Record</actionName>
        <actionId type="string">create.template</actionId>
        <actionCondition type="operator">nullsub(jscall("security.getRights", "Incident", "modifyTemplate"), "false")="true" and supportTemplates in $L.object=true and current.phase in $L.file~="Logging"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub(jscall(&amp;quot;security.getRights&amp;quot;,&amp;quot;Incident&amp;quot;, &amp;quot;modifyTemplate&amp;quot;),&amp;quot;false&amp;quot;)=&amp;quot;true&amp;quot; and supportTemplates in $L.object=true and current.phase in $L.file~=&amp;quot;Logging&amp;quot;"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">310</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: nullsub(jscall("security.getRights","Incident", "modifyTemplate"),"false")="true" and supportTemplates in $L.object=true and current.phase in $L.file~="Logging")</actionCondDesc>
        <actionMsgId type="decimal">2</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Apply Template</actionName>
        <actionId type="string">apply.template</actionId>
        <actionCondition type="operator">supportTemplates in $L.object=true and current.phase in $L.file~="Closure" and ($L.tableAccess.update and current.phase in $L.file~="Closure" or current.phase in $L.file="Logging" and $L.tableAccess.new) and $G.CEOwnershipSM=true</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"supportTemplates in $L.object=true and current.phase in $L.file~=&amp;quot;Closure&amp;quot; and (($L.tableAccess.update and current.phase in $L.file~=&amp;quot;Closure&amp;quot;) or (current.phase in $L.file=&amp;quot;Logging&amp;quot; and $L.tableAccess.new)) and $G.CEOwnershipSM=true"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">1</actionLoc>
        <actionOption type="decimal">90</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">supportTemplates in $L.object=true and current.phase in $L.file~="Closure" and (($L.tableAccess.update and current.phase in $L.file~="Closure") or (current.phase in $L.file="Logging" and $L.tableAccess.new)) and $G.CEOwnershipSM=true</actionCondDesc>
        <actionMsgId type="decimal">1</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Notify</actionName>
        <actionId type="string">im.notify</actionId>
        <actionCondition type="operator">jscall("security.getToken", "Incident", "view")=true and not  (same($L.mode, "add")) and $G.ess="false"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="security"&gt;&lt;Area caption="Incident"&gt;Incident&lt;/Area&gt;&lt;Right caption="View"&gt;view&lt;/Right&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="boolean"&gt;true&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$L.mode"&gt;$L.mode&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;neq&lt;/Comparison&gt;&lt;Value dataType="string"&gt;add&lt;/Value&gt;&lt;/condition&gt;&lt;condition logical="AND" negate="false"&gt;&lt;operand type="variable"&gt;&lt;VariableName caption="$G.ess"&gt;$G.ess&lt;/VariableName&gt;&lt;/operand&gt;&lt;Comparison&gt;equals&lt;/Comparison&gt;&lt;Value dataType="string"&gt;false&lt;/Value&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">311</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( View in Incident = true AND Variable $L.mode != add AND Variable $G.ess = false )</actionCondDesc>
        <actionMsgId type="decimal">3</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Associate with BAC PI</actionName>
        <actionId type="string">im.associate.bac.pi</actionId>
        <actionCondition type="operator">$L.mode~="add" and (not  (null($G.related.id)) or not  (null($L.related.id))) and nullsub(BAC in $G.system.info, "false")</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$L.mode~=&amp;quot;add&amp;quot; and (not null($G.related.id) or not null($L.related.id)) and nullsub(BAC in $G.system.info, &amp;quot;false&amp;quot;)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">312</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( $L.mode~="add" and (not null($G.related.id) or not null($L.related.id)) and nullsub(BAC in $G.system.info, "false") )</actionCondDesc>
        <actionMsgId type="decimal">4</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">View OMi Event</actionName>
        <actionId type="string">im.view.omi.event</actionId>
        <actionCondition type="operator">$L.mode~="add" and nullsub($G.ess, false)=false and sysinfo.get("environment")#"scguiwweb" and nullsub(SMOMi in $G.system.info, false) and not  (null(1 in external.process.reference in $L.file)) and jscall("SMOMi.isRefBelongsToOMi", 1 in external.process.reference in $L.file)</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$L.mode~=&amp;quot;add&amp;quot; and nullsub($G.ess, false)=false and sysinfo.get(&amp;quot;environment&amp;quot;)#&amp;quot;scguiwweb&amp;quot; and nullsub(SMOMi in $G.system.info, false) and not null(1 in external.process.reference in $L.file) and jscall(&amp;quot;SMOMi.isRefBelongsToOMi&amp;quot;, 1 in external.process.reference in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">313</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( $L.mode~="add" and nullsub($G.ess, false)=false and sysinfo.get("environment")#"scguiwweb" and nullsub(SMOMi in $G.system.info, false) and not null(1 in external.process.reference in $L.file) and jscall("SMOMi.isRefBelongsToOMi", 1 in external.process.reference in $L.file) )</actionCondDesc>
        <actionMsgId type="decimal">5</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Launch Business Impact Report</actionName>
        <actionId type="string">im.launch.business.impact.report</actionId>
        <actionCondition type="operator">$L.mode~="add" and nullsub(SMBIR in $G.system.info, "false") and nullsub($G.ess, false)=false</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$L.mode~=&amp;quot;add&amp;quot; and nullsub(SMBIR in $G.system.info, &amp;quot;false&amp;quot;) and nullsub($G.ess, false)=false"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">314</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( $L.mode~="add" and nullsub(SMBIR in $G.system.info, "false") and nullsub($G.ess, false)=false )</actionCondDesc>
        <actionMsgId type="decimal">6</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Launch Problem Isolation</actionName>
        <actionId type="string">im.launch.problem.isolation</actionId>
        <actionCondition type="operator">$L.mode~="add" and nullsub(SMPI in $G.system.info, "false") and nullsub($G.ess, false)=false</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$L.mode~=&amp;quot;add&amp;quot; and nullsub(SMPI in $G.system.info, &amp;quot;false&amp;quot;) and nullsub($G.ess, false)=false"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">315</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( $L.mode~="add" and nullsub(SMPI in $G.system.info, "false") and nullsub($G.ess, false)=false )</actionCondDesc>
        <actionMsgId type="decimal">7</actionMsgId>
      </action>
    </action>
    <onCreateRules sctype="array">
      <onCreateRules sctype="string">im.standard.set.default.values</onCreateRules>
      <onCreateRules sctype="string">im.asgnchg.init</onCreateRules>
      <onCreateRules sctype="string">im.set.totalpages</onCreateRules>
      <onCreateRules sctype="string">im.init.assignment.set</onCreateRules>
    </onCreateRules>
    <onUpdateRules sctype="array">
      <onUpdateRules sctype="string">im.clear.area</onUpdateRules>
      <onUpdateRules sctype="string">im.standard.mandatory</onUpdateRules>
      <onUpdateRules sctype="string">im.fields.validation</onUpdateRules>
      <onUpdateRules sctype="string">im.child.incident.reset.status</onUpdateRules>
      <onUpdateRules sctype="string">im.SMOMi.updateFromUI</onUpdateRules>
      <onUpdateRules sctype="string">im.standard.set.default.values</onUpdateRules>
      <onUpdateRules sctype="string">im.asgnchg.update</onUpdateRules>
      <onUpdateRules sctype="string">im.review.detail</onUpdateRules>
      <onUpdateRules sctype="string">im.validate.cost</onUpdateRules>
      <onUpdateRules sctype="string">im.incident.calculate.cost</onUpdateRules>
      <onUpdateRules sctype="string">im.set.totalpages</onUpdateRules>
    </onUpdateRules>
    <afterAddRules sctype="array">
      <afterAddRules sctype="string">im.run.sla.process</afterAddRules>
      <afterAddRules sctype="string">im.incident.matching</afterAddRules>
      <afterAddRules sctype="string">im.clear.sd.escalated.flag</afterAddRules>
      <afterAddRules sctype="string">im.sync.status.to.interaction</afterAddRules>
      <afterAddRules sctype="string">incident.notification.open</afterAddRules>
    </afterAddRules>
    <afterUpdateRules sctype="array">
      <afterUpdateRules sctype="string">im.run.sla.process</afterUpdateRules>
      <afterUpdateRules sctype="string">im.sync.status.to.interaction</afterUpdateRules>
      <afterUpdateRules sctype="string">im.child.unlinkAll.auto</afterUpdateRules>
    </afterUpdateRules>
    <initRules sctype="array">
      <initRules sctype="string">im.child.initial</initRules>
      <initRules sctype="string">im.status.list</initRules>
      <initRules sctype="string">msteams.init.vars</initRules>
    </initRules>
    <onDisplayRules sctype="array">
      <onDisplayRules sctype="string">im.set.variables</onDisplayRules>
      <onDisplayRules sctype="string">im.CEUpdate.init</onDisplayRules>
    </onDisplayRules>
    <backendTransition sctype="array">
      <backendTransition sctype="structure">
        <btToPhase type="string">Closure</btToPhase>
        <btCondition NullValue="1" type="boolean"/>
        <btRule type="string">im.incident.auto.close.set.fields</btRule>
        <btCondXML NullValue="1" type="string"/>
        <btCondDesc type="string">Always</btCondDesc>
        <btAction type="string">close.auto</btAction>
      </backendTransition>
      <backendTransition sctype="structure">
        <btToPhase type="string">Closure</btToPhase>
        <btCondition NullValue="1" type="boolean"/>
        <btRule type="string">im.solve.directly</btRule>
        <btCondXML NullValue="1" type="string"/>
        <btCondDesc NullValue="1" type="string"/>
        <btAction type="string">close.directlysolved.incident</btAction>
      </backendTransition>
      <backendTransition sctype="structure">
        <btToPhase type="string">Closure</btToPhase>
        <btCondition NullValue="1" type="boolean"/>
        <btRule type="string">im.incident.closure</btRule>
        <btCondXML NullValue="1" type="string"/>
        <btCondDesc NullValue="1" type="string"/>
        <btAction type="string">close.any.time</btAction>
      </backendTransition>
      <backendTransition sctype="structure">
        <btToPhase type="string">Closure</btToPhase>
        <btCondition type="operator">$L.wfEvent="event.close" and not  (null(1 in external.process.reference in $L.file))</btCondition>
        <btRule type="string">im.incident.closure</btRule>
        <btCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate="" &gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$L.wfEvent=&amp;quot;event.close&amp;quot; and not null(1 in external.process.reference in $L.file)"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</btCondXML>
        <btCondDesc type="string">( $L.wfEvent="event.close" and not null(1 in external.process.reference in $L.file) )</btCondDesc>
        <btAction NullValue="1" type="string"/>
      </backendTransition>
    </backendTransition>
    <onEnterRules sctype="array">
      <onEnterRules sctype="string">im.validate.cost</onEnterRules>
      <onEnterRules sctype="string">im.incident.calculate.cost</onEnterRules>
    </onEnterRules>
    <onExitRules NullValue="1" sctype="array">
      <onExitRules NullValue="1" type="string"/>
    </onExitRules>
    <afterEnterRules NullValue="1" sctype="array">
      <afterEnterRules NullValue="1" type="string"/>
    </afterEnterRules>
    <is.legacy.workflow NullValue="1" type="boolean"/>
    <legacy.fc NullValue="1" type="string"/>
    <legacy.open.state NullValue="1" type="string"/>
    <legacy.close.state NullValue="1" type="string"/>
    <legacy.default.state NullValue="1" type="string"/>
    <legacy.browse.state NullValue="1" type="string"/>
    <optimize.autotran.save type="boolean">true</optimize.autotran.save>
  </record>
</recordset>
