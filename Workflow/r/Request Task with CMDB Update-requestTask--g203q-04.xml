<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="Workflow">
  <record id="name=&quot;Request Task with CMDB Update&quot; and tableName=&quot;requestTask&quot;" recordid="Request Task with CMDB Update - requestTask">
    <name type="string">Request Task with CMDB Update</name>
    <tableName type="string">requestTask</tableName>
    <type type="string">complex</type>
    <defaultPhase type="string">Active</defaultPhase>
    <description type="string">Request Task Workflow with CMDB Update</description>
    <defaultForm NullValue="1" type="string"/>
    <firstPhase type="string">Waiting</firstPhase>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/22/16 22:49:28</sysmodtime>
    <sysmodcount type="decimal">183</sysmodcount>
    <sysrestricted type="boolean">true</sysrestricted>
    <action sctype="array">
      <action sctype="structure">
        <actionName type="string">View Archived Emails</actionName>
        <actionId type="string">view.archived.email</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">313</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">8</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Notify</actionName>
        <actionId type="string">rmtask.notify</actionId>
        <actionCondition type="operator">$L.tableAccess.view=true and $L.mode~="add"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$L.tableAccess.view=true and $L.mode~="add""&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">312</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( $L.tableAccess.view=true and $L.mode~="add" )</actionCondDesc>
        <actionMsgId type="decimal">6</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Set Reminder</actionName>
        <actionId type="string">rmtask.setReminder</actionId>
        <actionCondition type="operator">$G.ess="false" and (current.phase in $L.file="Review" or current.phase in $L.file="Active" or current.phase in $L.file="CMDB Update") and $L.mode~="add"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"$G.ess="false" and (current.phase in $L.file="Review" or current.phase in $L.file="Active" or current.phase in $L.file="CMDB Update") and $L.mode~="add""&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">311</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">$G.ess="false" and (current.phase in $L.file="Review" or current.phase in $L.file="Active" or current.phase in $L.file="CMDB Update") and $L.mode~="add"</actionCondDesc>
        <actionMsgId type="decimal">5</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Create Template from Record</actionName>
        <actionId type="string">create.template</actionId>
        <actionCondition type="operator">nullsub(jscall("security.getRights", "Request Tasks", "modifyTemplate"), "false")="true" and supportTemplates in $L.object=true and $L.mode~="add"</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"nullsub(jscall(&amp;quot;security.getRights&amp;quot;,&amp;quot;Request Tasks&amp;quot;,&amp;quot;modifyTemplate&amp;quot;),&amp;quot;false&amp;quot;)=&amp;quot;true&amp;quot; and supportTemplates in $L.object=true and $L.mode~=&amp;quot;add&amp;quot;"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">2</actionLoc>
        <actionOption type="decimal">310</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( Expression: nullsub(jscall("security.getRights","Request Tasks","modifyTemplate"),"false")="true" and supportTemplates in $L.object=true and $L.mode~="add")</actionCondDesc>
        <actionMsgId type="decimal">3</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">Apply Template</actionName>
        <actionId type="string">apply.template</actionId>
        <actionCondition type="operator">supportTemplates in $L.object=true and (current.phase in $L.file="Active" or current.phase in $L.file="Review") and $L.tableAccess.update</actionCondition>
        <actionCondXML type="string">&lt;XmlCondition&gt;&lt;collection logical="" negate=""&gt;&lt;condition logical="" negate="false"&gt;&lt;operand type="expression"&gt;&lt;Expression caption=""&gt;"supportTemplates in $L.object=true and (current.phase in $L.file="Active" or current.phase in $L.file="Review" ) and $L.tableAccess.update"&lt;/Expression&gt;&lt;/operand&gt;&lt;/condition&gt;&lt;/collection&gt;&lt;/XmlCondition&gt;</actionCondXML>
        <actionLoc type="decimal">1</actionLoc>
        <actionOption type="decimal">90</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc type="string">( supportTemplates in $L.object=true and (current.phase in $L.file="Active" or current.phase in $L.file="Review" ) and $L.tableAccess.update )</actionCondDesc>
        <actionMsgId type="decimal">4</actionMsgId>
      </action>
      <action sctype="structure">
        <actionName type="string">filter activity log</actionName>
        <actionId type="string">rmtask.filter.activity</actionId>
        <actionCondition NullValue="1" type="boolean"/>
        <actionCondXML NullValue="1" type="string"/>
        <actionLoc type="decimal">3</actionLoc>
        <actionOption type="decimal">3030</actionOption>
        <actionLock type="boolean">false</actionLock>
        <actionRunAction NullValue="1" type="string"/>
        <actionCondDesc NullValue="1" type="string"/>
        <actionMsgId type="decimal">2</actionMsgId>
      </action>
    </action>
    <onCreateRules sctype="array">
      <onCreateRules sctype="string">rmtask.get.sla</onCreateRules>
      <onCreateRules sctype="string">rmtask.calculate.balance</onCreateRules>
      <onCreateRules sctype="string">rmtask.purchase.calculate.stock</onCreateRules>
      <onCreateRules sctype="string">rmtask.copy.fields.from.request</onCreateRules>
      <onCreateRules sctype="string">rmtask.init.assignment.set</onCreateRules>
      <onCreateRules sctype="string">rmtask.general.set.priority</onCreateRules>
      <onCreateRules sctype="string">rmtask.initial.openby</onCreateRules>
      <onCreateRules sctype="string">rm.requestTask.setInit.ActualLeadTime</onCreateRules>
      <onCreateRules sctype="string">rmtask.initial.costcurrency</onCreateRules>
      <onCreateRules sctype="string">rmtask.initial.unitcost</onCreateRules>
      <onCreateRules sctype="string">rmtask.calculate.cost</onCreateRules>
    </onCreateRules>
    <onUpdateRules sctype="array">
      <onUpdateRules sctype="string">rmtask.standard.mandatory</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.purchase.mandatory</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.general.validation</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.get.sla</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.calculate.balance</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.general.set.priority</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.initial.costcurrency</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.initial.unitcost</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.cost.validation</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.calculate.cost</onUpdateRules>
      <onUpdateRules sctype="string">rmtask.journalUpdate</onUpdateRules>
    </onUpdateRules>
    <afterAddRules sctype="array">
      <afterAddRules sctype="string">rmtask.notification.assignment</afterAddRules>
    </afterAddRules>
    <afterUpdateRules sctype="array">
      <afterUpdateRules sctype="string">rmtask.notification.assignment</afterUpdateRules>
      <afterUpdateRules sctype="string">rmtask.populate.request.cost</afterUpdateRules>
      <afterUpdateRules sctype="string">rmtask.purchase.calculate.stock</afterUpdateRules>
    </afterUpdateRules>
    <initRules sctype="array">
      <initRules sctype="string">rmtask.initial.status.list</initRules>
      <initRules sctype="string">rmtask.clean.update.action</initRules>
      <initRules sctype="string">rmtask.calculate.planstartdate</initRules>
      <initRules sctype="string">rmtask.initial.display</initRules>
      <initRules sctype="string">rmtask.initial.costcurrency</initRules>
    </initRules>
    <onDisplayRules NullValue="1" sctype="array">
      <onDisplayRules NullValue="1" type="string"/>
    </onDisplayRules>
    <backendTransition sctype="array">
      <backendTransition sctype="structure">
        <btToPhase type="string">Cancelled</btToPhase>
        <btCondition NullValue="1" type="boolean"/>
        <btRule type="string">rm.task.cancel</btRule>
        <btCondXML NullValue="1" type="string"/>
        <btCondDesc NullValue="1" type="string"/>
        <btAction type="string">auto.cancel</btAction>
      </backendTransition>
      <backendTransition sctype="structure">
        <btToPhase type="string">Cancelled</btToPhase>
        <btCondition NullValue="1" type="boolean"/>
        <btRule NullValue="1" type="string"/>
        <btCondXML NullValue="1" type="string"/>
        <btCondDesc NullValue="1" type="string"/>
        <btAction type="string">close.withdrawn.request.task</btAction>
      </backendTransition>
      <backendTransition sctype="structure">
        <btToPhase type="string">Cancelled</btToPhase>
        <btCondition NullValue="1" type="boolean"/>
        <btRule type="string">rmTask.set.denied.closure.code</btRule>
        <btCondXML NullValue="1" type="string"/>
        <btCondDesc NullValue="1" type="string"/>
        <btAction type="string">close.denied.request.task</btAction>
      </backendTransition>
    </backendTransition>
    <onEnterRules NullValue="1" sctype="array">
      <onEnterRules NullValue="1" type="string"/>
    </onEnterRules>
    <onExitRules sctype="array">
      <onExitRules sctype="string">rmtask.initial.display</onExitRules>
      <onExitRules sctype="string">rmtask.clean.update.action</onExitRules>
    </onExitRules>
    <afterEnterRules sctype="array">
      <afterEnterRules sctype="string">rmtask.populate.request.cost</afterEnterRules>
    </afterEnterRules>
    <is.legacy.workflow NullValue="1" type="boolean"/>
    <legacy.fc NullValue="1" type="string"/>
    <legacy.open.state NullValue="1" type="string"/>
    <legacy.close.state NullValue="1" type="string"/>
    <legacy.default.state NullValue="1" type="string"/>
    <legacy.browse.state NullValue="1" type="string"/>
    <optimize.autotran.save type="boolean">true</optimize.autotran.save>
  </record>
</recordset>
