<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="smartsearchaction">
  <record id="name=&quot;usesolution&quot;" recordid="usesolution">
    <name type="string">usesolution</name>
    <display.name type="string">scmsg("usesolution", "idol")</display.name>
    <description type="string">Use Integration Mapping to copy solution</description>
    <precondition NullValue="1" type="string"/>
    <action NullValue="1" type="string"/>
    <current.filename sctype="array">
      <current.filename sctype="string">incidents</current.filename>
      <current.filename sctype="string">probsummary</current.filename>
      <current.filename sctype="string">request</current.filename>
      <current.filename sctype="string">knownerror</current.filename>
      <current.filename sctype="string">rootcause</current.filename>
      <current.filename sctype="string">incidents</current.filename>
    </current.filename>
    <current.criteria sctype="array">
      <current.criteria sctype="string">open ~= "Closed"</current.criteria>
      <current.criteria sctype="string">problem.status ~= "Closed"</current.criteria>
      <current.criteria sctype="string">true</current.criteria>
      <current.criteria sctype="string">true</current.criteria>
      <current.criteria sctype="string">true</current.criteria>
      <current.criteria sctype="string">open ~= "Closed"</current.criteria>
    </current.criteria>
    <suggestion.filename NullValue="1" sctype="array">
      <suggestion.filename NullValue="1" type="string"/>
    </suggestion.filename>
    <suggestion.library NullValue="1" sctype="array">
      <suggestion.library NullValue="1" type="string"/>
    </suggestion.library>
    <suggestion.criteria NullValue="1" sctype="array">
      <suggestion.criteria NullValue="1" type="string"/>
    </suggestion.criteria>
    <precondition.script sctype="array">
      <precondition.script sctype="string">not (null($L.assoc.file)) and (filename($L.assoc.file)~={"incidents","rootcause","probsummary","request"} or filename($L.assoc.file)="incidents" and (open in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="rootcause" and (rcStatus in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(workaround in $L.assoc.file)) or filename($L.assoc.file)="probsummary" and (status in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="request" and (status in $L.assoc.file) isin {"Fulfilled", "Closed", "closed"} and not  (null(resolution in $L.assoc.file))) and jscall("IDOLAssistantUseSolution.accept", $L.file, $L.assoc.file, $L.library, $L.reference)</precondition.script>
      <precondition.script sctype="string">not (null($L.assoc.file)) and (filename($L.assoc.file)~={"incidents","rootcause","probsummary","request"} or filename($L.assoc.file)="incidents" and (open in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="rootcause" and (rcStatus in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(workaround in $L.assoc.file)) or filename($L.assoc.file)="probsummary" and (status in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="request" and (status in $L.assoc.file) isin {"Fulfilled", "Closed", "closed"} and not  (null(resolution in $L.assoc.file))) and jscall("IDOLAssistantUseSolution.accept", $L.file, $L.assoc.file, $L.library, $L.reference)</precondition.script>
      <precondition.script sctype="string">not (null($L.assoc.file)) and (filename($L.assoc.file)~={"incidents","rootcause","probsummary","request"} or filename($L.assoc.file)="incidents" and (open in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="rootcause" and (rcStatus in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(workaround in $L.assoc.file)) or filename($L.assoc.file)="probsummary" and (status in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="request" and (status in $L.assoc.file) isin {"Fulfilled", "Closed", "closed"} and not  (null(resolution in $L.assoc.file))) and jscall("IDOLAssistantUseSolution.accept", $L.file, $L.assoc.file, $L.library, $L.reference)</precondition.script>
      <precondition.script sctype="string">not (null($L.assoc.file)) and (filename($L.assoc.file)~={"incidents","rootcause","probsummary","request"} or filename($L.assoc.file)="incidents" and (open in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="rootcause" and (rcStatus in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(workaround in $L.assoc.file)) or filename($L.assoc.file)="probsummary" and (status in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="request" and (status in $L.assoc.file) isin {"Fulfilled", "Closed", "closed"} and not  (null(resolution in $L.assoc.file))) and jscall("IDOLAssistantUseSolution.accept", $L.file, $L.assoc.file, $L.library, $L.reference)</precondition.script>
      <precondition.script sctype="string">not (null($L.assoc.file)) and (filename($L.assoc.file)~={"incidents","rootcause","probsummary","request"} or filename($L.assoc.file)="incidents" and (open in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="rootcause" and (rcStatus in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(workaround in $L.assoc.file)) or filename($L.assoc.file)="probsummary" and (status in $L.assoc.file) isin {"Resolved", "Closed", "closed"} and not  (null(resolution in $L.assoc.file)) or filename($L.assoc.file)="request" and (status in $L.assoc.file) isin {"Fulfilled", "Closed", "closed"} and not  (null(resolution in $L.assoc.file))) and jscall("IDOLAssistantUseSolution.accept", $L.file, $L.assoc.file, $L.library, $L.reference)</precondition.script>
      <precondition.script sctype="string">kbtype in $L.library isin { "okmlib" }</precondition.script>
    </precondition.script>
    <suggestion.action sctype="array">
      <suggestion.action sctype="string">jscall("IDOLAssistantUseSolution.handle", $L.file, $L.assoc.file, $L.library, $L.reference, $L.keyword)</suggestion.action>
      <suggestion.action sctype="string">jscall("IDOLAssistantUseSolution.handle", $L.file, $L.assoc.file, $L.library, $L.reference, $L.keyword)</suggestion.action>
      <suggestion.action sctype="string">jscall("IDOLAssistantUseSolution.handle", $L.file, $L.assoc.file, $L.library, $L.reference, $L.keyword)</suggestion.action>
      <suggestion.action sctype="string">jscall("IDOLAssistantUseSolution.handle", $L.file, $L.assoc.file, $L.library, $L.reference, $L.keyword)</suggestion.action>
      <suggestion.action sctype="string">jscall("IDOLAssistantUseSolution.handle", $L.file, $L.assoc.file, $L.library, $L.reference, $L.keyword)</suggestion.action>
      <suggestion.action sctype="string">jscall("IDOLAssistantUseSolution.handleokm", $L.file, $L.assoc.file, $L.library, $L.reference, $L.keyword)</suggestion.action>
    </suggestion.action>
  </record>
</recordset>
