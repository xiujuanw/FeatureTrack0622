<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;us.dump.delimited&quot;" recordid="us.dump.delimited">
    <application.name type="string">us.dump.delimited</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">07/26/18 03:27:25</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">07/26/18 03:21:44</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">07/26/18 03:02:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Escape values for Excel</rev.desc>
        </rev.desc>
        <change.no type="decimal">145888</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">01/04/18 21:18:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Escape values for Excel</rev.desc>
        </rev.desc>
        <change.no type="decimal">145888</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">05/22/14 16:45:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel update panel "reselect.file", if filequeryex() return null, set $L.file.export=$L.file</rev.desc>
        </rev.desc>
        <change.no type="decimal">109500</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">03/19/14 09:02:55</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel build, change code to:</rev.desc>
          <rev.desc sctype="string">$L.lf=" "</rev.desc>
          <rev.desc sctype="string">if ($L.delim="csv" or $L.excel="excel") then ($L.void=evaluate(parse("$L.lf=\"\\0a\"", 11)))</rev.desc>
        </rev.desc>
        <change.no type="decimal">106148</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">03/16/14 07:21:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update start panel, initialize $L.sep</rev.desc>
        </rev.desc>
        <change.no type="decimal">105122</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">05/15/13 03:23:27</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel "reselect.file", update code:</rev.desc>
          <rev.desc sctype="string">$L.fqueries=filequeryex($L.file)</rev.desc>
        </rev.desc>
        <change.no type="decimal">88814</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">05/06/13 18:24:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fix 88814 issue to use msg 2034 but not 2023 as msg 2023 is used by other fixing(79401).</rev.desc>
        </rev.desc>
        <change.no type="decimal">94268</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">05/05/13 18:35:58</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The performance of exporting degrades when exporting a column's content that is reformatted using a global list</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">recompile</rev.desc>
        </rev.desc>
        <change.no type="decimal">94268</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">04/22/13 12:48:36</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The performance of exporting degrades when exporting a column's content that is reformatted using a global list</rev.desc>
        </rev.desc>
        <change.no type="decimal">94268</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">01/12/13 01:45:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">refactor, combine build.csv and build</rev.desc>
        </rev.desc>
        <change.no type="decimal">88814</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">11/30/12 18:26:28</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">reselect $L.file.export as a copy of $L.file when exporting</rev.desc>
        </rev.desc>
        <change.no type="decimal">88814</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lingyan</rev.name>
        <rev.date type="dateTime">03/19/11 21:06:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Invoke tian-liang's partial modification for QCCR1E54138</rev.desc>
        </rev.desc>
        <change.no type="decimal">54138</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lingyan</rev.name>
        <rev.date type="dateTime">03/14/11 18:27:07</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Redesign Export to Excel to not use DDE.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">In final release we fixed 3 more issues:</rev.desc>
          <rev.desc sctype="string">1.      Unicode is not supported in beta. Therefore, a single server instance could support French and German, English and Turkish, English and Japanese, but not Turkish and Czech, or Polish and Japanese.</rev.desc>
          <rev.desc sctype="string">(We have 5 options, and we choose the last one: utf8 + delimiter defined in OS, utf8 + "tab", utf16 + delimiter defined in OS, utf16 + "tab", utf16le + "tab")</rev.desc>
          <rev.desc sctype="string">2.      QCCR1E47649. Columns in a QBE whose visible condition evaluates to false can be exported to Excel.</rev.desc>
          <rev.desc sctype="string">(We only consider the visible condition defined in datapolicy, we don't consider the visible condition defined in format)</rev.desc>
          <rev.desc sctype="string">3.      Carriage returns are not supported in non-array fields in beta. QCIM1E61015 report this issue again. Export to Excel does not properly export &amp; format the spreadsheet from Knowledge Documents.</rev.desc>
          <rev.desc sctype="string">(I tested on my laptop, the performance is the same)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This time fixed 2nd and 3rd issues.</rev.desc>
        </rev.desc>
        <change.no type="decimal">58562</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lingyan</rev.name>
        <rev.date type="dateTime">01/26/11 19:33:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Redesign Export to Excel to not use DDE.</rev.desc>
          <rev.desc sctype="string">Fixed the Unicode issue, use utf16le+tab.</rev.desc>
          <rev.desc sctype="string">Unicode is not supported in beta. Therefore, a single server instance could support French and German, English and Turkish, English and Japanese, but not Turkish and Czech, or Polish and Japanese.</rev.desc>
          <rev.desc sctype="string">(We have 5 options, and we choose the last one: utf8 + delimiter defined in OS, utf8 + "tab", utf16 + delimiter defined in OS, utf16 + "tab", utf16le + "tab")</rev.desc>
        </rev.desc>
        <change.no type="decimal">58562</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lingyan</rev.name>
        <rev.date type="dateTime">01/26/11 19:31:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Redesign Export to Excel to not use DDE.</rev.desc>
          <rev.desc sctype="string">invoke Server fix QCCR60590 (Add a new parameter encoding (e.g. "utf16") for file type connect panel). export excel as utf16 encoding, and tab as delimiter.</rev.desc>
        </rev.desc>
        <change.no type="decimal">58562</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lingyan</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Redesign Export to Excel to not use DDE.</rev.desc>
        </rev.desc>
        <change.no type="decimal">58562</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Replaceing the second strrep call with a js call to do a string replace in build.csv and calling str() on $L.temp.string and $L.a in $L.temp to make sure we are not trying to concatinate non-string types</rev.desc>
        </rev.desc>
        <change.no type="decimal">36683</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changes the strclpr call DE2799</rev.desc>
        </rev.desc>
        <change.no type="decimal">2799</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changes the strclpr call DE2799</rev.desc>
        </rev.desc>
        <change.no type="decimal">2799</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Hua:panel build.csv, change</rev.desc>
          <rev.desc sctype="string">$L.lf="   |"</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">$L.lf=</rev.desc>
        </rev.desc>
        <change.no type="decimal">40942</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Exit silently when hitting an error in file.load since the client is handing the error conditions.</rev.desc>
        </rev.desc>
        <change.no type="decimal">4620</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Hua:panel build.csv, changed $L.temp.string=1 in $L.temp to $L.temp.string=nullsub(1 in $L.temp, "").Also changed $L.lf="</rev.desc>
          <rev.desc sctype="string">"</rev.desc>
          <rev.desc sctype="string">to $L.lf="   |"</rev.desc>
          <rev.desc sctype="string">The previous expression is no longer valid for rad editor.</rev.desc>
        </rev.desc>
        <change.no type="decimal">40942</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel build.csv</rev.desc>
          <rev.desc sctype="string">changed big loop expression to:</rev.desc>
          <rev.desc sctype="string">for $L.x = 1 to lng($L.array) do ($L.temp=evaluate($L.x in $L.array) in $L.file;$L.temp=nullsub($L.temp, "");if (type($L.temp)=2) then ($L.temp=strrep($L.temp, "\"", "\"\""));if (type($L.temp)=2 and (index($L.sep, $L.temp)&gt;0 or index("\"", $L.temp)&gt;0)) then ($L.temp="\""+$L.temp+"\"");if (type($L.temp)=8) then (if null($L.temp) then ($L.temp={""});$L.temp.string=1 in $L.temp;for $L.a = 2 to lng(denull($L.temp)) do ($L.temp.string=$L.temp.string+$L.lf+nullsub($L.a in $L.temp, ""));$L.temp.string=strrep(str($L.temp.string), "\"", "\"\"");$L.temp="\""+$L.temp.string+"\"");$L.x in $L.values=$L.temp)</rev.desc>
        </rev.desc>
        <change.no type="decimal">37745</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel build.csv</rev.desc>
          <rev.desc sctype="string">added the str() to $L.string=str(1 in $L.values)</rev.desc>
        </rev.desc>
        <change.no type="decimal">37978</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel build.csv</rev.desc>
          <rev.desc sctype="string">added the nullsub() to this expression</rev.desc>
          <rev.desc sctype="string">($L.temp.string=$L.temp.string+$L.lf+nullsub($L.a in $L.temp,""))</rev.desc>
        </rev.desc>
        <change.no type="decimal">37745</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel build.headers</rev.desc>
          <rev.desc sctype="string">Moved $L.string="" to the start of the process panel</rev.desc>
          <rev.desc sctype="string">Combined lines two lines into two new lines that account for CSV processing of the header strings if in CSV mode.</rev.desc>
        </rev.desc>
        <change.no type="decimal">36269</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added support for the semicolon separated version of CSV.  This uses the "ssv" delimiter code.</rev.desc>
        </rev.desc>
        <change.no type="decimal">37184</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added new Hide Filename parameter to allow the use of the ask.export2 form, which doesn't display the filename prompt - only delimiters.  If this parameter is true then we will nullsub the filename to export.txt.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Will now re-prompt if the filename is null.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added the ability to export headers and export in CSV format.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Phil</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">changed panel gen.array format record field should have been filled with $L.format and  not the filename field, that should be left blank.  this solves export to text file problem using modified columns</rev.desc>
        </rev.desc>
        <change.no type="decimal">2135</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Check for a NULL delimiter.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Always start from the top of the list and return to the current position after.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">scmsg</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">Escape values for Excel</descript>
      <descript sctype="string">Escape values for Excel</descript>
      <descript sctype="string">update panel update panel "reselect.file", if filequeryex() return null, set $L.file.export=$L.file</descript>
      <descript sctype="string">update panel build, change code to:</descript>
      <descript sctype="string">$L.lf=" "</descript>
      <descript sctype="string">if ($L.delim="csv" or $L.excel="excel") then ($L.void=evaluate(parse("$L.lf=\"\\0a\"", 11)))</descript>
      <descript sctype="string">update start panel, initialize $L.sep</descript>
      <descript sctype="string">update panel "reselect.file", update code:</descript>
      <descript sctype="string">$L.fqueries=filequeryex($L.file)</descript>
      <descript sctype="string">Fix 88814 issue to use msg 2034 but not 2023 as msg 2023 is used by other fixing(79401).</descript>
      <descript sctype="string">The performance of exporting degrades when exporting a column's content that is reformatted using a global list</descript>
      <descript sctype="string"/>
      <descript sctype="string">recompile</descript>
      <descript sctype="string">The performance of exporting degrades when exporting a column's content that is reformatted using a global list</descript>
      <descript sctype="string">refactor, combine build.csv and build</descript>
      <descript sctype="string">reselect $L.file.export as a copy of $L.file when exporting</descript>
      <descript sctype="string">Invoke tian-liang's partial modification for QCCR1E54138</descript>
      <descript sctype="string">Redesign Export to Excel to not use DDE.</descript>
      <descript sctype="string"/>
      <descript sctype="string">In final release we fixed 3 more issues:</descript>
      <descript sctype="string">1.      Unicode is not supported in beta. Therefore, a single server instance could support French and German, English and Turkish, English and Japanese, but not Turkish and Czech, or Polish and Japanese.</descript>
      <descript sctype="string">(We have 5 options, and we choose the last one: utf8 + delimiter defined in OS, utf8 + "tab", utf16 + delimiter defined in OS, utf16 + "tab", utf16le + "tab")</descript>
      <descript sctype="string">2.      QCCR1E47649. Columns in a QBE whose visible condition evaluates to false can be exported to Excel.</descript>
      <descript sctype="string">(We only consider the visible condition defined in datapolicy, we don't consider the visible condition defined in format)</descript>
      <descript sctype="string">3.      Carriage returns are not supported in non-array fields in beta. QCIM1E61015 report this issue again. Export to Excel does not properly export &amp; format the spreadsheet from Knowledge Documents.</descript>
      <descript sctype="string">(I tested on my laptop, the performance is the same)</descript>
      <descript sctype="string"/>
      <descript sctype="string">This time fixed 2nd and 3rd issues.</descript>
      <descript sctype="string">Redesign Export to Excel to not use DDE.</descript>
      <descript sctype="string">Replaceing the second strrep call with a js call to do a string replace in build.csv and calling str() on $L.temp.string and $L.a in $L.temp to make sure we are not trying to concatinate non-string types</descript>
      <descript sctype="string">Changes the strclpr call DE2799</descript>
      <descript sctype="string">Changes the strclpr call DE2799</descript>
      <descript sctype="string">Hua:panel build.csv, change</descript>
      <descript sctype="string">$L.lf="   |"</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">$L.lf=</descript>
      <descript sctype="string">Exit silently when hitting an error in file.load since the client is handing the error conditions.</descript>
      <descript sctype="string">Hua:panel build.csv, changed $L.temp.string=1 in $L.temp to $L.temp.string=nullsub(1 in $L.temp, "").Also changed $L.lf="</descript>
      <descript sctype="string">"</descript>
      <descript sctype="string">to $L.lf="   |"</descript>
      <descript sctype="string">The previous expression is no longer valid for rad editor.</descript>
      <descript sctype="string">panel build.csv</descript>
      <descript sctype="string">changed big loop expression to:</descript>
      <descript sctype="string">for $L.x = 1 to lng($L.array) do ($L.temp=evaluate($L.x in $L.array) in $L.file;$L.temp=nullsub($L.temp, "");if (type($L.temp)=2) then ($L.temp=strrep($L.temp, "\"", "\"\""));if (type($L.temp)=2 and (index($L.sep, $L.temp)&gt;0 or index("\"", $L.temp)&gt;0)) then ($L.temp="\""+$L.temp+"\"");if (type($L.temp)=8) then (if null($L.temp) then ($L.temp={""});$L.temp.string=1 in $L.temp;for $L.a = 2 to lng(denull($L.temp)) do ($L.temp.string=$L.temp.string+$L.lf+nullsub($L.a in $L.temp, ""));$L.temp.string=strrep(str($L.temp.string), "\"", "\"\"");$L.temp="\""+$L.temp.string+"\"");$L.x in $L.values=$L.temp)</descript>
      <descript sctype="string">Panel build.csv</descript>
      <descript sctype="string">added the str() to $L.string=str(1 in $L.values)</descript>
      <descript sctype="string">panel build.csv</descript>
      <descript sctype="string">added the nullsub() to this expression</descript>
      <descript sctype="string">($L.temp.string=$L.temp.string+$L.lf+nullsub($L.a in $L.temp,""))</descript>
      <descript sctype="string">Panel build.headers</descript>
      <descript sctype="string">Moved $L.string="" to the start of the process panel</descript>
      <descript sctype="string">Combined lines two lines into two new lines that account for CSV processing of the header strings if in CSV mode.</descript>
      <descript sctype="string">Added support for the semicolon separated version of CSV.  This uses the "ssv" delimiter code.</descript>
      <descript sctype="string">Added new Hide Filename parameter to allow the use of the ask.export2 form, which doesn't display the filename prompt - only delimiters.  If this parameter is true then we will nullsub the filename to export.txt.</descript>
      <descript sctype="string">Will now re-prompt if the filename is null.</descript>
      <descript sctype="string">Added the ability to export headers and export in CSV format.</descript>
      <descript sctype="string">changed panel gen.array format record field should have been filled with $L.format and  not the filename field, that should be left blank.  this solves export to text file problem using modified columns</descript>
      <descript sctype="string">Check for a NULL delimiter.</descript>
      <descript sctype="string">Always start from the top of the list and return to the current position after.</descript>
      <descript sctype="string">scmsg</descript>
    </descript>
    <release type="string">A9802</release>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:44:51</sysmodtime>
  </record>
</recordset>
