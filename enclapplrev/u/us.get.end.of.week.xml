<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;us.get.end.of.week&quot;" recordid="us.get.end.of.week">
    <application.name type="string">us.get.end.of.week</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">corvinoa</rev.name>
        <rev.date type="dateTime">06/28/11 00:30:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">adds a new holiday paramater and uses it in place of the calduty holiday paramater if it is set.</rev.desc>
        </rev.desc>
        <change.no type="decimal">61664</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">yuli</rev.name>
        <rev.date type="dateTime">12/15/10 03:18:32</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Service Level Objective (SLO) interval times are being calculated incorrectly when using calholiday records in combination with operators and contacts in different time zones.</rev.desc>
          <rev.desc sctype="string">panel:start</rev.desc>
          <rev.desc sctype="string">add the following statement</rev.desc>
          <rev.desc sctype="string">$L.osoffset=jscall("tzFunctions.getOSOffset")</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">setup.holiday.query</rev.desc>
          <rev.desc sctype="string">$L.holiday.sql="holiday.tables=\""+holiday.table in $L.calendar+"\" and end.date&gt;'"+date(tod())+"'"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">$L.dateformat=jscall("DateOrderConstant.yyyymmdd")</rev.desc>
          <rev.desc sctype="string">$L.holiday.sql="holiday.tables=\""+holiday.table in $L.calendar+"\" and (end.date&gt;'"+date(tod())+"' or str.end.date&gt;\""+jscall("tzFunctions.convertDatetoString", tod(), $L.dateformat)+"\")"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">build.holiday.array</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.x=lng($L.holiday.start)+1</rev.desc>
          <rev.desc sctype="string">$L.x in $L.holiday.start=start.date in $L.holiday</rev.desc>
          <rev.desc sctype="string">$L.x in $L.holiday.end=end.date in $L.holiday</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">$L.x=lng($L.holiday.start)+1</rev.desc>
          <rev.desc sctype="string">if (not null(noTimeZone in $L.holiday) and noTimeZone in $L.holiday) then ($L.x in $L.holiday.start=jscall("tzFunctions.convertStringtoDate", str.start.date in $L.holiday) - $L.osoffset - get.timezoneoffset();$L.x in $L.holiday.end=jscall("tzFunctions.convertStringtoDate", str.end.date in $L.holiday) - $L.osoffset - get.timezoneoffset()) else ($L.x in $L.holiday.start=start.date in $L.holiday;$L.x in $L.holiday.end=end.date in $L.holiday)</rev.desc>
        </rev.desc>
        <change.no type="decimal">59316</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">09/27/06 12:02:41</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On panel="midnight", removed:</rev.desc>
          <rev.desc sctype="string">if ($L.days=0) then ($L.days=7)</rev.desc>
        </rev.desc>
        <change.no type="decimal">36919</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">08/09/05 11:55:23</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On panel="midnight", changed the normal exit to check.reset.tz (to avoid having $EOW=$L.return after processing takes place on the midnight panel.</rev.desc>
        </rev.desc>
        <change.no type="decimal">36919</change.no>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">adds a new holiday paramater and uses it in place of the calduty holiday paramater if it is set.</descript>
      <descript sctype="string">Service Level Objective (SLO) interval times are being calculated incorrectly when using calholiday records in combination with operators and contacts in different time zones.</descript>
      <descript sctype="string">panel:start</descript>
      <descript sctype="string">add the following statement</descript>
      <descript sctype="string">$L.osoffset=jscall("tzFunctions.getOSOffset")</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">setup.holiday.query</descript>
      <descript sctype="string">$L.holiday.sql="holiday.tables=\""+holiday.table in $L.calendar+"\" and end.date&gt;'"+date(tod())+"'"</descript>
      <descript sctype="string"/>
      <descript sctype="string">to</descript>
      <descript sctype="string">$L.dateformat=jscall("DateOrderConstant.yyyymmdd")</descript>
      <descript sctype="string">$L.holiday.sql="holiday.tables=\""+holiday.table in $L.calendar+"\" and (end.date&gt;'"+date(tod())+"' or str.end.date&gt;\""+jscall("tzFunctions.convertDatetoString", tod(), $L.dateformat)+"\")"</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">build.holiday.array</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.x=lng($L.holiday.start)+1</descript>
      <descript sctype="string">$L.x in $L.holiday.start=start.date in $L.holiday</descript>
      <descript sctype="string">$L.x in $L.holiday.end=end.date in $L.holiday</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">$L.x=lng($L.holiday.start)+1</descript>
      <descript sctype="string">if (not null(noTimeZone in $L.holiday) and noTimeZone in $L.holiday) then ($L.x in $L.holiday.start=jscall("tzFunctions.convertStringtoDate", str.start.date in $L.holiday) - $L.osoffset - get.timezoneoffset();$L.x in $L.holiday.end=jscall("tzFunctions.convertStringtoDate", str.end.date in $L.holiday) - $L.osoffset - get.timezoneoffset()) else ($L.x in $L.holiday.start=start.date in $L.holiday;$L.x in $L.holiday.end=end.date in $L.holiday)</descript>
      <descript sctype="string">On panel="midnight", removed:</descript>
      <descript sctype="string">if ($L.days=0) then ($L.days=7)</descript>
      <descript sctype="string">On panel="midnight", changed the normal exit to check.reset.tz (to avoid having $EOW=$L.return after processing takes place on the midnight panel.</descript>
    </descript>
    <release type="string">SC6.1</release>
    <sysmodcount type="decimal">3</sysmodcount>
    <sysmoduser type="string">acorvino</sysmoduser>
    <sysmodtime type="dateTime">07/28/11 07:05:42</sysmodtime>
  </record>
</recordset>
