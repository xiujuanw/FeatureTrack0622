<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;us.link&quot;" recordid="us.link">
    <application.name type="string">us.link</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">09/04/18 19:59:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel check.addl.query.1, generate sql for related object query</rev.desc>
        </rev.desc>
        <change.no type="decimal">150005</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">02/10/18 19:46:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Rewrite SQL only for the first link line.</rev.desc>
          <rev.desc sctype="string">Change if (not null($L.reftable) or not null($L.variableReftable)) then</rev.desc>
          <rev.desc sctype="string">to if ($L.first.recurse and (not null($L.reftable) or not null($L.variableReftable))) then</rev.desc>
        </rev.desc>
        <change.no type="decimal">145267</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">07/28/16 12:23:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fix the issue of rescure fields for Logical Name issue.</rev.desc>
        </rev.desc>
        <change.no type="decimal">135340</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">02/01/16 06:51:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Add Sort Field/Order in Panel "select.records"</rev.desc>
        </rev.desc>
        <change.no type="decimal">106599</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">08/19/15 09:44:33</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">if $hp.sm.autocomplete.post.fil=true, use nullsub($L.reftable, $L.variableReftable) instead of $L.reftable to get target table's unique key</rev.desc>
        </rev.desc>
        <change.no type="decimal">127623</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">08/04/15 19:17:44</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Using a variable $hp.sm.autocomplete.post.fill to indicate if the "fill" action is from autocomplete, then decide the following logic. If "fill" action is from autocomplete, system will do an exact query against target table instead of performing the query defined in related linkline</rev.desc>
        </rev.desc>
        <change.no type="decimal">127053</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">07/14/15 20:54:05</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified panel eval.expressions and get.format.and.field to call RTE function set.display.value to set what uer inputs as display value for array type of reference fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">125453</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">06/21/15 13:07:38</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">06/14/15 08:03:10</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">optimized the performnce issue</rev.desc>
        </rev.desc>
        <change.no type="decimal">124123</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">06/14/15 07:58:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified "get.init.index" panel to make sure the reference table value is retrieved from datadict for those non-variable fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">124375</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">06/10/15 03:25:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified panel of "get.init.index". If $L.i~=0 and not null, to perform the following expression.</rev.desc>
        </rev.desc>
        <change.no type="decimal">124351</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">06/07/15 14:07:46</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Add new parameter $INTO.SKIPEXTFD for those features like "view affected service" to skip exact find(logical name solution).</rev.desc>
          <rev.desc sctype="string">For reference table fields, system will perform exact find rather than using link query if $INTO.SKIPEXTFD=false, otherwize will perform find by using link query</rev.desc>
        </rev.desc>
        <change.no type="decimal">121926</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">05/29/15 08:47:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">"Subscription Item" value is replaced with value for other field (last filled field) when creating Subscription Change.</rev.desc>
        </rev.desc>
        <change.no type="decimal">123655</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">05/26/15 15:37:09</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">05/26/15 15:29:07</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Story --add an option in the linkline to allow PSO to turn off the query rewrite, if user set $fill.skip.query.rewrite=true, system will not rewrite the query user defined</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhanzhen</rev.name>
        <rev.date type="dateTime">05/24/15 01:02:11</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SQL injection is found for the field [Affected Service] in interaction form</rev.desc>
        </rev.desc>
        <change.no type="decimal">122547</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">05/03/15 19:47:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added new panel eval.expression.1</rev.desc>
        </rev.desc>
        <change.no type="decimal">122821</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">04/16/15 08:25:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification for logical name feature to support variable</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">02/11/15 11:14:29</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification for logical name feature</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">yma2</rev.name>
        <rev.date type="dateTime">10/15/11 13:12:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">when query change or task, if profile has append.query, add append.query to query sql.</rev.desc>
        </rev.desc>
        <change.no type="decimal">66675</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">10/02/08 17:32:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Cleanup $fill.many variables.</rev.desc>
        </rev.desc>
        <change.no type="decimal">42044</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">09/05/08 00:13:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added the ability to control whether a fill search format appears in a new window using the $L.fill.search.window variable.</rev.desc>
        </rev.desc>
        <change.no type="decimal">42044</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">01/13/07 19:22:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed call to obsolete function current.window()</rev.desc>
        </rev.desc>
        <change.no type="decimal">885</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/27/06 13:11:41</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel reset.search.contents</rev.desc>
          <rev.desc sctype="string">Changed the normal exit to get.search.format</rev.desc>
          <rev.desc sctype="string">Added $L.window.open=true</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel no.related.records.1</rev.desc>
          <rev.desc sctype="string">Changed normal exit to reset.search.contents</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/27/06 13:09:51</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/16/06 15:45:55</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">05/07/06 10:53:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel get.search.format.1</rev.desc>
          <rev.desc sctype="string">Changed part of line 3 from:</rev.desc>
          <rev.desc sctype="string">type(evaluate($L.x in $L.i in project.source.fields in $L.link))~=8</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">not same(type(evaluate($L.x in $L.i in project.source.fields in $L.link) in $L.file),8)</rev.desc>
        </rev.desc>
        <change.no type="decimal">38155</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">04/07/06 13:23:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx ticket I0525:</rev.desc>
          <rev.desc sctype="string">added variable $fill.exit.  If this is set then the us.link application will exit with a 'no records found' message and not continue to any subsequent linklines or links.</rev.desc>
          <rev.desc sctype="string">updated the following panels:</rev.desc>
          <rev.desc sctype="string">start</rev.desc>
          <rev.desc sctype="string">check.recurse</rev.desc>
          <rev.desc sctype="string">fill.search.0</rev.desc>
          <rev.desc sctype="string">display.search.format.0</rev.desc>
          <rev.desc sctype="string">get.next.link</rev.desc>
        </rev.desc>
        <change.no type="decimal">525</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">08/03/05 11:50:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added/modified the following panels: display.search.format, display.search.format.1, decide.close.win, close.window, set.win.close.flg</rev.desc>
        </rev.desc>
        <change.no type="decimal">26698</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/28/05 19:00:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">I made the previous change, but don't know why it shows up as external.</rev.desc>
          <rev.desc sctype="string">joeh</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">external</rev.name>
        <rev.date type="dateTime">07/28/05 18:57:08</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed the fix for devtx ticket I2034</rev.desc>
          <rev.desc sctype="string">removed $L.x=1 from the fist line of eval.expressions</rev.desc>
        </rev.desc>
        <change.no type="decimal">36781</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">05/18/05 16:15:46</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx I1927 - reverted the change since it disable the auto time-fill for date/time columns in table objects</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">05/04/05 10:50:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Previous change was for DEVTX I1987</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">05/04/05 10:48:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified start panel so that it checks for  $G.bg:</rev.desc>
          <rev.desc sctype="string">Was:</rev.desc>
          <rev.desc sctype="string">$L.bg=nullsub($INTO.BG, false)</rev.desc>
          <rev.desc sctype="string">Changed to:</rev.desc>
          <rev.desc sctype="string">$L.bg=nullsub($INTO.BG, $G.bg);$L.bg=nullsub($L.bg, false)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">04/30/05 15:14:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx I1927 - removed auto-population of tod() stamp by removing the rtecall for FILLDATE from the check.date.expression panel, and by removing the check.date.field panel in its entirety.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">04/29/05 12:18:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added $L.x=1 to the fist line of eval.expressions as requested by Rifai for I2034 on Devtx.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/13/05 09:57:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added checks for $ variables when forming search formats.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">04/06/05 11:07:26</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx ticket I1575.  I undid the changes from below (devtx ticket I1496).  The line now reads:</rev.desc>
          <rev.desc sctype="string">for $L.x = 1 to lng(denull($L.i in project.source.fields in $L.link)) do (if ($L.field~="$L.struct.temp" and not same(evaluate($L.x in $L.i in project.target.fields in $L.link), $L.field) and  ...</rev.desc>
          <rev.desc sctype="string">It now also checks to see if $L.field is equal to $L.struct.temp.  If it is then the posting won't be done to the search screen.</rev.desc>
        </rev.desc>
        <change.no type="decimal">1575</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">04/02/05 08:22:27</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx ticket I1496</rev.desc>
          <rev.desc sctype="string">updated the get.search.format.1 panel</rev.desc>
          <rev.desc sctype="string">added a check to make sure that the value in the current project.target.fields in $L.link is not null before posting to the search screen.</rev.desc>
          <rev.desc sctype="string">expression now reads:</rev.desc>
          <rev.desc sctype="string">for $L.x = 1 to lng(denull($L.i in project.source.fields in $L.link)) do (if (not same(evaluate($L.x in $L.i in project.target.fields in $L.link), $L.field) and index($L.x in $L.i in project.source.fields in $L.link, $L.temp.fields)&gt;0 and not null(evaluate(1 in $L.i in project.target.fields in $L.link) in $L.file)) then (evaluate($L.x in $L.i in project.source.fields in $L.link) in $L.target=evaluate($L.x in $L.i in project.target.fields in $L.link) in $L.file))</rev.desc>
        </rev.desc>
        <change.no type="decimal">1496</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/26/05 19:08:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DEVTX I0986,</rev.desc>
          <rev.desc sctype="string">I changed the display.search.froamt.1 panel to exit to the exit.normal exit instead of the exit.menu exit.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">03/12/05 14:55:17</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed bug relating to using $variables that are arrays as the link from field.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">02/12/05 15:12:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DevTX ticket I0226.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Blank out the residual contact information (ie, residual from previous fills) on the following condition:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">. on an ESS process (ie, user logged in as an ESS user) AND</rev.desc>
          <rev.desc sctype="string">. the file being linked to is the contacts file AND</rev.desc>
          <rev.desc sctype="string">. the user has blanked out the field within the contacts file that they are searching</rev.desc>
        </rev.desc>
        <change.no type="decimal">226</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">02/01/05 18:30:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The $query variable was not always clean when coming into the us.link application.  This caused subsequent queries not to work.</rev.desc>
          <rev.desc sctype="string">start panel:  cleanup($query)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">01/29/05 17:36:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On check.recurse panel, added a check of $fill.list.return (which is set in RAD=us.fill.list) so that recursion is not performed if $fill.list was used for the link (which does not require a target field name to be populated on the link record). Cleanup of this variable was also added to the start panel.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">01/27/05 00:54:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed an error with using "fill all" in a recursive link.</rev.desc>
        </rev.desc>
        <change.no type="decimal">34867</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">01/15/05 13:52:06</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified so that only one "cannot find related information in xxx" message is sent if more than one link line is used.  Also will no longer send the message if information is found in another link line.  Also, only SysAdmin will see the query used.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">09/16/04 10:36:31</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR33087 task30362</rev.desc>
          <rev.desc sctype="string">Change start panel second line</rev.desc>
          <rev.desc sctype="string">From:</rev.desc>
          <rev.desc sctype="string">$L.field=$INTO.FIELD</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.field=$INTO.FIELD;$L.orig.into.field=$INTO.FIELD</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Change get.next.link panel</rev.desc>
          <rev.desc sctype="string">ADD to third line:</rev.desc>
          <rev.desc sctype="string">if ($L.field="$L.struct.temp") then ($L.i=index($L.orig.into.field, source.fields in $L.link, $L.next))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Change get.next.recurse panel</rev.desc>
          <rev.desc sctype="string">Change the second line:</rev.desc>
          <rev.desc sctype="string">From:</rev.desc>
          <rev.desc sctype="string">$L.field=$L.i in source.fields in $L.link</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.field=$L.i in source.fields in $L.link;$L.orig.into.field=$L.i in source.fields in $L.link</rev.desc>
        </rev.desc>
        <change.no type="decimal">33087</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">01/17/04 14:11:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx BUG11787</rev.desc>
          <rev.desc sctype="string">changed the condition for the check.date.expression exit on the check.link.line panel to ignore date processing if $fill.list was populated</rev.desc>
        </rev.desc>
        <change.no type="decimal">11787</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">01/15/04 20:23:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx BUG13064</rev.desc>
          <rev.desc sctype="string">changed the condition for eval.list on the decision panel check.link.line; this makes sure that the exit is not taken if the target field name is populated</rev.desc>
        </rev.desc>
        <change.no type="decimal">13064</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">01/06/04 18:58:17</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx BUG12653</rev.desc>
          <rev.desc sctype="string">panel:  get.next.link</rev.desc>
          <rev.desc sctype="string">cleanup($project.first)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.exact)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.replace)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.display)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.skip)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.option.copy)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.option.skip)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.structure)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.list)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.list.desc)</rev.desc>
          <rev.desc sctype="string">cleanup($find.skip)</rev.desc>
          <rev.desc sctype="string">cleanup($fill.date.calendar)</rev.desc>
        </rev.desc>
        <change.no type="decimal">12653</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">12/06/03 15:38:18</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx BUG11787</rev.desc>
          <rev.desc sctype="string">If $fill.list is used, added processing so that filename and target fields are not required (since they have no relevance).  Modified/new panels include check.link.line, eval.list, and decide.fill.list.</rev.desc>
        </rev.desc>
        <change.no type="decimal">11787</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">11/28/03 21:06:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">cleanup($fill.calendar.date)  Was added to the start panel for BUG11784 on devtx.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">09/07/03 16:03:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">updated the eval.expressions and check.link.line panels to take into consideration and evaluate any javascript in the link line.</rev.desc>
        </rev.desc>
        <change.no type="decimal">27543</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">09/07/03 10:21:26</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">05/11/03 10:53:06</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Put in support for new file/format structure of a link record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">01/28/03 15:20:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">When using $fill.search.format, only fields that exist on the search format itself (hidden or otherwise) will be projected into the current search file variable.  Therefore only those fields on the search format will be used in the query.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">01/22/03 20:26:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Moved the change for SCR1905 to us.fill</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">06/14/02 13:06:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">added a process panel before fill.search and before display.search.format.1 in order to maintain all the link record variables so that the original values would still be maintained after a subsequent call to us.link.</rev.desc>
        </rev.desc>
        <change.no type="decimal">22023</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">05/31/02 14:10:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">added panel eval.post.expressions to process the post expressions from the link record</rev.desc>
        </rev.desc>
        <change.no type="decimal">1905</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">03/21/02 14:00:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed set.calendar.date to only fill in $L.field if $fill.structure is null.</rev.desc>
        </rev.desc>
        <change.no type="decimal">18526</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">01/09/02 19:48:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Switched project.source.fields and project.target.fields in expression on display.search.format.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">12/12/01 03:32:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added a clear option to the fill search formats.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">11/21/01 14:10:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified so that hitting back from the recursive part of a fill will not return you to a search format.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">09/28/01 15:41:03</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed the check.recurse panel: Moved the line that exits to label get.next.recurse to AFTER the line that exits to get.next.link.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This is to fix a bug where when you execute the first link in a series of links and no match is found, it should NOT continue to attempt to execute the subsequent links. Before this change, it did continue executing the subsequent links even though the very first link was unsuccessful.</rev.desc>
        </rev.desc>
        <change.no type="decimal">12881</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">09/25/01 20:13:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">When using $fill.search.format, the fields from the link line are copied over to the search format.</rev.desc>
        </rev.desc>
        <change.no type="decimal">15834</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">09/12/01 13:04:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed problem caused by doing a fill where the field name was forced and not cursor.field.name().</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">09/01/01 15:55:03</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">In panel set.calendar.date, included a check for an array type so that a fill into the pop-up calendar will work for date/time arrays.</rev.desc>
        </rev.desc>
        <change.no type="decimal">15498</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/17/01 10:32:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Trying to perform a fill on a read only field will now cause a message stating that it can't be done.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/17/01 09:57:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified so that the cursor is returned to its original position on a find.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/04/01 16:05:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed a problem when doing a find on a structured array field.  $fill.structure should be cleaned up when doing a find.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/21/01 20:34:07</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added fill capability when using $fill.search.format.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">01/31/01 14:00:55</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed the refresh exit for non record list.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">10/14/00 09:49:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Replaced qbe panel with genquery.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/31/00 11:11:18</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added an initial search screen to the fill process when the $fill.search.format parameter is specified.</rev.desc>
        </rev.desc>
        <change.no type="decimal">3171</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/26/00 18:10:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Can now use the calendar widget on date fields that are part of a structured array.</rev.desc>
        </rev.desc>
        <change.no type="decimal">3162</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">07/23/00 12:00:01</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added in a condition to check for $fill.skip for date/time field in panel check.calendar.  Also added new panel skip.date.field to restore the old value if $fill.skip=true</rev.desc>
        </rev.desc>
        <change.no type="decimal">2929</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">06/25/00 16:29:48</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Variable $L.field.orig should be passed in the date rtecall instead of $L.cursor in panel check.date.field</rev.desc>
        </rev.desc>
        <change.no type="decimal">1958</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">05/26/00 16:22:55</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Took out the nullsub for tod() for the $L.cur.date variable in panel check.date.expression.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2316</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">03/08/00 19:50:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">If no records found it will now return $L.target to have NULL contents so that the next link line will be selected correctly.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2339</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">12/22/99 20:52:44</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added if (substr($L.qbe.format, 1, 1)="$") then ($L.qbe.format=evaluate(parse($L.qbe.format, 2))) to get.target.format panel to allow for the usage of a variable for the qbeformat name.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2041</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/10/99 20:01:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Change to support the new cursor.line return of 0 on a arrayed text field in gui (text box).</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/03/99 18:53:16</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Put a nullsub on the cursor.line() function of 0.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">12/11/98 17:51:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">scmsg</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">11/27/98 20:09:44</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Allow calendar functionality on $ fields.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">11/25/98 13:06:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added new calendar functionality to fill ($fill.date.calendar) and kept the date calculations from running on find.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">10/02/98 11:12:11</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Will skip $fill.list functionality if in gui and entry is already in list.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">09/27/98 09:47:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">fixed typo.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">09/18/98 09:50:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added a $find.skip parameter.</rev.desc>
        </rev.desc>
        <change.no type="decimal">11543</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">09/16/98 17:14:17</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">No change, recompile only.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">09/12/98 14:15:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Bypass date check when field is null or in background.</rev.desc>
        </rev.desc>
        <change.no type="decimal">11523</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/23/98 13:48:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed check.link to allow for a pre-initialized empty link record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/16/98 11:40:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added the us.fill.list functionality</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">07/25/98 17:22:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Redid support of variables to account for RTE changes.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">07/12/98 10:24:46</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added cleanup($File)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">07/05/98 10:06:33</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">update panel check.addl.query.1, generate sql for related object query</descript>
      <descript sctype="string">Rewrite SQL only for the first link line.</descript>
      <descript sctype="string">Change if (not null($L.reftable) or not null($L.variableReftable)) then</descript>
      <descript sctype="string">to if ($L.first.recurse and (not null($L.reftable) or not null($L.variableReftable))) then</descript>
      <descript sctype="string">Fix the issue of rescure fields for Logical Name issue.</descript>
      <descript sctype="string">Add Sort Field/Order in Panel "select.records"</descript>
      <descript sctype="string">if $hp.sm.autocomplete.post.fil=true, use nullsub($L.reftable, $L.variableReftable) instead of $L.reftable to get target table's unique key</descript>
      <descript sctype="string">Using a variable $hp.sm.autocomplete.post.fill to indicate if the "fill" action is from autocomplete, then decide the following logic. If "fill" action is from autocomplete, system will do an exact query against target table instead of performing the query defined in related linkline</descript>
      <descript sctype="string">Modified panel eval.expressions and get.format.and.field to call RTE function set.display.value to set what uer inputs as display value for array type of reference fields</descript>
      <descript sctype="string">Modified "get.init.index" panel to make sure the reference table value is retrieved from datadict for those non-variable fields</descript>
      <descript sctype="string">Modified panel of "get.init.index". If $L.i~=0 and not null, to perform the following expression.</descript>
      <descript sctype="string">Add new parameter $INTO.SKIPEXTFD for those features like "view affected service" to skip exact find(logical name solution).</descript>
      <descript sctype="string">For reference table fields, system will perform exact find rather than using link query if $INTO.SKIPEXTFD=false, otherwize will perform find by using link query</descript>
      <descript sctype="string">"Subscription Item" value is replaced with value for other field (last filled field) when creating Subscription Change.</descript>
      <descript sctype="string">Story --add an option in the linkline to allow PSO to turn off the query rewrite, if user set $fill.skip.query.rewrite=true, system will not rewrite the query user defined</descript>
      <descript sctype="string">SQL injection is found for the field [Affected Service] in interaction form</descript>
      <descript sctype="string">Added new panel eval.expression.1</descript>
      <descript sctype="string">Modification for logical name feature to support variable</descript>
      <descript sctype="string">Modification for logical name feature</descript>
      <descript sctype="string">when query change or task, if profile has append.query, add append.query to query sql.</descript>
      <descript sctype="string">Cleanup $fill.many variables.</descript>
      <descript sctype="string">Added the ability to control whether a fill search format appears in a new window using the $L.fill.search.window variable.</descript>
      <descript sctype="string">Removed call to obsolete function current.window()</descript>
      <descript sctype="string">Panel reset.search.contents</descript>
      <descript sctype="string">Changed the normal exit to get.search.format</descript>
      <descript sctype="string">Added $L.window.open=true</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel no.related.records.1</descript>
      <descript sctype="string">Changed normal exit to reset.search.contents</descript>
      <descript sctype="string">Panel reset.search.contents</descript>
      <descript sctype="string">Changed the normal exit to get.search.format</descript>
      <descript sctype="string">Panel get.search.format.1</descript>
      <descript sctype="string">Changed part of line 3 from:</descript>
      <descript sctype="string">type(evaluate($L.x in $L.i in project.source.fields in $L.link))~=8</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">not same(type(evaluate($L.x in $L.i in project.source.fields in $L.link) in $L.file),8)</descript>
      <descript sctype="string">devtx ticket I0525:</descript>
      <descript sctype="string">added variable $fill.exit.  If this is set then the us.link application will exit with a 'no records found' message and not continue to any subsequent linklines or links.</descript>
      <descript sctype="string">updated the following panels:</descript>
      <descript sctype="string">start</descript>
      <descript sctype="string">check.recurse</descript>
      <descript sctype="string">fill.search.0</descript>
      <descript sctype="string">display.search.format.0</descript>
      <descript sctype="string">get.next.link</descript>
      <descript sctype="string">Panel get.search.format.1</descript>
      <descript sctype="string">Changed part of line 3 from:</descript>
      <descript sctype="string">type(evaluate($L.x in $L.i in project.source.fields in $L.link))~=8</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">type(evaluate($L.x in $L.i in project.source.fields in $L.link) in $L.file)~=8</descript>
      <descript sctype="string">Added/modified the following panels: display.search.format, display.search.format.1, decide.close.win, close.window, set.win.close.flg</descript>
      <descript sctype="string">I made the previous change, but don't know why it shows up as external.</descript>
      <descript sctype="string">joeh</descript>
      <descript sctype="string">Removed the fix for devtx ticket I2034</descript>
      <descript sctype="string">removed $L.x=1 from the fist line of eval.expressions</descript>
      <descript sctype="string">devtx I1927 - reverted the change since it disable the auto time-fill for date/time columns in table objects</descript>
      <descript sctype="string">Previous change was for DEVTX I1987</descript>
      <descript sctype="string">Modified start panel so that it checks for  $G.bg:</descript>
      <descript sctype="string">Was:</descript>
      <descript sctype="string">$L.bg=nullsub($INTO.BG, false)</descript>
      <descript sctype="string">Changed to:</descript>
      <descript sctype="string">$L.bg=nullsub($INTO.BG, $G.bg);$L.bg=nullsub($L.bg, false)</descript>
      <descript sctype="string">Removed auto-population of tod() stamp by removing the rtecall for FILLDATE from the check.date.expression panel, and by removing the check.date.field panel in its entirety.</descript>
      <descript sctype="string">Added $L.x=1 to the fist line of eval.expressions as requested by Rifai for I2034 on Devtx.</descript>
      <descript sctype="string">Added checks for $ variables when forming search formats.</descript>
      <descript sctype="string">devtx ticket I1575.  I undid the changes from below (devtx ticket I1496).  The line now reads:</descript>
      <descript sctype="string">for $L.x = 1 to lng(denull($L.i in project.source.fields in $L.link)) do (if ($L.field~="$L.struct.temp" and not same(evaluate($L.x in $L.i in project.target.fields in $L.link), $L.field) and  ...</descript>
      <descript sctype="string">It now also checks to see if $L.field is equal to $L.struct.temp.  If it is then the posting won't be done to the search screen.</descript>
      <descript sctype="string">devtx ticket I1496</descript>
      <descript sctype="string">updated the get.search.format.1 panel</descript>
      <descript sctype="string">added a check to make sure that the value in the current project.target.fields in $L.link is not null before posting to the search screen.</descript>
      <descript sctype="string">expression now reads:</descript>
      <descript sctype="string">for $L.x = 1 to lng(denull($L.i in project.source.fields in $L.link)) do (if (not same(evaluate($L.x in $L.i in project.target.fields in $L.link), $L.field) and index($L.x in $L.i in project.source.fields in $L.link, $L.temp.fields)&gt;0 and not null(evaluate(1 in $L.i in project.target.fields in $L.link) in $L.file)) then (evaluate($L.x in $L.i in project.source.fields in $L.link) in $L.target=evaluate($L.x in $L.i in project.target.fields in $L.link) in $L.file))</descript>
      <descript sctype="string">DEVTX I0986,</descript>
      <descript sctype="string">I changed the display.search.froamt.1 panel to exit to the exit.normal exit instead of the exit.menu exit.</descript>
      <descript sctype="string">Fixed bug relating to using $variables that are arrays as the link from field.</descript>
      <descript sctype="string">Modification made for DevTX ticket I0226.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Blank out the residual contact information (ie, residual from previous fills) on the following condition:</descript>
      <descript sctype="string"/>
      <descript sctype="string">. on an ESS process (ie, user logged in as an ESS user) AND</descript>
      <descript sctype="string">. the file being linked to is the contacts file AND</descript>
      <descript sctype="string">. the user has blanked out the field within the contacts file that they are searching</descript>
      <descript sctype="string">The $query variable was not always clean when coming into the us.link application.  This caused subsequent queries not to work.</descript>
      <descript sctype="string">start panel:  cleanup($query)</descript>
      <descript sctype="string">On check.recurse panel, added a check of $fill.list.return (which is set in RAD=us.fill.list) so that recursion is not performed if $fill.list was used for the link (which does not require a target field name to be populated on the link record). Cleanup of this variable was also added to the start panel.</descript>
      <descript sctype="string">Fixed an error with using "fill all" in a recursive link.</descript>
      <descript sctype="string">Modified so that only one "cannot find related information in xxx" message is sent if more than one link line is used.  Also will no longer send the message if information is found in another link line.  Also, only SysAdmin will see the query used.</descript>
      <descript sctype="string">SCR33087 task30362</descript>
      <descript sctype="string">Change start panel second line</descript>
      <descript sctype="string">From:</descript>
      <descript sctype="string">$L.field=$INTO.FIELD</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.field=$INTO.FIELD;$L.orig.into.field=$INTO.FIELD</descript>
      <descript sctype="string"/>
      <descript sctype="string">Change get.next.link panel</descript>
      <descript sctype="string">ADD to third line:</descript>
      <descript sctype="string">if ($L.field="$L.struct.temp") then ($L.i=index($L.orig.into.field, source.fields in $L.link, $L.next))</descript>
      <descript sctype="string"/>
      <descript sctype="string">Change get.next.recurse panel</descript>
      <descript sctype="string">Change the second line:</descript>
      <descript sctype="string">From:</descript>
      <descript sctype="string">$L.field=$L.i in source.fields in $L.link</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.field=$L.i in source.fields in $L.link;$L.orig.into.field=$L.i in source.fields in $L.link</descript>
      <descript sctype="string">devtx BUG11787</descript>
      <descript sctype="string">changed the condition for the check.date.expression exit on the check.link.line panel to ignore date processing if $fill.list was populated</descript>
      <descript sctype="string">devtx BUG13064</descript>
      <descript sctype="string">changed the condition for eval.list on the decision panel check.link.line; this makes sure that the exit is not taken if the target field name is populated</descript>
      <descript sctype="string">devtx BUG12653</descript>
      <descript sctype="string">panel:  get.next.link</descript>
      <descript sctype="string">cleanup($project.first)</descript>
      <descript sctype="string">cleanup($fill.exact)</descript>
      <descript sctype="string">cleanup($fill.replace)</descript>
      <descript sctype="string">cleanup($fill.display)</descript>
      <descript sctype="string">cleanup($fill.skip)</descript>
      <descript sctype="string">cleanup($fill.option.copy)</descript>
      <descript sctype="string">cleanup($fill.option.skip)</descript>
      <descript sctype="string">cleanup($fill.structure)</descript>
      <descript sctype="string">cleanup($fill.list)</descript>
      <descript sctype="string">cleanup($fill.list.desc)</descript>
      <descript sctype="string">cleanup($find.skip)</descript>
      <descript sctype="string">cleanup($fill.date.calendar)</descript>
      <descript sctype="string">devtx BUG11787</descript>
      <descript sctype="string">If $fill.list is used, added processing so that filename and target fields are not required (since they have no relevance).  Modified/new panels include check.link.line, eval.list, and decide.fill.list.</descript>
      <descript sctype="string">cleanup($fill.calendar.date)  Was added to the start panel for BUG11784 on devtx.</descript>
      <descript sctype="string">updated the eval.expressions and check.link.line panels to take into consideration and evaluate any javascript in the link line.</descript>
      <descript sctype="string">Put in support for new file/format structure of a link record.</descript>
      <descript sctype="string">When using $fill.search.format, only fields that exist on the search format itself (hidden or otherwise) will be projected into the current search file variable.  Therefore only those fields on the search format will be used in the query.</descript>
      <descript sctype="string">Moved the change for SCR1905 to us.fill</descript>
      <descript sctype="string">added a process panel before fill.search and before display.search.format.1 in order to maintain all the link record variables so that the original values would still be maintained after a subsequent call to us.link.</descript>
      <descript sctype="string">added panel eval.post.expressions to process the post expressions from the link record</descript>
      <descript sctype="string">Fixed set.calendar.date to only fill in $L.field if $fill.structure is null.</descript>
      <descript sctype="string">Switched project.source.fields and project.target.fields in expression on display.search.format.</descript>
      <descript sctype="string">Added a clear option to the fill search formats.</descript>
      <descript sctype="string">Modified so that hitting back from the recursive part of a fill will not return you to a search format.</descript>
      <descript sctype="string">Changed the check.recurse panel: Moved the line that exits to label get.next.recurse to AFTER the line that exits to get.next.link.</descript>
      <descript sctype="string"/>
      <descript sctype="string">This is to fix a bug where when you execute the first link in a series of links and no match is found, it should NOT continue to attempt to execute the subsequent links. Before this change, it did continue executing the subsequent links even though the very first link was unsuccessful.</descript>
      <descript sctype="string">When using $fill.search.format, the fields from the link line are copied over to the search format.</descript>
      <descript sctype="string">Fixed problem caused by doing a fill where the field name was forced and not cursor.field.name().</descript>
      <descript sctype="string">In panel set.calendar.date, included a check for an array type so that a fill into the pop-up calendar will work for date/time arrays.</descript>
      <descript sctype="string">Trying to perform a fill on a read only field will now cause a message stating that it can't be done.</descript>
      <descript sctype="string">Modified so that the cursor is returned to its original position on a find.</descript>
      <descript sctype="string">Fixed a problem when doing a find on a structured array field.  $fill.structure should be cleaned up when doing a find.</descript>
      <descript sctype="string">Added fill capability when using $fill.search.format.</descript>
      <descript sctype="string">Fixed the refresh exit for non record list.</descript>
      <descript sctype="string">Replaced qbe panel with genquery.</descript>
      <descript sctype="string">Added an initial search screen to the fill process when the $fill.search.format parameter is specified.</descript>
      <descript sctype="string">Can now use the calendar widget on date fields that are part of a structured array.</descript>
      <descript sctype="string">Added in a condition to check for $fill.skip for date/time field in panel check.calendar.  Also added new panel skip.date.field to restore the old value if $fill.skip=true</descript>
      <descript sctype="string">Variable $L.field.orig should be passed in the date rtecall instead of $L.cursor in panel check.date.field</descript>
      <descript sctype="string">Took out the nullsub for tod() for the $L.cur.date variable in panel check.date.expression.</descript>
      <descript sctype="string">If no records found it will now return $L.target to have NULL contents so that the next link line will be selected correctly.</descript>
      <descript sctype="string">Added if (substr($L.qbe.format, 1, 1)="$") then ($L.qbe.format=evaluate(parse($L.qbe.format, 2))) to get.target.format panel to allow for the usage of a variable for the qbeformat name.</descript>
      <descript sctype="string">Change to support the new cursor.line return of 0 on a arrayed text field in gui (text box).</descript>
      <descript sctype="string">Put a nullsub on the cursor.line() function of 0.</descript>
      <descript sctype="string">scmsg</descript>
      <descript sctype="string">Allow calendar functionality on $ fields.</descript>
      <descript sctype="string">Added new calendar functionality to fill ($fill.date.calendar) and kept the date calculations from running on find.</descript>
      <descript sctype="string">Will skip $fill.list functionality if in gui and entry is already in list.</descript>
      <descript sctype="string">fixed typo.</descript>
      <descript sctype="string">Added a $find.skip parameter.</descript>
      <descript sctype="string">No change, recompile only.</descript>
      <descript sctype="string">Bypass date check when field is null or in background.</descript>
      <descript sctype="string">Fixed check.link to allow for a pre-initialized empty link record.</descript>
      <descript sctype="string">Added the us.fill.list functionality</descript>
      <descript sctype="string">Redid support of variables to account for RTE changes.</descript>
      <descript sctype="string">Added cleanup($File)</descript>
    </descript>
    <release type="string">A9801 GA</release>
    <sysmodcount type="decimal">0</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:44:57</sysmodtime>
  </record>
</recordset>
