<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;login&quot;" recordid="login">
    <application.name type="string">login</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">06/10/19 17:46:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">add panel decide.mail</rev.desc>
        </rev.desc>
        <change.no type="decimal">152295</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">09/09/14 10:01:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SRC should have more friendly message when operator reach "Max logins" limit</rev.desc>
          <rev.desc sctype="string">Modify panel:check.exit.code</rev.desc>
          <rev.desc sctype="string">add condition : $exit.code=7 and G.bg</rev.desc>
          <rev.desc sctype="string">add exit:  msg.login.max</rev.desc>
          <rev.desc sctype="string">Modify panel: msg.attempt.max</rev.desc>
          <rev.desc sctype="string">revert changes</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add new panel:</rev.desc>
          <rev.desc sctype="string">msg.login.max</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add statement:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if $L.bg then ( $L.void = setLoginError("6", $L.gen.ms))</rev.desc>
        </rev.desc>
        <change.no type="decimal">115171</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">09/08/14 09:17:43</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SRC should have more friendly message when operator reach "Max logins" limit</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modify panel: msg.attempt.max</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add statement:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if $L.bg then ( $L.void = setLoginError("6", $L.gen.ms))</rev.desc>
        </rev.desc>
        <change.no type="decimal">115171</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">06/11/14 02:38:06</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Memory leak shows on Hummer when running security folder related case</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modify panel: set.new.password</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add value: $L.return.action to field: return action</rev.desc>
        </rev.desc>
        <change.no type="decimal">110729</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">03/17/14 00:07:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Unrecoverable error when we reset the password</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Change panel:</rev.desc>
          <rev.desc sctype="string">set.new.password.check.bg</rev.desc>
          <rev.desc sctype="string">add conditional branch:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.bg and $G.resetpwd.flag   exit.normal</rev.desc>
        </rev.desc>
        <change.no type="decimal">106015</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">03/09/14 21:29:32</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SRC users need be able to change their password after the password expires</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Change panel: msg.password.expired</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">From :</rev.desc>
          <rev.desc sctype="string">if $L.bg  then ($L.void=setLoginError("5", $L.gen.ms))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">if ($L.bg and nullsub($G.resetpwd.flag, false)=false) then ($L.void=setLoginError("5", $L.gen.ms))</rev.desc>
        </rev.desc>
        <change.no type="decimal">105358</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">dengxin</rev.name>
        <rev.date type="dateTime">06/03/13 02:14:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">invoke RTE new function setLoginError for  password expired, and will stop invoke web service or reset password for background login.</rev.desc>
        </rev.desc>
        <change.no type="decimal">95006</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date type="dateTime">05/29/13 11:49:33</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Rollback the code for 76227</rev.desc>
        </rev.desc>
        <change.no type="decimal">92408</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date type="dateTime">05/06/13 05:33:45</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">1.change exit for panel: reset.bypass.name  from : check.exit.code to log.errorlogin</rev.desc>
          <rev.desc sctype="string">2.add new panel: log.errorlogin</rev.desc>
        </rev.desc>
        <change.no type="decimal">32251</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date type="dateTime">07/14/12 01:18:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">recompile</rev.desc>
        </rev.desc>
        <change.no type="decimal">71215</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date type="dateTime">07/14/12 00:44:32</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">1) panel:logon</rev.desc>
          <rev.desc sctype="string">add 1 line: $L.authMode=nullsub(sysinfo.get("AuthMode"), "db")</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">2) panel: check.password</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">the condition for msg.password.expired</rev.desc>
          <rev.desc sctype="string">changed from</rev.desc>
          <rev.desc sctype="string">expire.password in $operator=true and not nullsub(never.expire.pass in $operator, false)</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">expire.password in $operator=true and not nullsub(never.expire.pass in $operator, false) and $L.authMode="db"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add one condidtion:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">set.fc.query   -&gt; $L.authMode~="db"</rev.desc>
        </rev.desc>
        <change.no type="decimal">71215</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Weihua</rev.name>
        <rev.date type="dateTime">05/29/12 19:28:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modifield panel=init.name to remove the variable $L.language</rev.desc>
          <rev.desc sctype="string">Modified panel=setup.language to simplify the code and delete the duplicates</rev.desc>
        </rev.desc>
        <change.no type="decimal">76227</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">04/13/12 09:50:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Allow configuration of separator character to use on number fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">72626</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">03/05/12 20:40:08</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Allow configuration of separator character to use on number fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">72626</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">02/12/12 19:41:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Allow configuration of separator character to use on number fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">72626</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">03/25/11 15:45:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QCRQ1E57546 WS login may pass the language to the RTE which set the language.  We need to have the language code set in $G.my.language</rev.desc>
        </rev.desc>
        <change.no type="decimal">57546</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">02/05/11 18:48:41</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">02/05/11 18:44:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The login application does not need to setup a menu for a Web Service user in ESS mode</rev.desc>
        </rev.desc>
        <change.no type="decimal">61081</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">02/04/11 17:09:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The RTE now performs the check to validate that the ESS user is using the ESS URL</rev.desc>
        </rev.desc>
        <change.no type="decimal">60963</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mhuang</rev.name>
        <rev.date type="dateTime">01/29/11 06:53:57</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mhuang</rev.name>
        <rev.date type="dateTime">01/27/11 08:20:39</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">01/27/11 07:17:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">ReqID: 55666</rev.desc>
          <rev.desc sctype="string">Globallist improvement during login.</rev.desc>
          <rev.desc sctype="string">Remove duplicate calls to apm.global.initer for lists Languages Supported, Operators</rev.desc>
          <rev.desc sctype="string">§ In login app on panel get.list.1 it sets up lists that were needed on old login forms. These are no longer needed and should be removed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">55666</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">12/10/10 23:33:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QC ReqId: 53652 - Set and use $lo.operator throughout the application instead of selecting operator record repeatedly.</rev.desc>
          <rev.desc sctype="string">*panel 'init.name':</rev.desc>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string">$user.id=""</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'init.operator':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'setup.logon':</rev.desc>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string">operator()=$user.id</rev.desc>
          <rev.desc sctype="string">Replaced $operator with $lo.operator</rev.desc>
          <rev.desc sctype="string">user.login.count in $lo.operator=nullsub(user.login.count in $lo.operator, 0)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'set.operator':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string">name in $lo.operator=$USER.NAME</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'qbe.operator':</rev.desc>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string">name in $operator=$user.id</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string">password in $lo.operator=$old.password</rev.desc>
          <rev.desc sctype="string">operator()=nullsub(name in $lo.operator, "NULL")</rev.desc>
          <rev.desc sctype="string">printer()=Printer in $lo.operator</rev.desc>
          <rev.desc sctype="string">$safpswd=password in $lo.operator</rev.desc>
          <rev.desc sctype="string">$safuser=name in $lo.operator</rev.desc>
          <rev.desc sctype="string">$pw.save=nullsub(password in $lo.operator, str(tod()))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'select.operator':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'check.entry.point':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string">$L.ess.only=nullsub(ess.access.only in $lo.operator, false)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'setup.language':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string">if (same(NULL, $L.language) and same(NULL, syslanguage in $lo.operator)) then ($L.language=sysinfo.get("languagecode"))</rev.desc>
          <rev.desc sctype="string">$L.language=nullsub($L.language, nullsub(syslanguage in $lo.operator, nullsub(syslanguage in $G.system.info, "en")))</rev.desc>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string">operator()=name in $operator</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'setup.globals':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'logon':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string">if null(printer()) then (printer()=nullsub(Printer in $lo.operator, "sysprint"))</rev.desc>
          <rev.desc sctype="string">user.login.count in $operator=nullsub(user.login.count in $lo.operator, 0)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'check.password':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
          <rev.desc sctype="string">expire.password in $lo.operator=true and not nullsub(never.expire.pass in $lo.operator, false)</rev.desc>
          <rev.desc sctype="string">use.max.pwd.life in $G.system.info="logins" and max.life.by.logins in $G.system.info&gt;user.login.count in $lo.operator</rev.desc>
          <rev.desc sctype="string">use.max.pwd.life in $G.system.info="time" and password.date in $G.system.info&gt;=tod() - password.date in $lo.operator</rev.desc>
          <rev.desc sctype="string">password in $lo.operator="SAF"</rev.desc>
          <rev.desc sctype="string">nullsub(never.expire.pass in $lo.operator, false)=true</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'cleanup':</rev.desc>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string">cleanup($operator)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*panel 'format.cadd':</rev.desc>
          <rev.desc sctype="string">Changed $operator to $lo.operator</rev.desc>
        </rev.desc>
        <change.no type="decimal">53652</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mhuang</rev.name>
        <rev.date type="dateTime">12/09/10 06:26:16</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">change $info.comp to $G.system.info, except clean($info.comp)</rev.desc>
          <rev.desc sctype="string">setup.globals calls set.login.globalvars</rev.desc>
        </rev.desc>
        <change.no type="decimal">53651</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">01/07/09 12:36:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Adds a call to sysinfo.get("languagecode") in setup.language in the case that $L.language and the operator's language are both null.</rev.desc>
        </rev.desc>
        <change.no type="decimal">40526</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">10/10/08 00:29:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Force users who reset their passwords to re-login.(DE3854)</rev.desc>
        </rev.desc>
        <change.no type="decimal">3854</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">09/10/08 20:46:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed updates to the operator record.  This is handled by the RTE.</rev.desc>
          <rev.desc sctype="string">Removed code associated with SAF and RACF.</rev.desc>
          <rev.desc sctype="string">Removed checks for $disallow and 2 in version().</rev.desc>
          <rev.desc sctype="string">Fixed message used for $L.quiesce.msg</rev.desc>
        </rev.desc>
        <change.no type="decimal">42053</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">05/30/07 12:30:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Recompile to fix parameters</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">05/27/07 13:11:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed unneccesary line of code.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">01/16/07 15:39:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed obsolete panel safuser</rev.desc>
        </rev.desc>
        <change.no type="decimal">885</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/24/06 15:12:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel init.name</rev.desc>
          <rev.desc sctype="string">Removed: $L.void=fduplicate($G.system.info, $info.comp)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">05/10/06 12:50:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed logon panel of the login application</rev.desc>
          <rev.desc sctype="string">From:</rev.desc>
          <rev.desc sctype="string">message.flag in $operator=nullsub(message.flag in $operator, message.flag in $info.comp)</rev.desc>
          <rev.desc sctype="string">message.count in $operator=nullsub(message.count in $operator, message.count in $info.comp)</rev.desc>
          <rev.desc sctype="string">message.count in $operator=nullsub(message.count in $operator, 0)</rev.desc>
          <rev.desc sctype="string">if (message.flag in $operator=true) then if (message.count in $operator&gt;0) then ($messages=messages(0, message.count in $operator);$messages=messages(1))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$messages=messages(0, 100);$messages=messages(1)</rev.desc>
        </rev.desc>
        <change.no type="decimal">31496</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">08/11/05 07:56:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">CP SCR37054</rev.desc>
          <rev.desc sctype="string">Panel:  get.list</rev.desc>
          <rev.desc sctype="string">updated $L.list to include the 'Operators' globallist</rev.desc>
          <rev.desc sctype="string">$L.list={"Languages Supported", "Operators"}</rev.desc>
        </rev.desc>
        <change.no type="decimal">37054</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/03/05 14:59:36</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Returned back to condition prior to previous changes.</rev.desc>
        </rev.desc>
        <change.no type="decimal">31496</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/17/05 16:21:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">login panel of login application:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string">$messages=messages(3)</rev.desc>
          <rev.desc sctype="string">$messages=messages(1)</rev.desc>
          <rev.desc sctype="string">cleanup($messages)</rev.desc>
          <rev.desc sctype="string">message.flag in $operator=nullsub(message.flag in $operator, message.flag in $info.comp)</rev.desc>
          <rev.desc sctype="string">message.count in $operator=nullsub(message.count in $operator, message.count in $info.comp)</rev.desc>
          <rev.desc sctype="string">message.count in $operator=nullsub(message.count in $operator, 0)</rev.desc>
          <rev.desc sctype="string">if (message.flag in $operator=true) then if (message.count in $operator&gt;0) then ($messages=messages(0, message.count in $operator);$messages=messages(1))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">logoff panel of login application:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string">$messages=messages(2)</rev.desc>
          <rev.desc sctype="string">$messages=messages(5, 0)</rev.desc>
          <rev.desc sctype="string">$messages=messages(3)</rev.desc>
          <rev.desc sctype="string">$messages=messages(4)</rev.desc>
          <rev.desc sctype="string">cleanup($messages)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">qbe.operator panel of login application:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Removed:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$messages=messages(0, 5)</rev.desc>
          <rev.desc sctype="string">$messages=messages(1)</rev.desc>
        </rev.desc>
        <change.no type="decimal">31496</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ausman</rev.name>
        <rev.date type="dateTime">04/14/05 12:56:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added user self registration, login rad app now displays ess.register app to allow user to enter in data.  This shows ess.self.register form and registers using "Self-Service" javascript code.</rev.desc>
        </rev.desc>
        <change.no type="decimal">602</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">03/09/05 18:02:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Moved ESS check to before the login form is displayed.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/19/05 12:50:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed "Operators" from global lists to be fetched.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">02/11/05 01:24:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DevTx ticket I0235.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Enabled the capability to allow the user to specify that their initial application to be displayed is the ESS menu.</rev.desc>
        </rev.desc>
        <change.no type="decimal">235</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">01/26/05 15:57:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">(No SCR---Done during SC61 stabilization iteration)</rev.desc>
          <rev.desc sctype="string">Modification made to the cleanup panel so that if it is an ESS user logging in, and neither the ESS menu nor the ESS option is specified on the operator record, they get defaulted to ESSSM and option 1 (Submit a Request), respectively.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/26/04 14:24:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Previous change was for SCR 15863, task 19044 not a shown below.</rev.desc>
        </rev.desc>
        <change.no type="decimal">15863</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/26/04 13:46:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">operator()=name in $operator  was added to setup.language panel so if a mixed case password is entered at login, then it will default to the value in the operator record. SCR 31101, task 29445</rev.desc>
        </rev.desc>
        <change.no type="decimal">31101</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/21/04 15:57:43</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Update to change below.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/21/04 11:28:23</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">RAD change login app:
On the check.password  panel change the first condition:
From :
expire.password in $operator=true
To:
expire.password in $operator=true and not never.expire.pass


The dbdict change:
Add new logical field never.expire.pass

Format Change:
Add check box Never Expire Password.

I also added an exit to set.last.login if never.expire.pass=true that way it will not call the password reset applictaion in the foreground.</rev.desc>
        </rev.desc>
        <change.no type="decimal">24969</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">06/25/04 16:35:58</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added the following process line to the set.last.login panel:</rev.desc>
          <rev.desc sctype="string">$login.fc.qry="name=\"login."+operator()+"\""</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed the query on the get.fc panel to:</rev.desc>
          <rev.desc sctype="string">$login.fc.qry</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">On the qbe.operator panel, changed the following process line from:</rev.desc>
          <rev.desc sctype="string">$login.query="name=operator()"</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">$login.query="name=\""+operator()+"\""</rev.desc>
        </rev.desc>
        <change.no type="decimal">22482</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/14/04 13:06:08</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified so that SOAP API has a different path then trusted signon.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/05/04 16:21:27</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed references to pfmap() and calles to set.fixed.keys application.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/05/04 16:15:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On quiesce.check the order of operators has been reversed to improve performance.</rev.desc>
        </rev.desc>
        <change.no type="decimal">29404</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">01/08/04 22:05:32</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Avoid going to menu manager when using Open API interface.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">11/27/03 17:50:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added password parameter for Open API interface.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">09/05/02 14:45:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added support for setting $G.multi based on the multi.company field in the info record.  login.DEFAULT format control will still be able to override this setting.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">09/05/02 13:28:33</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Setup a global variable copy of the info record for system information (System Information Record) - $G.system.info</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/26/02 13:38:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed 4th condition on check.password to fix a problem with not setting the expiration conditions correctly?</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">02/26/02 13:25:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified the message numbers as per betatrak IM00013.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">11/03/01 18:12:13</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified to check if the expire.password is set.  If so, it will force the user to change their password when login in.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">09/07/01 12:41:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">User Locking Information doesn't update when a user changes from Inactive to Expired.  Updated the login application to make the correct change.  ST18274</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">09/05/01 14:42:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">It was exiting the login application due to the max login attemts number being met.  I modified it so that it checks first for lockouts, and once that info has been set, it will check for max login attempts.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">09/02/01 14:06:36</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Moved all related language settings from qbe.operator to a new panel setup.language</rev.desc>
        </rev.desc>
        <change.no type="decimal">15536</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/16/01 12:23:20</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">recompiled after fixing database errors.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">06/10/01 13:19:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changes to update operator record with lock.until date when a user is locked out for failed attemts.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">06/03/01 12:16:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changes made to send messages to log when login attempt is failed.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">05/04/01 14:56:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Sets $G.bg=false</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">02/14/01 15:05:43</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Case insensitivity problem fixes.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">01/08/00 12:31:18</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Do not error out if apm.global.initer fails.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2096</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">11/16/99 14:19:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">No changes, modified set.login.globalvars to set $G.max.attach.size.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">07/10/99 14:10:13</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">modified qbe.operator to not set $L.language if login.prompt is bypassed. And to only send Language to the server is $L.language is not null.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">06/18/99 08:35:43</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">06/18/99 08:19:33</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">jfiles</rev.name>
        <rev.date type="dateTime">05/14/99 14:34:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified qbe.operator:  Set user's language to first found of: entered on screen, company default, english.  Also, set $G.my.language to which of those three were selected, rather than only setting it when the op picked one themselves.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">jfiles</rev.name>
        <rev.date type="dateTime">03/18/99 16:52:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified: build the $G.language* lists for text as</rev.desc>
          <rev.desc sctype="string">well; give them the list on the screen.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">01/27/99 18:35:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Default the System Language to the language in the info.company record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">01/22/99 17:55:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Casual users can now change their password if it has expired.</rev.desc>
        </rev.desc>
        <change.no type="decimal">1036</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">01/22/99 15:43:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">sets up english as "en" instead of null</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">01/12/99 16:11:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">sets up language at login</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">12/22/98 17:25:20</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Sets the $G.root.currency variable based on the company record. Default is "USD" (US Dollar)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">12/03/98 12:56:07</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed the parameter value passed into password.change on panel set.new.password to $old.password instead of password in $operator so that if securepassword is set it will work.</rev.desc>
        </rev.desc>
        <change.no type="decimal">803</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">10/27/98 19:32:43</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Check USER not ALL on quiesce check.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">10/11/98 13:03:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added quiesce check before logout.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/30/98 12:38:03</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed $L.login.good statements and subroutined saf messages.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">06/17/98 12:41:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added a flag to allow use of old pre9802 printing routines.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">jgage</rev.name>
        <rev.date type="dateTime">09/20/95 13:29:12</rev.date>
        <rev.desc sctype="array"/>
        <change.no type="decimal">6814</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">jgage</rev.name>
        <rev.date type="dateTime">09/16/95 11:16:57</rev.date>
        <rev.desc sctype="array"/>
        <change.no type="decimal">68778</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">jgage</rev.name>
        <rev.date type="dateTime">09/16/95 11:02:18</rev.date>
        <rev.desc sctype="array"/>
        <change.no type="decimal">67995</change.no>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">add panel decide.mail</descript>
      <descript sctype="string">SRC should have more friendly message when operator reach "Max logins" limit</descript>
      <descript sctype="string">Modify panel:check.exit.code</descript>
      <descript sctype="string">add condition : $exit.code=7 and G.bg</descript>
      <descript sctype="string">add exit:  msg.login.max</descript>
      <descript sctype="string">Modify panel: msg.attempt.max</descript>
      <descript sctype="string">revert changes</descript>
      <descript sctype="string"/>
      <descript sctype="string">add new panel:</descript>
      <descript sctype="string">msg.login.max</descript>
      <descript sctype="string"/>
      <descript sctype="string">add statement:</descript>
      <descript sctype="string"/>
      <descript sctype="string">if $L.bg then ( $L.void = setLoginError("6", $L.gen.ms))</descript>
      <descript sctype="string">SRC should have more friendly message when operator reach "Max logins" limit</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modify panel: msg.attempt.max</descript>
      <descript sctype="string"/>
      <descript sctype="string">add statement:</descript>
      <descript sctype="string"/>
      <descript sctype="string">if $L.bg then ( $L.void = setLoginError("6", $L.gen.ms))</descript>
      <descript sctype="string">Memory leak shows on Hummer when running security folder related case</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modify panel: set.new.password</descript>
      <descript sctype="string"/>
      <descript sctype="string">add value: $L.return.action to field: return action</descript>
      <descript sctype="string">Unrecoverable error when we reset the password</descript>
      <descript sctype="string"/>
      <descript sctype="string">Change panel:</descript>
      <descript sctype="string">set.new.password.check.bg</descript>
      <descript sctype="string">add conditional branch:</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.bg and $G.resetpwd.flag   exit.normal</descript>
      <descript sctype="string">SRC users need be able to change their password after the password expires</descript>
      <descript sctype="string"/>
      <descript sctype="string">Change panel: msg.password.expired</descript>
      <descript sctype="string"/>
      <descript sctype="string">From :</descript>
      <descript sctype="string">if $L.bg  then ($L.void=setLoginError("5", $L.gen.ms))</descript>
      <descript sctype="string"/>
      <descript sctype="string">To:</descript>
      <descript sctype="string">if ($L.bg and nullsub($G.resetpwd.flag, false)=false) then ($L.void=setLoginError("5", $L.gen.ms))</descript>
      <descript sctype="string">invoke RTE new function setLoginError for  password expired, and will stop invoke web service or reset password for background login.</descript>
      <descript sctype="string">Rollback the code for 76227</descript>
      <descript sctype="string">1.change exit for panel: reset.bypass.name  from : check.exit.code to log.errorlogin</descript>
      <descript sctype="string">2.add new panel: log.errorlogin</descript>
      <descript sctype="string">recompile</descript>
      <descript sctype="string">1) panel:logon</descript>
      <descript sctype="string">add 1 line: $L.authMode=nullsub(sysinfo.get("AuthMode"), "db")</descript>
      <descript sctype="string"/>
      <descript sctype="string">2) panel: check.password</descript>
      <descript sctype="string"/>
      <descript sctype="string">the condition for msg.password.expired</descript>
      <descript sctype="string">changed from</descript>
      <descript sctype="string">expire.password in $operator=true and not nullsub(never.expire.pass in $operator, false)</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">expire.password in $operator=true and not nullsub(never.expire.pass in $operator, false) and $L.authMode="db"</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">add one condidtion:</descript>
      <descript sctype="string"/>
      <descript sctype="string">set.fc.query   -&gt; $L.authMode~="db"</descript>
      <descript sctype="string">Modifield panel=init.name to remove the variable $L.language</descript>
      <descript sctype="string">Modified panel=setup.language to simplify the code and delete the duplicates</descript>
      <descript sctype="string">Allow configuration of separator character to use on number fields</descript>
      <descript sctype="string">Allow configuration of separator character to use on number fields</descript>
      <descript sctype="string">Allow configuration of separator character to use on number fields</descript>
      <descript sctype="string">QCRQ1E57546 WS login may pass the language to the RTE which set the language.  We need to have the language code set in $G.my.language</descript>
      <descript sctype="string">The login application does not need to setup a menu for a Web Service user in ESS mode</descript>
      <descript sctype="string">The RTE now performs the check to validate that the ESS user is using the ESS URL</descript>
      <descript sctype="string">ReqID: 55666</descript>
      <descript sctype="string">Globallist improvement during login.</descript>
      <descript sctype="string">Remove duplicate calls to apm.global.initer for lists Languages Supported, Operators</descript>
      <descript sctype="string">§ In login app on panel get.list.1 it sets up lists that were needed on old login forms. These are no longer needed and should be removed.</descript>
      <descript sctype="string">QC ReqId: 53652 - Set and use $lo.operator throughout the application instead of selecting operator record repeatedly.</descript>
      <descript sctype="string">*panel 'init.name':</descript>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string">$user.id=""</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'init.operator':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'setup.logon':</descript>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string">operator()=$user.id</descript>
      <descript sctype="string">Replaced $operator with $lo.operator</descript>
      <descript sctype="string">user.login.count in $lo.operator=nullsub(user.login.count in $lo.operator, 0)</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'set.operator':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string">name in $lo.operator=$USER.NAME</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'qbe.operator':</descript>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string">name in $operator=$user.id</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string">password in $lo.operator=$old.password</descript>
      <descript sctype="string">operator()=nullsub(name in $lo.operator, "NULL")</descript>
      <descript sctype="string">printer()=Printer in $lo.operator</descript>
      <descript sctype="string">$safpswd=password in $lo.operator</descript>
      <descript sctype="string">$safuser=name in $lo.operator</descript>
      <descript sctype="string">$pw.save=nullsub(password in $lo.operator, str(tod()))</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'select.operator':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'check.entry.point':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string">$L.ess.only=nullsub(ess.access.only in $lo.operator, false)</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'setup.language':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string">if (same(NULL, $L.language) and same(NULL, syslanguage in $lo.operator)) then ($L.language=sysinfo.get("languagecode"))</descript>
      <descript sctype="string">$L.language=nullsub($L.language, nullsub(syslanguage in $lo.operator, nullsub(syslanguage in $G.system.info, "en")))</descript>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string">operator()=name in $operator</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'setup.globals':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'logon':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string">if null(printer()) then (printer()=nullsub(Printer in $lo.operator, "sysprint"))</descript>
      <descript sctype="string">user.login.count in $operator=nullsub(user.login.count in $lo.operator, 0)</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'check.password':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string">expire.password in $lo.operator=true and not nullsub(never.expire.pass in $lo.operator, false)</descript>
      <descript sctype="string">use.max.pwd.life in $G.system.info="logins" and max.life.by.logins in $G.system.info&gt;user.login.count in $lo.operator</descript>
      <descript sctype="string">use.max.pwd.life in $G.system.info="time" and password.date in $G.system.info&gt;=tod() - password.date in $lo.operator</descript>
      <descript sctype="string">password in $lo.operator="SAF"</descript>
      <descript sctype="string">nullsub(never.expire.pass in $lo.operator, false)=true</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'cleanup':</descript>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string">cleanup($operator)</descript>
      <descript sctype="string"/>
      <descript sctype="string">*panel 'format.cadd':</descript>
      <descript sctype="string">Changed $operator to $lo.operator</descript>
      <descript sctype="string">change $info.comp to $G.system.info, except clean($info.comp)</descript>
      <descript sctype="string">setup.globals calls set.login.globalvars</descript>
      <descript sctype="string">Adds a call to sysinfo.get("languagecode") in setup.language in the case that $L.language and the operator's language are both null.</descript>
      <descript sctype="string">Force users who reset their passwords to re-login.(DE3854)</descript>
      <descript sctype="string">Removed updates to the operator record.  This is handled by the RTE.</descript>
      <descript sctype="string">Removed code associated with SAF and RACF.</descript>
      <descript sctype="string">Removed checks for $disallow and 2 in version().</descript>
      <descript sctype="string">Fixed message used for $L.quiesce.msg</descript>
      <descript sctype="string">Recompile to fix parameters</descript>
      <descript sctype="string">Removed unneccesary line of code.</descript>
      <descript sctype="string">Removed obsolete panel safuser</descript>
      <descript sctype="string">Panel init.name</descript>
      <descript sctype="string">Removed: $L.void=fduplicate($G.system.info, $info.comp)</descript>
      <descript sctype="string">Changed logon panel of the login application</descript>
      <descript sctype="string">From:</descript>
      <descript sctype="string">message.flag in $operator=nullsub(message.flag in $operator, message.flag in $info.comp)</descript>
      <descript sctype="string">message.count in $operator=nullsub(message.count in $operator, message.count in $info.comp)</descript>
      <descript sctype="string">message.count in $operator=nullsub(message.count in $operator, 0)</descript>
      <descript sctype="string">if (message.flag in $operator=true) then if (message.count in $operator&gt;0) then ($messages=messages(0, message.count in $operator);$messages=messages(1))</descript>
      <descript sctype="string"/>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$messages=messages(0, 100);$messages=messages(1)</descript>
      <descript sctype="string">CP SCR37054</descript>
      <descript sctype="string">Panel:  get.list</descript>
      <descript sctype="string">updated $L.list to include the 'Operators' globallist</descript>
      <descript sctype="string">$L.list={"Languages Supported", "Operators"}</descript>
      <descript sctype="string">Returned back to condition prior to previous changes.</descript>
      <descript sctype="string">login panel of login application:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string">$messages=messages(3)</descript>
      <descript sctype="string">$messages=messages(1)</descript>
      <descript sctype="string">cleanup($messages)</descript>
      <descript sctype="string">message.flag in $operator=nullsub(message.flag in $operator, message.flag in $info.comp)</descript>
      <descript sctype="string">message.count in $operator=nullsub(message.count in $operator, message.count in $info.comp)</descript>
      <descript sctype="string">message.count in $operator=nullsub(message.count in $operator, 0)</descript>
      <descript sctype="string">if (message.flag in $operator=true) then if (message.count in $operator&gt;0) then ($messages=messages(0, message.count in $operator);$messages=messages(1))</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">logoff panel of login application:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string">$messages=messages(2)</descript>
      <descript sctype="string">$messages=messages(5, 0)</descript>
      <descript sctype="string">$messages=messages(3)</descript>
      <descript sctype="string">$messages=messages(4)</descript>
      <descript sctype="string">cleanup($messages)</descript>
      <descript sctype="string"/>
      <descript sctype="string">qbe.operator panel of login application:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Removed:</descript>
      <descript sctype="string"/>
      <descript sctype="string">$messages=messages(0, 5)</descript>
      <descript sctype="string">$messages=messages(1)</descript>
      <descript sctype="string">Added user self registration, login rad app now displays ess.register app to allow user to enter in data.  This shows ess.self.register form and registers using "Self-Service" javascript code.</descript>
      <descript sctype="string">Moved ESS check to before the login form is displayed.</descript>
      <descript sctype="string">Removed "Operators" from global lists to be fetched.</descript>
      <descript sctype="string">Modification made for DevTx ticket I0235.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Enabled the capability to allow the user to specify that their initial application to be displayed is the ESS menu.</descript>
      <descript sctype="string">(No SCR---Done during SC61 stabilization iteration)</descript>
      <descript sctype="string">Modification made to the cleanup panel so that if it is an ESS user logging in, and neither the ESS menu nor the ESS option is specified on the operator record, they get defaulted to ESSSM and option 1 (Submit a Request), respectively.</descript>
      <descript sctype="string">Previous change was for SCR 15863, task 19044 not a shown below.</descript>
      <descript sctype="string">operator()=name in $operator  was added to setup.language panel so if a mixed case password is entered at login, then it will default to the value in the operator record. SCR 31101, task 29445</descript>
      <descript sctype="string">Update to change below.</descript>
      <descript sctype="string">RAD change login app:
On the check.password  panel change the first condition:
From :
expire.password in $operator=true
To:
expire.password in $operator=true and not never.expire.pass


The dbdict change:
Add new logical field never.expire.pass

Format Change:
Add check box Never Expire Password.

I also added an exit to set.last.login if never.expire.pass=true that way it will not call the password reset applictaion in the foreground.</descript>
      <descript sctype="string">Added the following process line to the init.name panel:</descript>
      <descript sctype="string">$login.fc.qry="name=\"login."+operator()+"\""</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed the query on the get.fc panel to:</descript>
      <descript sctype="string">$login.fc.qry</descript>
      <descript sctype="string"/>
      <descript sctype="string">On the qbe.operator panel, changed the following process line from:</descript>
      <descript sctype="string">$login.query="name=operator()"</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">$login.query="name=\""+operator()+"\""</descript>
      <descript sctype="string">Modified so that SOAP API has a different path then trusted signon.</descript>
      <descript sctype="string">Removed references to pfmap() and calles to set.fixed.keys application.</descript>
      <descript sctype="string">On quiesce.check the order of operators has been reversed to improve performance.</descript>
      <descript sctype="string">Avoid going to menu manager when using Open API interface.</descript>
      <descript sctype="string">Added password parameter for Open API interface.</descript>
      <descript sctype="string">Added support for setting $G.multi based on the multi.company field in the info record.  login.DEFAULT format control will still be able to override this setting.</descript>
      <descript sctype="string">Setup a global variable copy of the info record for system information (System Information Record) - $G.system.info</descript>
      <descript sctype="string">Changed 4th condition on check.password to fix a problem with not setting the expiration conditions correctly?</descript>
      <descript sctype="string">Modified the message numbers as per betatrak IM00013.</descript>
      <descript sctype="string">Modified to check if the expire.password is set.  If so, it will force the user to change their password when login in.</descript>
      <descript sctype="string">User Locking Information doesn't update when a user changes from Inactive to Expired.  Updated the login application to make the correct change.  ST18274</descript>
      <descript sctype="string">It was exiting the login application due to the max login attemts number being met.  I modified it so that it checks first for lockouts, and once that info has been set, it will check for max login attempts.</descript>
      <descript sctype="string">Moved all related language settings from qbe.operator to a new panel setup.language</descript>
      <descript sctype="string">recompiled after fixing database errors.</descript>
      <descript sctype="string">Changes to update operator record with lock.until date when a user is locked out for failed attemts.</descript>
      <descript sctype="string">Changes made to send messages to log when login attempt is failed.</descript>
      <descript sctype="string">Sets $G.bg=false</descript>
      <descript sctype="string">Case insensitivity problem fixes.</descript>
      <descript sctype="string">Do not error out if apm.global.initer fails.</descript>
      <descript sctype="string">No changes, modified set.login.globalvars to set $G.max.attach.size.</descript>
      <descript sctype="string">modified qbe.operator to not set $L.language if login.prompt is bypassed. And to only send Language to the server is $L.language is not null.</descript>
      <descript sctype="string">Send $G.my.language to the server.</descript>
      <descript sctype="string">Modified qbe.operator:  Set user's language to first found of: entered on screen, company default, english.  Also, set $G.my.language to which of those three were selected, rather than only setting it when the op picked one themselves.</descript>
      <descript sctype="string">Modified: build the $G.language* lists for text as</descript>
      <descript sctype="string">well; give them the list on the screen.</descript>
      <descript sctype="string">Default the System Language to the language in the info.company record.</descript>
      <descript sctype="string">Casual users can now change their password if it has expired.</descript>
      <descript sctype="string">sets up english as "en" instead of null</descript>
      <descript sctype="string">sets up language at login</descript>
      <descript sctype="string">Sets the $G.root.currency variable based on the company record. Default is "USD" (US Dollar)</descript>
      <descript sctype="string">Changed the parameter value passed into password.change on panel set.new.password to $old.password instead of password in $operator so that if securepassword is set it will work.</descript>
      <descript sctype="string">Check USER not ALL on quiesce check.</descript>
      <descript sctype="string">Added quiesce check before logout.</descript>
      <descript sctype="string">Removed $L.login.good statements and subroutined saf messages.</descript>
      <descript sctype="string">Added a flag to allow use of old pre9802 printing routines.</descript>
    </descript>
    <release type="string">A9503</release>
    <sysmodcount type="decimal">23</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">06/10/19 17:48:20</sysmodtime>
  </record>
</recordset>
