<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;macro.mail1&quot;" recordid="macro.mail1">
    <application.name type="string">macro.mail1</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">08/24/11 03:22:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified the select panels to retrieve only columns needed:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel "operator.init":  set read Only to true</rev.desc>
          <rev.desc sctype="string">Panel "operator.select": set columns to:  name, full.name, email, set.user.from</rev.desc>
          <rev.desc sctype="string">Panel "contact.init": set readonly flag to true</rev.desc>
          <rev.desc sctype="string">Panel "contact.select": set columns to: contact.name, email</rev.desc>
        </rev.desc>
        <change.no type="decimal">66726</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">06/02/07 23:35:05</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Remove references to SC</rev.desc>
        </rev.desc>
        <change.no type="decimal">899</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">rmurray</rev.name>
        <rev.date type="dateTime">09/15/05 21:36:10</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">on decide.init changed 3rd condition</rev.desc>
          <rev.desc sctype="string">from:</rev.desc>
          <rev.desc sctype="string">null($L.address)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">null($L.address) or $L.address=""</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">so that it will go to exit.normal if no address is supplied</rev.desc>
        </rev.desc>
        <change.no type="decimal">26973</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">06/12/01 20:51:13</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">If a contact is passed in and an operator is not then the messaging will correctly reflect it. Nullsub of $L.opname added to start.1 panel.</rev.desc>
        </rev.desc>
        <change.no type="decimal">4015</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">02/05/01 16:34:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">If too many operator records found, to send out an error message rather than dumped the user to an error exit.  Panel too.many.address added to issue the message.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">09/11/00 16:16:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Called subroutine us.mail.user.from to determine what value to is to be used for $L.user.from - based upon the setting in the operator record.  Panels start, checkpoint.get, and out.build modified for the new variable and subroutine.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2862</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">04/24/00 20:55:28</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On panel decide.init, if no address, operator, or contact is passed in, will not generate an email.  Added a third condition and branched to exit.normal panel.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2494</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">03/22/00 15:40:58</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">In the start panel, added a parameter to the strraw function:  $L.message=strraw($L.message, "newline")</rev.desc>
        </rev.desc>
        <change.no type="decimal">2008</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">jfiles</rev.name>
        <rev.date type="dateTime">10/11/99 18:42:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Legacy code was dropping characters;</rev.desc>
          <rev.desc sctype="string">unnecessary with strraw()</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">jfiles</rev.name>
        <rev.date type="dateTime">10/06/99 20:19:09</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified start panel: split to start (message stuf</rev.desc>
          <rev.desc sctype="string">f) and start.0 (old stuff from start)  - use</rev.desc>
          <rev.desc sctype="string">strraw to strip \" to " in the output.  per SCR.</rev.desc>
        </rev.desc>
        <change.no type="decimal">1452</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">09/30/99 19:10:24</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">09/30/99 19:04:06</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added "or full.name=$L.operator" to the $L.sql query in case they are using the Use Operator Full Name facility.</rev.desc>
        </rev.desc>
        <change.no type="decimal">1747</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">01/13/99 15:11:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">scmsg</rev.desc>
        </rev.desc>
        <change.no type="decimal">856</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">09/13/98 21:33:48</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">if the first line in the message array is NULL then replace with "".</rev.desc>
        </rev.desc>
        <change.no type="decimal">11511</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">05/19/98 19:36:09</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">I got too clever and was putting in epcidic newlines on MVS, BUT the process sending the mail was on unix, so I needed unix newlines.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">04/02/98 10:27:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now fills in expiration date (evexpire)</rev.desc>
        </rev.desc>
        <change.no type="decimal">10898</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">01/14/98 19:18:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Will now send the proper message if trying to mail to a non-existant operator</rev.desc>
        </rev.desc>
        <change.no type="decimal">10618</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">11/23/97 19:38:05</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added a line to the start panel to cover more strrep cases.</rev.desc>
        </rev.desc>
        <change.no type="decimal">10431</change.no>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">Modified the select panel to retrieve only columns needed:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel "operator.init":  set read Only to true</descript>
      <descript sctype="string">Panel "operator.select": set columns to:  name, full.name, email, set.user.from</descript>
      <descript sctype="string">Remove references to SC</descript>
      <descript sctype="string">on decide.init changed 3rd condition</descript>
      <descript sctype="string">from:</descript>
      <descript sctype="string">null($L.address)</descript>
      <descript sctype="string"/>
      <descript sctype="string">to</descript>
      <descript sctype="string">null($L.address) or $L.address=""</descript>
      <descript sctype="string"/>
      <descript sctype="string">so that it will go to exit.normal if no address is supplied</descript>
      <descript sctype="string">If a contact is passed in and an operator is not then the messaging will correctly reflect it. Nullsub of $L.opname added to start.1 panel.</descript>
      <descript sctype="string">If too many operator records found, to send out an error message rather than dumped the user to an error exit.  Panel too.many.address added to issue the message.</descript>
      <descript sctype="string">Called subroutine us.mail.user.from to determine what value to is to be used for $L.user.from - based upon the setting in the operator record.  Panels start, checkpoint.get, and out.build modified for the new variable and subroutine.</descript>
      <descript sctype="string">On panel decide.init, if no address, operator, or contact is passed in, will not generate an email.  Added a third condition and branched to exit.normal panel.</descript>
      <descript sctype="string">In the start panel, added a parameter to the strraw function:  $L.message=strraw($L.message, "newline")</descript>
      <descript sctype="string">Legacy code was dropping characters;</descript>
      <descript sctype="string">unnecessary with strraw()</descript>
      <descript sctype="string">Modified start panel: split to start (message stuf</descript>
      <descript sctype="string">f) and start.0 (old stuff from start)  - use</descript>
      <descript sctype="string">strraw to strip \" to " in the output.  per SCR.</descript>
      <descript sctype="string">Added "or full.name=$L.operator" to the $L.sql query in case they are using the Use Operator Full Name facility.</descript>
      <descript sctype="string">scmsg</descript>
      <descript sctype="string">if the first line in the message array is NULL then replace with "".</descript>
      <descript sctype="string">I got too clever and was putting in epcidic newlines on MVS, BUT the process sending the mail was on unix, so I needed unix newlines.</descript>
      <descript sctype="string">Now fills in expiration date (evexpire)</descript>
      <descript sctype="string">Will now send the proper message if trying to mail to a non-existant operator</descript>
      <descript sctype="string">Added a line to the start panel to cover more strrep cases.</descript>
    </descript>
    <release type="string">A9701</release>
    <sysmodcount type="decimal">11</sysmodcount>
    <sysmoduser type="string">ffaegh</sysmoduser>
    <sysmodtime type="dateTime">08/24/11 03:42:31</sysmodtime>
  </record>
</recordset>
