<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;trigger.operator.check&quot;" recordid="trigger.operator.check">
    <application.name type="string">trigger.operator.check</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">06/02/15 21:56:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel do.password.check</rev.desc>
        </rev.desc>
        <change.no type="decimal">122849</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">04/02/14 14:20:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SRC - User can reset the same password as current password</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel: check.password.history</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add line below to check if equals current password</rev.desc>
          <rev.desc sctype="string">if password.match($L.str, password in $L.file.old) then ($L.password.bad=true;$ERROR.CODE=16)</rev.desc>
        </rev.desc>
        <change.no type="decimal">106782</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhenqing</rev.name>
        <rev.date type="dateTime">06/23/13 09:09:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">"Password Change" utility returns insufficient error messages</rev.desc>
        </rev.desc>
        <change.no type="decimal">95827</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">09/10/12 02:26:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Refact the RAD with js operatorUtil</rev.desc>
        </rev.desc>
        <change.no type="decimal">78572</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mhuang</rev.name>
        <rev.date type="dateTime">12/12/10 12:27:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">riginal :</rev.desc>
          <rev.desc sctype="string">start-&gt;init.company-&gt;select.company-&gt;process.rules</rev.desc>
          <rev.desc sctype="string">new</rev.desc>
          <rev.desc sctype="string">start -&gt; check.g.system.info -&gt; not null -&gt;process.rules</rev.desc>
          <rev.desc sctype="string">-&gt; null-&gt;init.company-&gt;select.company-&gt;process.rules</rev.desc>
        </rev.desc>
        <change.no type="decimal">53651</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">02/03/08 21:13:36</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel check.password.history</rev.desc>
          <rev.desc sctype="string">Added: $L.str=password in $L.file</rev.desc>
          <rev.desc sctype="string">at the top of the process panel</rev.desc>
        </rev.desc>
        <change.no type="decimal">40725</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/19/06 16:42:32</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">I don't know how it got corupted but it should have been as follows:</rev.desc>
          <rev.desc sctype="string">$L.pw.is.encrypted=is.password(password in $L.file)</rev.desc>
          <rev.desc sctype="string">$L.pw.is.encrypted=nullsub($L.pw.is.encrypted, false)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">08/17/06 13:31:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Corrected line 20 of start panel. Changed:</rev.desc>
          <rev.desc sctype="string">$L.pw.is.encrypted=.load=nullsub($G.is.operator.file.load, false)</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">$L.pw.is.encrypted=nullsub($G.is.operator.file.load, false)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/14/06 16:27:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">I reopened this(I2228) ticket because I have updated the trigger.operator.check application to use the new function is.password().</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/10/06 17:04:13</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Devtx I2228  I modified the trigger to check to see if the password is "encrypted".  If it is, then it ignores the password rules and just updates the password.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">06/24/06 17:40:29</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Updated to check the $G.is.operator.file.load variable so that the field length of the password field will not be checked if it comes from an unload.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ausman</rev.name>
        <rev.date type="dateTime">03/01/06 14:52:36</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">10/10/04 23:16:20</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR32575 task30344</rev.desc>
          <rev.desc sctype="string">Added following lines to process.rules panel</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.is.new.operator.record=false</rev.desc>
          <rev.desc sctype="string">if null(contents($L.file.old)) then ($L.is.new.operator.record=true)</rev.desc>
          <rev.desc sctype="string">if ($L.is.new.operator.record=true and no.null.password in $L.info.company and nullsub(password in $L.file, "")="") then ($L.password.changed=true)</rev.desc>
        </rev.desc>
        <change.no type="decimal">32575</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">06/30/04 16:46:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">changed variable assignment on start panel from</rev.desc>
          <rev.desc sctype="string">From:</rev.desc>
          <rev.desc sctype="string">locked.unitl in $L.file=NULL</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">locked.until in $L.file=NULL</rev.desc>
        </rev.desc>
        <change.no type="decimal">25085</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">01/31/04 16:20:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added "expire.password in $L.file&lt;&gt;true and " to the two process lines that check for the check.min.pwd.life panel.  This was for BUG13132 on DEVTX.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">10/13/03 21:40:41</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified scmessages, 8,10,12,13,14 and 15.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Added scmessages 28,30, 32, 33, 34 and 35.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modified trigger.operator.check to use scmessages 28, 30, 32, 33, 34, and 35.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Do to some limitations of the old fat client, the messages were moved into the doc engine, and could only pass the error number through to the doc engine from the trigger.  As a result, there was no easy way to pass the min and max limit values through to the doc engine.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Since there will be no more fat client, I was able to add new messages that are used by the trigger.  I kept the old generic messages that are passed to the doc engine, but modified them to say "Check for more messages."  So now instead of getting two messages on the express client and only one on the fat client, the express client will get one generic message, and also the new message with more specific information.</rev.desc>
        </rev.desc>
        <change.no type="decimal">19186</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">11/02/02 13:46:10</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed the while loop in the check.required.alpha panel to be as follows:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">while ($L.i.counter&lt;=$L.pwd.lng) do ($L.char=substr($L.str, 1, 1);$L.success.flag=rtecall("isalpha", $L.return.code, $L.char);$L.junk=strclpl($L.str, 1);$L.i.counter+=1;if ($L.success.flag=true) then $L.count.alpha+=1)</rev.desc>
        </rev.desc>
        <change.no type="decimal">23694</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">05/07/02 15:39:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed issue which allows all alpha character passwords to be processed even though allow alpha characters is set to false.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/30/02 20:39:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed an issue that would cause the expire.password field to no be reset to false after an operator changed the password after manual lockout.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/11/02 07:05:23</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixe for beta IM00236.  Checks to see if keep history is checked before checking to see if the password is in the history list.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/04/02 15:20:06</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fix for beta IM00143.  Changed code removed "not" from expression below:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (not null(expire.password in $L.file)) then (expire.password in $L.file=false)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/03/02 14:57:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">changed the message level to level 3.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">02/04/02 12:59:27</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified the trigger.operator.check application.  Found that "min.life.by.logins" was missing final "s" in the following line on check.min.pwd.life panel:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (user.login.count in $L.file&lt;min.life.by.logins in $L.info.company and name in $L.file=operator() and use.min.pwd.life in $L.info.company="logins") then ($L.password.bad=true;$ERROR.CODE=14)</rev.desc>
        </rev.desc>
        <change.no type="decimal">18156</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">02/02/02 08:28:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Made change to check if the numeric characters were permited before checking if they had the  min number of required characters.  Also found that it would allow an all numeric password through even though numeric characters were not allowed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">18123</change.no>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">update panel do.password.check</descript>
      <descript sctype="string">SRC - User can reset the same password as current password</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel: check.password.history</descript>
      <descript sctype="string"/>
      <descript sctype="string">add line below to check if equals current password</descript>
      <descript sctype="string">if password.match($L.str, password in $L.file.old) then ($L.password.bad=true;$ERROR.CODE=16)</descript>
      <descript sctype="string">"Password Change" utility returns insufficient error messages</descript>
      <descript sctype="string">Refact the RAD with js operatorUtil</descript>
      <descript sctype="string">riginal :</descript>
      <descript sctype="string">start-&gt;init.company-&gt;select.company-&gt;process.rules</descript>
      <descript sctype="string">new</descript>
      <descript sctype="string">start -&gt; check.g.system.info -&gt; not null -&gt;process.rules</descript>
      <descript sctype="string">-&gt; null-&gt;init.company-&gt;select.company-&gt;process.rules</descript>
      <descript sctype="string">Panel check.password.history</descript>
      <descript sctype="string">Added: $L.str=password in $L.file</descript>
      <descript sctype="string">at the top of the process panel</descript>
      <descript sctype="string">I don't know how it got corupted but it should have been as follows:</descript>
      <descript sctype="string">$L.pw.is.encrypted=is.password(password in $L.file)</descript>
      <descript sctype="string">$L.pw.is.encrypted=nullsub($L.pw.is.encrypted, false)</descript>
      <descript sctype="string">Corrected line 20 of start panel. Changed:</descript>
      <descript sctype="string">$L.pw.is.encrypted=.load=nullsub($G.is.operator.file.load, false)</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">$L.pw.is.encrypted=nullsub($G.is.operator.file.load, false)</descript>
      <descript sctype="string">I reopened this(I2228) ticket because I have updated the trigger.operator.check application to use the new function is.password().</descript>
      <descript sctype="string">Devtx I2228  I modified the trigger to check to see if the password is "encrypted".  If it is, then it ignores the password rules and just updates the password.</descript>
      <descript sctype="string">Updated to check the $G.is.operator.file.load variable so that the field length of the password field will not be checked if it comes from an unload.</descript>
      <descript sctype="string">SCR32575 task30344</descript>
      <descript sctype="string">Added following lines to process.rules panel</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.is.new.operator.record=false</descript>
      <descript sctype="string">if null(contents($L.file.old)) then ($L.is.new.operator.record=true)</descript>
      <descript sctype="string">if ($L.is.new.operator.record=true and no.null.password in $L.info.company and nullsub(password in $L.file, "")="") then ($L.password.changed=true)</descript>
      <descript sctype="string">changed variable assignment on start panel from</descript>
      <descript sctype="string">From:</descript>
      <descript sctype="string">locked.unitl in $L.file=NULL</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">locked.until in $L.file=NULL</descript>
      <descript sctype="string">Added "expire.password in $L.file&lt;&gt;true and " to the two process lines that check for the check.min.pwd.life panel.  This was for BUG13132 on DEVTX.</descript>
      <descript sctype="string">Modified scmessages, 8,10,12,13,14 and 15.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Added scmessages 28,30, 32, 33, 34 and 35.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modified trigger.operator.check to use scmessages 28, 30, 32, 33, 34, and 35.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Do to some limitations of the old fat client, the messages were moved into the doc engine, and could only pass the error number through to the doc engine from the trigger.  As a result, there was no easy way to pass the min and max limit values through to the doc engine.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Since there will be no more fat client, I was able to add new messages that are used by the trigger.  I kept the old generic messages that are passed to the doc engine, but modified them to say "Check for more messages."  So now instead of getting two messages on the express client and only one on the fat client, the express client will get one generic message, and also the new message with more specific information.</descript>
      <descript sctype="string">Changed the while loop in the check.required.alpha panel to be as follows:</descript>
      <descript sctype="string"/>
      <descript sctype="string">while ($L.i.counter&lt;=$L.pwd.lng) do ($L.char=substr($L.str, 1, 1);$L.success.flag=rtecall("isalpha", $L.return.code, $L.char);$L.junk=strclpl($L.str, 1);$L.i.counter+=1;if ($L.success.flag=true) then $L.count.alpha+=1)</descript>
      <descript sctype="string">Fixed issue which allows all alpha character passwords to be processed even though allow alpha characters is set to false.</descript>
      <descript sctype="string">Fixed an issue that would cause the expire.password field to no be reset to false after an operator changed the password after manual lockout.</descript>
      <descript sctype="string">Fixe for beta IM00236.  Checks to see if keep history is checked before checking to see if the password is in the history list.</descript>
      <descript sctype="string">Fix for beta IM00143.  Changed code removed "not" from expression below:</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (not null(expire.password in $L.file)) then (expire.password in $L.file=false)</descript>
      <descript sctype="string">changed the message level to level 3.</descript>
      <descript sctype="string">Modified the trigger.operator.check application.  Found that "min.life.by.logins" was missing final "s" in the following line on check.min.pwd.life panel:</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (user.login.count in $L.file&lt;min.life.by.logins in $L.info.company and name in $L.file=operator() and use.min.pwd.life in $L.info.company="logins") then ($L.password.bad=true;$ERROR.CODE=14)</descript>
      <descript sctype="string">Made change to check if the numeric characters were permited before checking if they had the  min number of required characters.  Also found that it would allow an all numeric password through even though numeric characters were not allowed.</descript>
    </descript>
    <release type="string">SC4</release>
    <sysmodcount type="decimal">7</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">06/02/15 21:58:35</sysmodtime>
  </record>
</recordset>
