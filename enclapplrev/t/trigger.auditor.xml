<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;trigger.auditor&quot;" recordid="trigger.auditor">
    <application.name type="string">trigger.auditor</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">12/09/13 12:54:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Pannel of check.file.type:</rev.desc>
          <rev.desc sctype="string">Modified "condition for exit" from</rev.desc>
          <rev.desc sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard", "ScriptLibrary", "AlertDef", "ApprovalDef", "TodoMap"}</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard", "ScriptLibrary", "AlertDef", "ApprovalDef", "TodoMap", "ioaction"}</rev.desc>
          <rev.desc sctype="string">Added below condition for exit and related exit:</rev.desc>
          <rev.desc sctype="string">$L.filename="ioevents"	audit.ioevents</rev.desc>
        </rev.desc>
        <change.no type="decimal">90578</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">11/28/13 04:01:42</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">11/27/13 08:34:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Pannel of check.file.type:</rev.desc>
          <rev.desc sctype="string">Modified "condition for exit" from</rev.desc>
          <rev.desc sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard"}</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard", "ScriptLibrary", "AlertDef", "ApprovalDef", "TodoMap"}</rev.desc>
          <rev.desc sctype="string">Modified "condition for exit" from</rev.desc>
          <rev.desc sctype="string">$L.filename="joindef"</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">$L.filename="joindefs"</rev.desc>
          <rev.desc sctype="string">Added below condition for exit and related exit:</rev.desc>
          <rev.desc sctype="string">$L.filename="inbox"	audit.inbox</rev.desc>
          <rev.desc sctype="string">$L.filename="Workflow"		audit.workflow</rev.desc>
          <rev.desc sctype="string">$L.filename="WorkflowPhase"	 audit.workflowphase</rev.desc>
          <rev.desc sctype="string">$L.filename={"RuleSet", "notification"}		audit.id</rev.desc>
          <rev.desc sctype="string">$L.filename="htmltemplates"	audit.htmltemplates</rev.desc>
          <rev.desc sctype="string">$L.filename="Template"		audit.template</rev.desc>
          <rev.desc sctype="string">$L.filename="activityactions"		audit.activityactions</rev.desc>
          <rev.desc sctype="string">$L.filename="extaccess"		audit.extaccess</rev.desc>
          <rev.desc sctype="string">Modified pannel of history.save by adding below new lines</rev.desc>
          <rev.desc sctype="string">if ($L.keyfield="inbox.name") then (inbox.id in $L.old=str(audit.id in $L.file)+str(inbox.id in $L.old))</rev.desc>
          <rev.desc sctype="string">if ($L.keyfield="phaseName") then (workflowName in $L.old="AUDIT"+str(audit.id in $L.file)+str(workflowName in $L.old))</rev.desc>
          <rev.desc sctype="string">if ($L.filename="activityactions") then (condition in $L.old="false and "+str(condition in $L.old))</rev.desc>
        </rev.desc>
        <change.no type="decimal">90578</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/05/05 16:58:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">changed the audit.scmessage panel to use the following expression in line 12.  This was to stop the problem of the trigger crashing when an unload was loaded that has a" \" in the message string.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (not null(message.id in $L.new)) then ($L.msg.id.tmp=strrep(message.id in $L.new, "\"", "\\\"");$L.exists.query+=(" and object1=\""+$L.msg.id.tmp+"\""))</rev.desc>
        </rev.desc>
        <change.no type="decimal">36102</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">06/24/04 23:08:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">trigger.auditor application history.save process pannel</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed from:</rev.desc>
          <rev.desc sctype="string">if (filename($L.old)="macro") then (id in $L.old=NULL)</rev.desc>
          <rev.desc sctype="string">Changed To:</rev.desc>
          <rev.desc sctype="string">if (filename($L.old)="macro") then (id in $L.old=NULL;condition in $L.old="false and "+str(condition in $L.old))</rev.desc>
        </rev.desc>
        <change.no type="decimal">16899</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/27/03 20:57:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">updated the trigger.auditor application</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel: audit.displayscreen</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed</rev.desc>
          <rev.desc sctype="string">object2 in $L.file=NULL</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">object2 in $L.file=language in $L.new</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Added</rev.desc>
          <rev.desc sctype="string">if (not null(language in $L.new)) then $L.exists.query+=(" and object2=\""+language in $L.new+"\"")</rev.desc>
        </rev.desc>
        <change.no type="decimal">27538</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">08/27/03 20:57:09</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">updated the trigger.auditor application</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel: audit.displayscreen</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed</rev.desc>
          <rev.desc sctype="string">object2 in $L.file=NULL</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">object2 in $L.file=language in $L.new</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Added</rev.desc>
          <rev.desc sctype="string">if (not null(language in $L.new)) then $L.exists.query+=(" and object2=\""+language in $L.new+"\"")</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">02/03/03 12:43:07</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added  a enclapplrev to list of data files being audited.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">02/02/03 18:26:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added  a enclapplication to list of data files being audited.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">01/23/03 21:12:18</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed problem with eventmap devaudit records not being updated with the last flag correctly.  Also removed some  outputs to the log file used for debuging.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">10/14/02 22:43:44</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified to query for previously devaudit record exists for that particular record, and mark the  last.record field as false on the old devaudit record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">10/01/02 00:01:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed $L.exists.query on audit.scripts.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">06/18/02 20:43:29</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">10/31/00 14:30:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed State to States.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">09/24/00 20:02:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Updated to audit Object, State, and Process records</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">09/07/00 14:39:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added decision to history.check.save panel if $L.keyfield in $L.old is NULL to issue message and error out of application.</rev.desc>
        </rev.desc>
        <change.no type="decimal">3192</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">04/11/99 20:16:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added eventregister, eventmap, eventfilter</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">03/24/99 17:10:16</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now audits displayscreens.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">02/07/99 16:59:48</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Will now null out object2 &amp; 3 explicitely</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">11/16/98 15:54:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Use name as the first key value for querystored records.</rev.desc>
        </rev.desc>
        <change.no type="decimal">589</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">10/07/98 22:33:06</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Set the root record to zero before using fcreate to make a backup of a dbdict.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">03/31/98 18:48:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed to minimze the number of inits that it does</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">03/28/98 15:52:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added support to audit displayoptions &amp; events</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">03/28/98 15:44:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now that we are using counters to generate the audit id, we have to create the backup copy AFTER saving the audit record</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">02/15/98 16:30:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Took out an apparently useless call to fduplicate....</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">02/12/98 13:15:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now uses a counter instead of an expensive call to gentumb</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">01/04/98 15:52:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Addes support to audit: querystored, validity, macro, menu</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">01/04/98 12:31:11</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Will now NOT make a backup copy unless the "keep.backups" flag is true</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">12/30/97 12:23:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now calls the initialization code to see if it SHOUD be running the auditor</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">12/30/97 12:03:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now correctly sets the audit suppress flag when it does an fcreate</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">12/30/97 11:42:58</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">will now FCREATE a backup copy of the dbdict</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">12/29/97 20:24:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now saves the OLD version of the record, not the NEW one as the AUDITxxx version</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pcasey</rev.name>
        <rev.date type="dateTime">12/29/97 19:57:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">should now properly audit triggers</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">Pannel of check.file.type:</descript>
      <descript sctype="string">Modified "condition for exit" from</descript>
      <descript sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard", "ScriptLibrary", "AlertDef", "ApprovalDef", "TodoMap"}</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard", "ScriptLibrary", "AlertDef", "ApprovalDef", "TodoMap", "ioaction"}</descript>
      <descript sctype="string">Added below condition for exit and related exit:</descript>
      <descript sctype="string">$L.filename="ioevents"	audit.ioevents</descript>
      <descript sctype="string">Pannel of check.file.type:</descript>
      <descript sctype="string">Modified "condition for exit" from</descript>
      <descript sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard"}</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">$L.filename={"formatctrl", "dbdict", "link", "format", "menu", "datadict", "wizard", "ScriptLibrary", "AlertDef", "ApprovalDef", "TodoMap"}</descript>
      <descript sctype="string">Modified "condition for exit" from</descript>
      <descript sctype="string">$L.filename="joindef"</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">$L.filename="joindefs"</descript>
      <descript sctype="string">Added below condition for exit and related exit:</descript>
      <descript sctype="string">$L.filename="inbox"	audit.inbox</descript>
      <descript sctype="string">$L.filename="Workflow"		audit.workflow</descript>
      <descript sctype="string">$L.filename="WorkflowPhase"	 audit.workflowphase</descript>
      <descript sctype="string">$L.filename={"RuleSet", "notification"}		audit.id</descript>
      <descript sctype="string">$L.filename="htmltemplates"	audit.htmltemplates</descript>
      <descript sctype="string">$L.filename="Template"		audit.template</descript>
      <descript sctype="string">$L.filename="activityactions"		audit.activityactions</descript>
      <descript sctype="string">$L.filename="extaccess"		audit.extaccess</descript>
      <descript sctype="string">Modified pannel of history.save by adding below new lines</descript>
      <descript sctype="string">if ($L.keyfield="inbox.name") then (inbox.id in $L.old=str(audit.id in $L.file)+str(inbox.id in $L.old))</descript>
      <descript sctype="string">if ($L.keyfield="phaseName") then (workflowName in $L.old="AUDIT"+str(audit.id in $L.file)+str(workflowName in $L.old))</descript>
      <descript sctype="string">changed the audit.scmessage panel to use the following expression in line 12.  This was to stop the problem of the trigger crashing when an unload was loaded that has a" \" in the message string.</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (not null(message.id in $L.new)) then ($L.msg.id.tmp=strrep(message.id in $L.new, "\"", "\\\"");$L.exists.query+=(" and object1=\""+$L.msg.id.tmp+"\""))</descript>
      <descript sctype="string">trigger.auditor application history.save process pannel</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed from:</descript>
      <descript sctype="string">if (filename($L.old)="macro") then (id in $L.old=NULL)</descript>
      <descript sctype="string">Changed To:</descript>
      <descript sctype="string">if (filename($L.old)="macro") then (id in $L.old=NULL;condition in $L.old="false and "+str(condition in $L.old))</descript>
      <descript sctype="string">updated the trigger.auditor application</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel: audit.displayscreen</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed</descript>
      <descript sctype="string">object2 in $L.file=NULL</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">object2 in $L.file=language in $L.new</descript>
      <descript sctype="string"/>
      <descript sctype="string">Added</descript>
      <descript sctype="string">if (not null(language in $L.new)) then $L.exists.query+=(" and object2=\""+language in $L.new+"\"")</descript>
      <descript sctype="string">updated the trigger.auditor application</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel: audit.displayscreen</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed</descript>
      <descript sctype="string">object2 in $L.file=NULL</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">object2 in $L.file=language in $L.new</descript>
      <descript sctype="string"/>
      <descript sctype="string">Added</descript>
      <descript sctype="string">if (not null(language in $L.new)) then $L.exists.query+=(" and object2=\""+language in $L.new+"\"")</descript>
      <descript sctype="string">Added  a enclapplrev to list of data files being audited.</descript>
      <descript sctype="string">Added  a enclapplication to list of data files being audited.</descript>
      <descript sctype="string">Fixed problem with eventmap devaudit records not being updated with the last flag correctly.  Also removed some  outputs to the log file used for debuging.</descript>
      <descript sctype="string">Modified to query for previously devaudit record exists for that particular record, and mark the  last.record field as false on the old devaudit record.</descript>
      <descript sctype="string">Fixed $L.exists.query on audit.scripts.</descript>
      <descript sctype="string">Changed State to States.</descript>
      <descript sctype="string">Updated to audit Object, State, and Process records</descript>
      <descript sctype="string">Added decision to history.check.save panel if $L.keyfield in $L.old is NULL to issue message and error out of application.</descript>
      <descript sctype="string">Added eventregister, eventmap, eventfilter</descript>
      <descript sctype="string">Now audits displayscreens.</descript>
      <descript sctype="string">Will now null out object2 &amp; 3 explicitely</descript>
      <descript sctype="string">Use name as the first key value for querystored records.</descript>
      <descript sctype="string">Set the root record to zero before using fcreate to make a backup of a dbdict.</descript>
      <descript sctype="string">Changed to minimze the number of inits that it does</descript>
      <descript sctype="string">Added support to audit displayoptions &amp; events</descript>
      <descript sctype="string">Now that we are using counters to generate the audit id, we have to create the backup copy AFTER saving the audit record</descript>
      <descript sctype="string">Took out an apparently useless call to fduplicate....</descript>
      <descript sctype="string">Now uses a counter instead of an expensive call to gentumb</descript>
      <descript sctype="string">Addes support to audit: querystored, validity, macro, menu</descript>
      <descript sctype="string">Will now NOT make a backup copy unless the "keep.backups" flag is true</descript>
      <descript sctype="string">Now calls the initialization code to see if it SHOUD be running the auditor</descript>
      <descript sctype="string">Now correctly sets the audit suppress flag when it does an fcreate</descript>
      <descript sctype="string">will now FCREATE a backup copy of the dbdict</descript>
      <descript sctype="string">Now saves the OLD version of the record, not the NEW one as the AUDITxxx version</descript>
      <descript sctype="string">should now properly audit triggers</descript>
    </descript>
    <release type="string">A9701 SP1</release>
    <sysmodcount type="decimal">22</sysmodcount>
    <sysmoduser type="string">hanrui</sysmoduser>
    <sysmodtime type="dateTime">12/09/13 12:56:28</sysmodtime>
  </record>
</recordset>
