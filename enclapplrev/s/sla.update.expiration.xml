<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;sla.update.expiration&quot;" recordid="sla.update.expiration">
    <application.name type="string">sla.update.expiration</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date type="dateTime">06/11/12 21:14:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel:unlock.reschedule</rev.desc>
          <rev.desc sctype="string">change parent Locks from blank to $L.parent.locks</rev.desc>
        </rev.desc>
        <change.no type="decimal">76067</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">xxia</rev.name>
        <rev.date type="dateTime">04/20/11 12:11:26</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel: set.fields</rev.desc>
          <rev.desc sctype="string">Changed the statements from</rev.desc>
          <rev.desc sctype="string">sla.breach in $L.file=nullsub($INTO.BREACH, false)</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">sla.breach in $L.file=nullsub($L.breach.flag, false)</rev.desc>
        </rev.desc>
        <change.no type="decimal">53482</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">06/10/09 16:22:55</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Created a pre-process panel for 'reschedule.unlock.check' which executes the following expression:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.void=rtecall("trigger", $L.err, 1)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This is to ensure that triggers are turned back on if the update fails and needs to be rescheduled because the record was changed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">43064</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">06/10/09 00:09:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified the following panels -</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* start:  added expression - $L.file.save=$L.file</rev.desc>
          <rev.desc sctype="string">* turn.triggers.on:  changed normal exit from 'check.unlock' to 'process.Todo'</rev.desc>
          <rev.desc sctype="string">* process.Todo:  new panel that calls 'add.update.todo.records' and exits out to 'check.unlock'</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This way, the corresponding 'Todo' record will be updated along with the main record when the 'next.breach' field is changed.  The 'Todo' record is processed directly inside the application instead of via triggers.</rev.desc>
        </rev.desc>
        <change.no type="decimal">43064</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">09/02/08 10:34:05</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE3519 - Added variable $L.parent.locks to the "Parent Locks" parm on both the try.lock and unlock panels (makes sure the appropriate parent locks are released).</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">11/04/07 23:23:31</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">modified the "try.lock" panel so that the "Exit:Locked" is set to "reschedule".</rev.desc>
        </rev.desc>
        <change.no type="decimal">40624</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">10/28/07 05:13:46</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR 40624 - Task 35273 : Modified to reselect the record instead of rescheduling when the record is modified and update it if the record is not current.</rev.desc>
          <rev.desc sctype="string">Changed panel try.lock (se.lock.object) to exit to check.current for Locked and Reselect exits</rev.desc>
        </rev.desc>
        <change.no type="decimal">40624</change.no>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">panel:unlock.reschedule</descript>
      <descript sctype="string">change parent Locks from blank to $L.parent.locks</descript>
      <descript sctype="string">panel: set.fields</descript>
      <descript sctype="string">Changed the statements from</descript>
      <descript sctype="string">sla.breach in $L.file=nullsub($INTO.BREACH, false)</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">sla.breach in $L.file=nullsub($L.breach.flag, false)</descript>
      <descript sctype="string">Created a pre-process panel for 'reschedule.unlock.check' which executes the following expression:</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.void=rtecall("trigger", $L.err, 1)</descript>
      <descript sctype="string"/>
      <descript sctype="string">This is to ensure that triggers are turned back on if the update fails and needs to be rescheduled because the record was changed.</descript>
      <descript sctype="string">Modified the following panels -</descript>
      <descript sctype="string"/>
      <descript sctype="string">* start:  added expression - L.file.save=$L.file</descript>
      <descript sctype="string">* turn.triggers.on:  changed normal exit from 'check.unlock' to 'process.Todo'</descript>
      <descript sctype="string">* process.Todo:  new panel that calls 'add.update.todo.records' and exits out to 'check.unlock'</descript>
      <descript sctype="string">* reschedule:  added expression:  $L.void=rtecall("trigger", $L.err, 1)</descript>
      <descript sctype="string"/>
      <descript sctype="string">This way, the corresponding 'Todo' record will be updated along with the main record when the 'next.breach' field is changed.  This process is called directly inside the application instead of via triggers.  The change to the 'reschedule' panel was made to ensure that triggers are turned back on if the update fails and needs to be rescheduled because the record was changed.</descript>
      <descript sctype="string">DE3519 - Added variable $L.parent.locks to the "Parent Locks" parm on both the try.lock and unlock panels (makes sure the appropriate parent locks are released).</descript>
      <descript sctype="string">modified the "try.lock" panel so that the "Exit:Locked" is set to "reschedule".</descript>
      <descript sctype="string">SCR 40624 - Task 35273 : Modified to reselect the record instead of rescheduling when the record is modified and update it if the record is not current.</descript>
      <descript sctype="string">Changed panel try.lock (se.lock.object) to exit to check.current for Locked and Reselect exits</descript>
    </descript>
    <release type="string">SM7.0</release>
    <sysmodcount type="decimal">7</sysmodcount>
    <sysmoduser type="string">miquan</sysmoduser>
    <sysmodtime type="dateTime">06/11/12 21:21:52</sysmodtime>
  </record>
</recordset>
