<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;svcCat.display.cart.item&quot;" recordid="svcCat.display.cart.item">
    <application.name type="string">svcCat.display.cart.item</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">xindeng</rev.name>
        <rev.date type="dateTime">03/25/20 17:59:45</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel: post.display</rev.desc>
          <rev.desc sctype="string">Add one more thread variable, $original.options. This variable will be used to get the search value for SL: xmlFill.getValue.</rev.desc>
          <rev.desc sctype="string">Panel: display.item</rev.desc>
          <rev.desc sctype="string">Clear this variable after xmlfill.</rev.desc>
        </rev.desc>
        <change.no type="decimal">158897</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">08/03/15 12:42:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified set.options panel to make user option support logical name solution</rev.desc>
          <rev.desc sctype="string">Added expression of</rev.desc>
          <rev.desc sctype="string">options in $L.item=jscall("dynamicFormGenerator.addButtonIds", options in $L.item, option.validations in $L.catalog)</rev.desc>
        </rev.desc>
        <change.no type="decimal">126964</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">04/23/15 02:27:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified post.display panel to make user option support logical name solution</rev.desc>
          <rev.desc sctype="string">Added expression of</rev.desc>
          <rev.desc sctype="string">options in $L.item=jscall("dynamicFormGenerator.addButtonIds", options in $L.item, option.validations in $L.catalog)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">04/22/15 03:42:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified save.changes.1 panel to make user option support logical name solution</rev.desc>
          <rev.desc sctype="string">Added one more parameter of "validation xml" when calling "xmlFill.removeNullAndDuplicateOptionFieldValue"</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">10/16/14 00:43:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Duplicate items cannot be removed in item options</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modify panel : save.changes.1.1</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Add statement:</rev.desc>
          <rev.desc sctype="string">options in $L.cartItem=jscall("xmlfill.removeNullAndDuplicateOptionFieldValue", $L.item, options in $L.cartItem)</rev.desc>
        </rev.desc>
        <change.no type="decimal">116232</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">04/27/14 19:04:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">cart item(user selection) is not shown according to  user-login-language when edit cart behavior</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modify Panel:</rev.desc>
          <rev.desc sctype="string">set.options :  covert options in $L.item to display in current local;</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">post.display: convert options in $L.item back to original one before saving to svcCartItem</rev.desc>
        </rev.desc>
        <change.no type="decimal">108158</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">11/02/13 11:02:33</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">1. Panel. setup.display</rev.desc>
          <rev.desc sctype="string">move one line code from post.display</rev.desc>
          <rev.desc sctype="string">2. Panel: post.display</rev.desc>
          <rev.desc sctype="string">clean up $L.contact</rev.desc>
        </rev.desc>
        <change.no type="decimal">100200</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">10/19/13 18:28:03</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">1. add panel fill.1</rev.desc>
          <rev.desc sctype="string">2. panel: setup.display</rev.desc>
          <rev.desc sctype="string">$L.requested.for.fullname=requested.for.fullname in $L.item</rev.desc>
          <rev.desc sctype="string">3. Panel: post.display</rev.desc>
          <rev.desc sctype="string">if null($L.requested.for.fullname) then (</rev.desc>
          <rev.desc sctype="string">$L.requested.for.fullname=""</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">if $full.name then (</rev.desc>
          <rev.desc sctype="string">$L.fullnamechanged=null(requested.for.fullname in $L.item) or not same($L.requested.for.fullname, requested.for.fullname in $L.item);</rev.desc>
          <rev.desc sctype="string">if $L.fullnamechanged then (</rev.desc>
          <rev.desc sctype="string">requested.for in $L.item=NULL</rev.desc>
          <rev.desc sctype="string">);</rev.desc>
          <rev.desc sctype="string">if (not null(requested.for in $L.item)) then (</rev.desc>
          <rev.desc sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", requested.for in $L.item)</rev.desc>
          <rev.desc sctype="string">) else (</rev.desc>
          <rev.desc sctype="string">$L.count=jscall("userUtils.countContactByField", "full.name", requested.for.fullname in $L.item);</rev.desc>
          <rev.desc sctype="string">if (1=$L.count) then (</rev.desc>
          <rev.desc sctype="string">$L.contact=jscall("userUtils.findContactByField", "full.name", requested.for.fullname in $L.item);</rev.desc>
          <rev.desc sctype="string">$requested.for=contact.name in $L.contact</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">) else (</rev.desc>
          <rev.desc sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">$L.requested.for.fullname=requested.for.fullname in $L.item</rev.desc>
        </rev.desc>
        <change.no type="decimal">100200</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">10/12/13 20:20:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel: post.display</rev.desc>
          <rev.desc sctype="string">Always use conact name to get contact file.</rev.desc>
        </rev.desc>
        <change.no type="decimal">100200</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">08/20/13 19:44:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel: save.changes.1</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (delivery in $L.cartItem~=delivery in $L.item) then</rev.desc>
          <rev.desc sctype="string">(</rev.desc>
          <rev.desc sctype="string">delivery in $L.cartItem=delivery in $L.item;</rev.desc>
          <rev.desc sctype="string">$L.void=rtecall("rinit", 1, $L.delivery, "svcCatDelivery");</rev.desc>
          <rev.desc sctype="string">$L.delivery.name.escape=jscall("StringUtil.escapeStr", delivery in $L.item);</rev.desc>
          <rev.desc sctype="string">$L.sql="name=\""+$L.delivery.name.escape+"\"";</rev.desc>
          <rev.desc sctype="string">$L.void=rtecall("select", $L.ret, $L.delivery, $L.sql);</rev.desc>
          <rev.desc sctype="string">if ($L.ret=1) then</rev.desc>
          <rev.desc sctype="string">(</rev.desc>
          <rev.desc sctype="string">duration in $L.cartItem=duration in $L.delivery;</rev.desc>
          <rev.desc sctype="string">schedule in $L.cartItem=schedule in $L.delivery</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
        </rev.desc>
        <change.no type="decimal">94194</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel:copy.save</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add 1 line:</rev.desc>
          <rev.desc sctype="string">$requested.for=requested.for in $L.item</rev.desc>
        </rev.desc>
        <change.no type="decimal">90424</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">add 1 line in save.changes:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">recurring.cost.interval in $L.cartItem=recurring.cost.interval in $L.item</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">QCRQ1E82870:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">add 1 line in split.items and save.changes.1:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">recurring.cost in $L.cartItem=recurring.cost in $L.catalog*quantity in $L.cartItem</rev.desc>
        </rev.desc>
        <change.no type="decimal">82870</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Zhang, Ming-Di</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Cannot show the contact list by fill button next to the Requested For field when order from catalog</rev.desc>
        </rev.desc>
        <change.no type="decimal">87733</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The Date and Time format in SRC not consistent across all date fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">87767</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Zhang, Ming-Di</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The "Requested For" field in Service Catalog is not consistently validated</rev.desc>
        </rev.desc>
        <change.no type="decimal">76998</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lilileil</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Rediret to correct page after user click "Save Changes" which will avoid user to choose options again.</rev.desc>
        </rev.desc>
        <change.no type="decimal">60109</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lilileil</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Recalculate the cost of bundle after user update option cost of any item in a bundle.</rev.desc>
        </rev.desc>
        <change.no type="decimal">60104</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lilileil</rev.name>
        <rev.date NullValue="1" type="dateTime"/>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Recalculate the cost of cart item after user update a bundle in cart.</rev.desc>
        </rev.desc>
        <change.no type="decimal">53985</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lingyan</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QC49049</rev.desc>
          <rev.desc sctype="string">Service Catalog Item Cost does not re-calculate costs if the line item options cost change</rev.desc>
        </rev.desc>
        <change.no type="decimal">49049</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">In panel save.changes.1 move the requested.for and requested.for.fullname out of the $L.item and into the $L.cartItem.</rev.desc>
        </rev.desc>
        <change.no type="decimal">8922</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QC6946: Modified to properly set the cart item options when editing an item in cart.</rev.desc>
          <rev.desc sctype="string">Modified panel 'save.changes'. Add the following line as the first line in the panel:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">options in $L.cartItem=options in $L.item</rev.desc>
        </rev.desc>
        <change.no type="decimal">6946</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Store the option.costs coming from svcCat.get.bundle.opts</rev.desc>
        </rev.desc>
        <change.no type="decimal">4598</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE4598 - Pete's last changes needed to remove the varaiables from 2 more panels.</rev.desc>
          <rev.desc sctype="string">In Panel 'setup.dsiplay', removed:</rev.desc>
          <rev.desc sctype="string">if (type in $L.catalog="bundle") then ($optionsAlias=$L.option.string) else</rev.desc>
          <rev.desc sctype="string">($dynamic.options=$L.option.string)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">And changed the following lines:</rev.desc>
          <rev.desc sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$dynamic.options", "$optionsAlias"}</rev.desc>
          <rev.desc sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $dynamic.options, $optionsAlias}</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg"}</rev.desc>
          <rev.desc sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg}</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">In panel "save.changes" removed:</rev.desc>
          <rev.desc sctype="string">if (type in $L.catalog="bundle") then (options in $L.cartItem=$optionsAlias) else (options in $L.cartItem=$dynamic.options)</rev.desc>
        </rev.desc>
        <change.no type="decimal">4598</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE4598 - Setting the cart item with correct options when saving the changes. Added the following to panel post.display of RAD app "svcCat.display.cart.item":</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (bundle in $L.item) then (options in $L.item=$optionAlias) else (options in $L.item=$dynamic.options)</rev.desc>
        </rev.desc>
        <change.no type="decimal">4598</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Set and cleanup a thread variable for the action.</rev.desc>
        </rev.desc>
        <change.no type="decimal">4598</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel set.service.lists</rev.desc>
          <rev.desc sctype="string">Change normal exit from setup.display to get.cartItem.options</rev.desc>
        </rev.desc>
        <change.no type="decimal">4638</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">modified panel save.changes. Added the following:</rev.desc>
          <rev.desc sctype="string">requested.for in $L.cartItem=requested.for in $L.item</rev.desc>
          <rev.desc sctype="string">requested.for.fullname in $L.cartItem=requested.for.fullname in $L.item</rev.desc>
          <rev.desc sctype="string">requested.for.type in $L.cartItem=requested.for.type in $L.item</rev.desc>
          <rev.desc sctype="string">requested.for.dept in $L.cartItem=requested.for.dept in $L.item</rev.desc>
        </rev.desc>
        <change.no type="decimal">2962</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2917: Corrected so that if there is no currency for teh catalog item or if it is different from the root currency, the options prices will still work properly.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel set.root.cost. Added the following:</rev.desc>
          <rev.desc sctype="string">quantity in $L.cartItem=quantity in $L.item</rev.desc>
          <rev.desc sctype="string">cost in $L.cartItem=unit.cost in $L.cartItem*quantity in $L.cartItem</rev.desc>
          <rev.desc sctype="string">if $L.split then (cost in $L.cartItem=unit.cost in $L.cartItem)</rev.desc>
        </rev.desc>
        <change.no type="decimal">2917</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2911 and DE2912: Modifie dto properly split items after adding them to cart.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel split.items, Changed:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">quantity in $L.Item=1</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">quantity in $L.cartItem=1</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel save.root.item, Changed:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.item</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.cartItem</rev.desc>
        </rev.desc>
        <change.no type="decimal">2911</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2849: Modified to display the currency correctly for the options (User Selections)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel get.root.cost:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">$L.source.cost=nullsub(cost in $L.catalog, 0)+nullsub(option.costs in $L.item, 0)</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.source.cost=nullsub(cost in $L.catalog, 0)+nullsub(option.costs in $L.cartItem, 0)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel get.root.cost.1:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">unit.cost in $L.item</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">unit.cost in $L.cartItem</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel save.changes:</rev.desc>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">if (type in $L.catalog~="bundle") then ($L.cost.adj=nullsub(jscall("svcCatalog.getTotalOptionCost", $L.item, $L.catalog), 0);option.costs in $L.item=$L.cost.adj)</rev.desc>
          <rev.desc sctype="string">options in $L.item=options in $L.item.save</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">TO:</rev.desc>
          <rev.desc sctype="string">if (type in $L.catalog="bundle") then (options in $L.cartItem=$optionsAlias) else (options in $L.cartItem=$dynamic.options)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (type in $L.catalog~="bundle") then ($L.cost.adj=nullsub(jscall("svcCatalog.getTotalOptionCost", $L.cartItem, $L.catalog), 0);option.costs in $L.cartItem=$L.cost.adj)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel save.changes.1:</rev.desc>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">$L.item</rev.desc>
          <rev.desc sctype="string">TO:</rev.desc>
          <rev.desc sctype="string">$L.cartItem</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel set.cost:</rev.desc>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">unit.cost in $L.item=cost in $L.catalog+nullsub(option.costs in $L.item, 0)</rev.desc>
          <rev.desc sctype="string">cost in $L.item=unit.cost in $L.item*quantity in $L.item</rev.desc>
          <rev.desc sctype="string">if $L.split then (cost in $L.item=unit.cost in $L.item)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">TO:</rev.desc>
          <rev.desc sctype="string">quantity in $L.cartItem=quantity in $L.item</rev.desc>
          <rev.desc sctype="string">unit.cost in $L.cartItem=cost in $L.catalog+nullsub(option.costs in $L.cartItem, 0)</rev.desc>
          <rev.desc sctype="string">cost in $L.cartItem=unit.cost in $L.cartItem*quantity in $L.cartItem</rev.desc>
          <rev.desc sctype="string">if $L.split then (cost in $L.cartItem=unit.cost in $L.cartItem)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel setup.display:</rev.desc>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">if (type in $L.catalog="bundle") then ($L.optionsAlias=$L.option.string) else ($L.dynamic.options=$L.option.string)</rev.desc>
          <rev.desc sctype="string">TO:</rev.desc>
          <rev.desc sctype="string">if (type in $L.catalog="bundle") then ($optionsAlias=$L.option.string) else ($dynamic.options=$L.option.string)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$L.dynamic.options", "$L.optionsAlias"}</rev.desc>
          <rev.desc sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $L.dynamic.options, $L.optionsAlias}</rev.desc>
          <rev.desc sctype="string">TO:</rev.desc>
          <rev.desc sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$dynamic.options", "$optionsAlias"}</rev.desc>
          <rev.desc sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $dynamic.options, $optionsAlias}</rev.desc>
        </rev.desc>
        <change.no type="decimal">2849</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2848</rev.desc>
          <rev.desc sctype="string">No longer changing currency once it is in the cart for options.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2848</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">* Modified panel setup.display:</rev.desc>
          <rev.desc sctype="string">Added:</rev.desc>
          <rev.desc sctype="string">if (type in $L.catalog="bundle") then ($L.optionsAlias=$L.option.string) else ($L.dynamic.options=$L.option.string)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed the following to add the two new variables for options</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$L.dynamic.options", "$L.optionsAlias"}</rev.desc>
          <rev.desc sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $L.dynamic.options, $L.optionsAlias}</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Added new panel get.cartItem.options of format "se.get.record"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">returning $L.cartItem and exiting to: set.options</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Added new process panel set.options:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.option.string=options in $L.cartItem</rev.desc>
          <rev.desc sctype="string">exiting to fix.opts.currency</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Modified panel fix.opts.currency:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed options in $L.item to $L.option.string</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">exit changed from display.item to: setup.display</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Modified check.service panel:</rev.desc>
        </rev.desc>
        <change.no type="decimal">2849</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2848</rev.desc>
          <rev.desc sctype="string">Recompile for currency app changes</rev.desc>
        </rev.desc>
        <change.no type="decimal">2848</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA5108</rev.desc>
          <rev.desc sctype="string">Display the options cost in the proper currency when checking out.</rev.desc>
        </rev.desc>
        <change.no type="decimal">5108</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA4996 - TA4997:</rev.desc>
          <rev.desc sctype="string">*Changed panel save.root.item:</rev.desc>
          <rev.desc sctype="string">Changed exit from  add.new.split.items to get.SvcCartItem</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Added new panel get.SvcCartItem of format "se.get.record" with the following parameters;</rev.desc>
          <rev.desc sctype="string">name=$L.id, record=$L.cart.item, unique field=cartItemId, file name=svcCartItem and exit to add.new.split.items</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel add.new.split.items:</rev.desc>
          <rev.desc sctype="string">Changed</rev.desc>
          <rev.desc sctype="string">cartItemId in $L.item=NULL</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">cartItemId in $L.cart.item=NULL</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel insert.new.item:</rev.desc>
          <rev.desc sctype="string">Changed file variable from $L.item to $L.cart.item</rev.desc>
        </rev.desc>
        <change.no type="decimal">4997</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA4996:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel select.svcCatalog, decide.bundle, decide.continue.bundles, and get.catalog.item:</rev.desc>
          <rev.desc sctype="string">Changed exit from get.cost to get.display.cost</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Added panel get.display.cost of format "us.convert.currency":</rev.desc>
          <rev.desc sctype="string">Returning $L.displayCost and exiting to get.cost</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel get.cost:</rev.desc>
          <rev.desc sctype="string">cost in $L.item to $L.displayCost</rev.desc>
          <rev.desc sctype="string">currency in $L.item to $G.my.currency</rev.desc>
        </rev.desc>
        <change.no type="decimal">4996</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA4642 - Story2919</rev.desc>
          <rev.desc sctype="string">Changed panel get.catalog.item. Changed:</rev.desc>
          <rev.desc sctype="string">File Name = svcCatalog</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">File Name = joinsvcDisplay</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed panel get.cart.item. Changed:</rev.desc>
          <rev.desc sctype="string">File Name = svcCartItem</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">File Name =joinCartItemDisplay</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Changed panel confirm.delete.setup:</rev.desc>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">$L.confirm.msg=scmsg(42, "svcCat", {item.description in $L.item})</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.confirm.msg=scmsg(42, "svcCat", {displayName in $L.item})</rev.desc>
        </rev.desc>
        <change.no type="decimal">4642</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Since we changed the detailedDescription field to be a character, thefollowing line needs to be changed from:</rev.desc>
          <rev.desc sctype="string">$L.description=1 in detailedDescription in $L.catalog</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.description=detailedDescription in $L.catalog</rev.desc>
        </rev.desc>
        <change.no type="decimal">2555</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Recompiled</rev.desc>
        </rev.desc>
        <change.no type="decimal">2555</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">S2555:</rev.desc>
          <rev.desc sctype="string">Modified line 1 in setup.display panel to set the description of the catalog item to the detailedDescription. Changed:</rev.desc>
          <rev.desc sctype="string">$L.description=description in $L.catalog</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.description=1 in detailedDescription in $L.catalog</rev.desc>
        </rev.desc>
        <change.no type="decimal">2555</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">S2507 - On start and setup.display panels, set $restrictQuantity flag depending on restrictQuantity field value specified in the svcCatalog record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">rolfel</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">rolfel</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2255</rev.desc>
          <rev.desc sctype="string">Added the line cost in $L.catalog=nullsub(cost in $L.catalog,0) to the panel setup.display to avoid null calculations for the cost.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2255</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified process flow such that a 'save' copy of the cart item record is made. When saving changes (if any), a comparison is made to this saved copy to see if there are any differences to the key fields that are used in the validation sequence check for existing/pending Subscriptions. (DE817)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel display.decide</rev.desc>
          <rev.desc sctype="string">Added an exit for invalid.quantity with condition of:</rev.desc>
          <rev.desc sctype="string">$L.action="additem" and nullsub(val(quantity in $L.item), 0)&lt;1</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel invalid.quantity</rev.desc>
          <rev.desc sctype="string">new process panel to setup message:</rev.desc>
          <rev.desc sctype="string">$L.invalid.msg=scmsg(91, "svcCat")</rev.desc>
        </rev.desc>
        <change.no type="decimal">40071</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Pass the agreement id to Service SLA and Delivery Objective setup routines.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel display.decide</rev.desc>
          <rev.desc sctype="string">Added an exit for invalid.quantity with condition of:</rev.desc>
          <rev.desc sctype="string">$L.action="additem" and nullsub(val($quantity), 0)&lt;1</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel invalid.quantity</rev.desc>
          <rev.desc sctype="string">new process panel to setup message:</rev.desc>
          <rev.desc sctype="string">$L.invalid.msg=scmsg(91, "svcCat")</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added check for blank Service SLA when choices are available.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added support for Find (Service SLA)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added support for service SLAs</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added call to svcCat.setup.del.obj.list to set up the list of delivery objectives for an item.</rev.desc>
        </rev.desc>
        <change.no type="decimal">40046</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing for new Subscription fields on panel=post.display and check.Subscription+</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Pulling the description from the catalog record instead of the cart item which is usually abbreviated.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2546</change.no>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">panel: post.display</descript>
      <descript sctype="string">Add one more thread variable, $original.options. This variable will be used to get the search value for SL: xmlFill.getValue.</descript>
      <descript sctype="string">Panel: display.item</descript>
      <descript sctype="string">Clear this variable after xmlfill.</descript>
      <descript sctype="string">Modified set.options panel to make user option support logical name solution</descript>
      <descript sctype="string">Added expression of</descript>
      <descript sctype="string">options in $L.item=jscall("dynamicFormGenerator.addButtonIds", options in $L.item, option.validations in $L.catalog)</descript>
      <descript sctype="string">Modified post.display panel to make user option support logical name solution</descript>
      <descript sctype="string">Added expression of</descript>
      <descript sctype="string">options in $L.item=jscall("dynamicFormGenerator.addButtonIds", options in $L.item, option.validations in $L.catalog)</descript>
      <descript sctype="string">Modified save.changes.1 panel to make user option support logical name solution</descript>
      <descript sctype="string">Added one more parameter of "validation xml" when calling "xmlFill.removeNullAndDuplicateOptionFieldValue"</descript>
      <descript sctype="string">Duplicate items cannot be removed in item options</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modify panel : save.changes.1.1</descript>
      <descript sctype="string"/>
      <descript sctype="string">Add statement:</descript>
      <descript sctype="string">options in $L.cartItem=jscall("xmlfill.removeNullAndDuplicateOptionFieldValue", $L.item, options in $L.cartItem)</descript>
      <descript sctype="string">cart item(user selection) is not shown according to  user-login-language when edit cart behavior</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modify Panel:</descript>
      <descript sctype="string">set.options :  covert options in $L.item to display in current local;</descript>
      <descript sctype="string"/>
      <descript sctype="string">post.display: convert options in $L.item back to original one before saving to svcCartItem</descript>
      <descript sctype="string">1. Panel. setup.display</descript>
      <descript sctype="string">move one line code from post.display</descript>
      <descript sctype="string">2. Panel: post.display</descript>
      <descript sctype="string">clean up $L.contact</descript>
      <descript sctype="string">1. add panel fill.1</descript>
      <descript sctype="string">2. panel: setup.display</descript>
      <descript sctype="string">$L.requested.for.fullname=requested.for.fullname in $L.item</descript>
      <descript sctype="string">3. Panel: post.display</descript>
      <descript sctype="string">if null($L.requested.for.fullname) then (</descript>
      <descript sctype="string">$L.requested.for.fullname=""</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">if $full.name then (</descript>
      <descript sctype="string">$L.fullnamechanged=null(requested.for.fullname in $L.item) or not same($L.requested.for.fullname, requested.for.fullname in $L.item);</descript>
      <descript sctype="string">if $L.fullnamechanged then (</descript>
      <descript sctype="string">requested.for in $L.item=NULL</descript>
      <descript sctype="string">);</descript>
      <descript sctype="string">if (not null(requested.for in $L.item)) then (</descript>
      <descript sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", requested.for in $L.item)</descript>
      <descript sctype="string">) else (</descript>
      <descript sctype="string">$L.count=jscall("userUtils.countContactByField", "full.name", requested.for.fullname in $L.item);</descript>
      <descript sctype="string">if (1=$L.count) then (</descript>
      <descript sctype="string">$L.contact=jscall("userUtils.findContactByField", "full.name", requested.for.fullname in $L.item);</descript>
      <descript sctype="string">$requested.for=contact.name in $L.contact</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">) else (</descript>
      <descript sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">$L.requested.for.fullname=requested.for.fullname in $L.item</descript>
      <descript sctype="string">Panel: post.display</descript>
      <descript sctype="string">Always use conact name to get contact file.</descript>
      <descript sctype="string">Panel: save.changes.1</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (delivery in $L.cartItem~=delivery in $L.item) then</descript>
      <descript sctype="string">(</descript>
      <descript sctype="string">delivery in $L.cartItem=delivery in $L.item;</descript>
      <descript sctype="string">$L.void=rtecall("rinit", 1, $L.delivery, "svcCatDelivery");</descript>
      <descript sctype="string">$L.delivery.name.escape=jscall("StringUtil.escapeStr", delivery in $L.item);</descript>
      <descript sctype="string">$L.sql="name=\""+$L.delivery.name.escape+"\"";</descript>
      <descript sctype="string">$L.void=rtecall("select", $L.ret, $L.delivery, $L.sql);</descript>
      <descript sctype="string">if ($L.ret=1) then</descript>
      <descript sctype="string">(</descript>
      <descript sctype="string">duration in $L.cartItem=duration in $L.delivery;</descript>
      <descript sctype="string">schedule in $L.cartItem=schedule in $L.delivery</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">panel:copy.save</descript>
      <descript sctype="string"/>
      <descript sctype="string">add 1 line:</descript>
      <descript sctype="string">$requested.for=requested.for in $L.item</descript>
      <descript sctype="string">add 1 line in save.changes:</descript>
      <descript sctype="string"/>
      <descript sctype="string">recurring.cost.interval in $L.cartItem=recurring.cost.interval in $L.item</descript>
      <descript sctype="string"/>
      <descript sctype="string">QCRQ1E82870:</descript>
      <descript sctype="string"/>
      <descript sctype="string">add 1 line in split.items and save.changes.1:</descript>
      <descript sctype="string"/>
      <descript sctype="string">recurring.cost in $L.cartItem=recurring.cost in $L.catalog*quantity in $L.cartItem</descript>
      <descript sctype="string">Cannot show the contact list by fill button next to the Requested For field when order from catalog</descript>
      <descript sctype="string">The Date and Time format in SRC not consistent across all date fields</descript>
      <descript sctype="string">The "Requested For" field in Service Catalog is not consistently validated</descript>
      <descript sctype="string">Rediret to correct page after user click "Save Changes" which will avoid user to choose options again.</descript>
      <descript sctype="string">Recalculate the cost of bundle after user update option cost of any item in a bundle.</descript>
      <descript sctype="string">Recalculate the cost of cart item after user update a bundle in cart.</descript>
      <descript sctype="string">QC49049</descript>
      <descript sctype="string">Service Catalog Item Cost does not re-calculate costs if the line item options cost change</descript>
      <descript sctype="string">In panel save.changes.1 move the requested.for and requested.for.fullname out of the $L.item and into the $L.cartItem.</descript>
      <descript sctype="string">QC6956: Modified to properly set the cart item options when editing an item in cart.</descript>
      <descript sctype="string">Modified panel 'save.changes'. Add the following line as the first line in the panel:</descript>
      <descript sctype="string"/>
      <descript sctype="string">options in $L.cartItem=options in $L.item</descript>
      <descript sctype="string">Store the option.costs coming from svcCat.get.bundle.opts</descript>
      <descript sctype="string">DE4598 - Pete's last changes needed to remove the varaiables from 2 more panels.</descript>
      <descript sctype="string">In Panel 'setup.dsiplay', removed:</descript>
      <descript sctype="string">if (type in $L.catalog="bundle") then ($optionsAlias=$L.option.string) else</descript>
      <descript sctype="string">($dynamic.options=$L.option.string)</descript>
      <descript sctype="string"/>
      <descript sctype="string">And changed the following lines:</descript>
      <descript sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$dynamic.options", "$optionsAlias"}</descript>
      <descript sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $dynamic.options, $optionsAlias}</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg"}</descript>
      <descript sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg}</descript>
      <descript sctype="string"/>
      <descript sctype="string">In panel "save.changes" removed:</descript>
      <descript sctype="string">if (type in $L.catalog="bundle") then (options in $L.cartItem=$optionsAlias) else (options in $L.cartItem=$dynamic.options)</descript>
      <descript sctype="string">DE4598 - Setting the cart item with correct options when saving the changes. Added the following to panel post.display of RAD app "svcCat.display.cart.item":</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (bundle in $L.item) then (options in $L.item=$optionAlias) else (options in $L.item=$dynamic.options)</descript>
      <descript sctype="string">Set and cleanup a thread variable for the action.</descript>
      <descript sctype="string">Panel set.service.lists</descript>
      <descript sctype="string">Change normal exit from setup.display to get.cartItem.options</descript>
      <descript sctype="string">modified panel save.changes. Added the following:</descript>
      <descript sctype="string">requested.for in $L.cartItem=requested.for in $L.item</descript>
      <descript sctype="string">requested.for.fullname in $L.cartItem=requested.for.fullname in $L.item</descript>
      <descript sctype="string">requested.for.type in $L.cartItem=requested.for.type in $L.item</descript>
      <descript sctype="string">requested.for.dept in $L.cartItem=requested.for.dept in $L.item</descript>
      <descript sctype="string">DE2917: Corrected so that if there is no currency for teh catalog item or if it is different from the root currency, the options prices will still work properly.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel set.root.cost. Added the following:</descript>
      <descript sctype="string">quantity in $L.cartItem=quantity in $L.item</descript>
      <descript sctype="string">cost in $L.cartItem=unit.cost in $L.cartItem*quantity in $L.cartItem</descript>
      <descript sctype="string">if $L.split then (cost in $L.cartItem=unit.cost in $L.cartItem)</descript>
      <descript sctype="string">DE2911 and DE2912: Modifie dto properly split items after adding them to cart.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel split.items, Changed:</descript>
      <descript sctype="string"/>
      <descript sctype="string">quantity in $L.Item=1</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">quantity in $L.cartItem=1</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">Panel save.root.item, Changed:</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.item</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.cartItem</descript>
      <descript sctype="string">DE2849: Modified to display the currency correctly for the options (User Selections)</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel get.root.cost:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">$L.source.cost=nullsub(cost in $L.catalog, 0)+nullsub(option.costs in $L.item, 0)</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.source.cost=nullsub(cost in $L.catalog, 0)+nullsub(option.costs in $L.cartItem, 0)</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">panel get.root.cost.1:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">unit.cost in $L.item</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">unit.cost in $L.cartItem</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">panel save.changes:</descript>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">if (type in $L.catalog~="bundle") then ($L.cost.adj=nullsub(jscall("svcCatalog.getTotalOptionCost", $L.item, $L.catalog), 0);option.costs in $L.item=$L.cost.adj)</descript>
      <descript sctype="string">options in $L.item=options in $L.item.save</descript>
      <descript sctype="string"/>
      <descript sctype="string">TO:</descript>
      <descript sctype="string">if (type in $L.catalog="bundle") then (options in $L.cartItem=$optionsAlias) else (options in $L.cartItem=$dynamic.options)</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (type in $L.catalog~="bundle") then ($L.cost.adj=nullsub(jscall("svcCatalog.getTotalOptionCost", $L.cartItem, $L.catalog), 0);option.costs in $L.cartItem=$L.cost.adj)</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">panel save.changes.1:</descript>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">$L.item</descript>
      <descript sctype="string">TO:</descript>
      <descript sctype="string">$L.cartItem</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">panel set.cost:</descript>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">unit.cost in $L.item=cost in $L.catalog+nullsub(option.costs in $L.item, 0)</descript>
      <descript sctype="string">cost in $L.item=unit.cost in $L.item*quantity in $L.item</descript>
      <descript sctype="string">if $L.split then (cost in $L.item=unit.cost in $L.item)</descript>
      <descript sctype="string"/>
      <descript sctype="string">TO:</descript>
      <descript sctype="string">quantity in $L.cartItem=quantity in $L.item</descript>
      <descript sctype="string">unit.cost in $L.cartItem=cost in $L.catalog+nullsub(option.costs in $L.cartItem, 0)</descript>
      <descript sctype="string">cost in $L.cartItem=unit.cost in $L.cartItem*quantity in $L.cartItem</descript>
      <descript sctype="string">if $L.split then (cost in $L.cartItem=unit.cost in $L.cartItem)</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel setup.display:</descript>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">if (type in $L.catalog="bundle") then ($L.optionsAlias=$L.option.string) else ($L.dynamic.options=$L.option.string)</descript>
      <descript sctype="string">TO:</descript>
      <descript sctype="string">if (type in $L.catalog="bundle") then ($optionsAlias=$L.option.string) else ($dynamic.options=$L.option.string)</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$L.dynamic.options", "$L.optionsAlias"}</descript>
      <descript sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $L.dynamic.options, $L.optionsAlias}</descript>
      <descript sctype="string">TO:</descript>
      <descript sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$dynamic.options", "$optionsAlias"}</descript>
      <descript sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $dynamic.options, $optionsAlias}</descript>
      <descript sctype="string">DE2848</descript>
      <descript sctype="string">No longer changing currency once it is in the cart for options.</descript>
      <descript sctype="string">* Modified panel setup.display:</descript>
      <descript sctype="string">Added:</descript>
      <descript sctype="string">if (type in $L.catalog="bundle") then ($L.optionsAlias=$L.option.string) else ($L.dynamic.options=$L.option.string)</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed the following to add the two new variables for options</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.names={"$L.format", "$L.title", "$L.description", "$L.image", "$L.cost", "$L.option.text", "$L.type", "$L.options.msg", "$L.dynamic.options", "$L.optionsAlias"}</descript>
      <descript sctype="string">$L.values={$L.format, $L.title, $L.description, $L.image, $L.cost, $L.option.text, $L.type, $L.options.msg, $L.dynamic.options, $L.optionsAlias}</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">* Added new panel get.cartItem.options of format "se.get.record"</descript>
      <descript sctype="string"/>
      <descript sctype="string">returning $L.cartItem and exiting to: set.options</descript>
      <descript sctype="string"/>
      <descript sctype="string">* Added new process panel set.options:</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.option.string=options in $L.cartItem</descript>
      <descript sctype="string">exiting to fix.opts.currency</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">* Modified panel fix.opts.currency:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed options in $L.item to $L.option.string</descript>
      <descript sctype="string"/>
      <descript sctype="string">exit changed from display.item to: setup.display</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">* Modified check.service panel:</descript>
      <descript sctype="string">DE2848</descript>
      <descript sctype="string">Recompile for currency app changes</descript>
      <descript sctype="string">TA5108</descript>
      <descript sctype="string">Display the options cost in the proper currency when checking out.</descript>
      <descript sctype="string">TA4996 - TA4997:</descript>
      <descript sctype="string">*Changed panel save.root.item:</descript>
      <descript sctype="string">Changed exit from  add.new.split.items to get.SvcCartItem</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Added new panel get.SvcCartItem of format "se.get.record" with the following parameters;</descript>
      <descript sctype="string">name=$L.id, record=$L.cart.item, unique field=cartItemId, file name=svcCartItem and exit to add.new.split.items</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel add.new.split.items:</descript>
      <descript sctype="string">Changed</descript>
      <descript sctype="string">cartItemId in $L.item=NULL</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">cartItemId in $L.cart.item=NULL</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel insert.new.item:</descript>
      <descript sctype="string">Changed file variable from $L.item to $L.cart.item</descript>
      <descript sctype="string">TA4996:</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel select.svcCatalog, decide.bundle, decide.continue.bundles, and get.catalog.item:</descript>
      <descript sctype="string">Changed exit from get.cost to get.display.cost</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Added panel get.display.cost of format "us.convert.currency":</descript>
      <descript sctype="string">Returning $L.displayCost and exiting to get.cost</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel get.cost:</descript>
      <descript sctype="string">cost in $L.item to $L.displayCost</descript>
      <descript sctype="string">currency in $L.item to $G.my.currency</descript>
      <descript sctype="string">TA4642 - Story2919</descript>
      <descript sctype="string">Changed panel get.catalog.item. Changed:</descript>
      <descript sctype="string">File Name = svcCatalog</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">File Name = joinsvcDisplay</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed panel get.cart.item. Changed:</descript>
      <descript sctype="string">File Name = svcCartItem</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">File Name =joinCartItemDisplay</descript>
      <descript sctype="string"/>
      <descript sctype="string">Changed panel confirm.delete.setup:</descript>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">$L.confirm.msg=scmsg(42, "svcCat", {item.description in $L.item})</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.confirm.msg=scmsg(42, "svcCat", {displayName in $L.item})</descript>
      <descript sctype="string">Since we changed the detailedDescription field to be a character, thefollowing line needs to be changed from:</descript>
      <descript sctype="string">$L.description=1 in detailedDescription in $L.catalog</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.description=detailedDescription in $L.catalog</descript>
      <descript sctype="string">Recompiled</descript>
      <descript sctype="string">S2555:</descript>
      <descript sctype="string">Modified line 1 in setup.display panel to set the description of the catalog item to the detailedDescription. Changed:</descript>
      <descript sctype="string">$L.description=description in $L.catalog</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.description=detailedDescription in $L.catalog</descript>
      <descript sctype="string">S2507 - On start and setup.display panels, set $restrictQuantity flag depending on restrictQuantity field value specified in the svcCatalog record.</descript>
      <descript sctype="string">DE2255</descript>
      <descript sctype="string">Added the line cost in $L.item=nullsub(cost in $L.item, 0) to the panel check.cost to avoid null calculations for the cost.</descript>
      <descript sctype="string">Modified process flow such that a 'save' copy of the cart item record is made. When saving changes (if any), a comparison is made to this saved copy to see if there are any differences to the key fields that are used in the validation sequence check for existing/pending Subscriptions. (DE817)</descript>
      <descript sctype="string">Panel display.decide</descript>
      <descript sctype="string">Added an exit for invalid.quantity with condition of:</descript>
      <descript sctype="string">$L.action="additem" and nullsub(val(quantity in $L.item), 0)&lt;1</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel invalid.quantity</descript>
      <descript sctype="string">new process panel to setup message:</descript>
      <descript sctype="string">$L.invalid.msg=scmsg(91, "svcCat")</descript>
      <descript sctype="string">Pass the agreement id to Service SLA and Delivery Objective setup routines.</descript>
      <descript sctype="string">Panel display.decide</descript>
      <descript sctype="string">Added an exit for invalid.quantity with condition of:</descript>
      <descript sctype="string">$L.action="additem" and nullsub(val($quantity), 0)&lt;1</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel invalid.quantity</descript>
      <descript sctype="string">new process panel to setup message:</descript>
      <descript sctype="string">$L.invalid.msg=scmsg(91, "svcCat")</descript>
      <descript sctype="string">Added check for blank Service SLA when choices are available.</descript>
      <descript sctype="string">Added support for Find (Service SLA)</descript>
      <descript sctype="string">Added support for service SLAs</descript>
      <descript sctype="string">Added call to svcCat.setup.del.obj.list to set up the list of delivery objectives for an item.</descript>
      <descript sctype="string">Added processing for new Subscription fields on panel=post.display and check.Subscription+</descript>
      <descript sctype="string">Pulling the description from the catalog record instead of the cart item which is usually abbreviated.</descript>
    </descript>
    <release type="string">SC6.2</release>
    <sysmodcount type="decimal">19</sysmodcount>
    <sysmoduser type="string">xindeng</sysmoduser>
    <sysmodtime type="dateTime">03/25/20 18:03:25</sysmodtime>
  </record>
</recordset>
