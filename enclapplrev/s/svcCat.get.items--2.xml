<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;svcCat.get.items&quot;" recordid="svcCat.get.items">
    <application.name type="string">svcCat.get.items</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">09/20/10 17:53:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">imporve performance when retrieving all the capabilitywords.</rev.desc>
          <rev.desc sctype="string">update panel: start / check.access / check.access.total / check.access.list / check.access.list.totol</rev.desc>
        </rev.desc>
        <change.no type="decimal">57087</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">feizhichao</rev.name>
        <rev.date type="dateTime">10/08/02 01:03:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">1.Update code of panel “start”:</rev.desc>
          <rev.desc sctype="string">From :</rev.desc>
          <rev.desc sctype="string">$L.operatorName=$OPERATOR.NAME</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.operatorName=nullsub($OPERATOR.NAME, operator())</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">2.Update code of panel “check.access”:</rev.desc>
          <rev.desc sctype="string">From:</rev.desc>
          <rev.desc sctype="string">if (not null($L.a in access.list in $L.item)) then if jscall("capability.checkPermission", $L.a in access.list in $L.item) then ($L.access=true) else ($L.access=false)</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">if (not null($L.a in access.list in $L.item)) then if jscall("capability.checkPermission", $L.a in access.list in $L.item, $L.operatorName) then ($L.access=true) else ($L.access=false)</rev.desc>
        </rev.desc>
        <change.no type="decimal">47184</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">rolfel</rev.name>
        <rev.date type="dateTime">10/04/29 11:01:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QC228014 - Service Catalog: Unlinked image can't be retrieve if any file has been attached to the catalog</rev.desc>
          <rev.desc sctype="string">Panel: "add.item"</rev.desc>
          <rev.desc sctype="string">Changed expression from:</rev.desc>
          <rev.desc sctype="string">$L.i in $L.current.items.image="svcCatalog;"+name in $L.item</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.i in $L.current.items.image="joinsvcDisplay;"+name in $L.item</rev.desc>
        </rev.desc>
        <change.no type="decimal">228014</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">xingjia</rev.name>
        <rev.date type="dateTime">09/11/15 11:11:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Add two parameters:</rev.desc>
          <rev.desc sctype="string">1. $OPERATOR.NAME: pass in the operator name for permission check</rev.desc>
          <rev.desc sctype="string">2. $TYPES: return the item types.(0-category,1-item,2-bundle)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">08/05/02 23:34:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">S3025 - TA4996:</rev.desc>
          <rev.desc sctype="string">*Changed Line 5 of add.item from:</rev.desc>
          <rev.desc sctype="string">L.i in $L.cost=str(cost in $L.item)+" "+currency in $L.item</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.i in $L.cost=str($L.displayCost)+" "+nullsub($G.my.currency, currency in $L.item)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Changed check.item.allowed panel exit from add.item to get.display.cost</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Added panel get.display.cost of format "us.format.currency" returning $L.displayCost and exit to add.item</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel get.cost:</rev.desc>
          <rev.desc sctype="string">changed cost in $L.item to $L.displayCost</rev.desc>
          <rev.desc sctype="string">Changed currency in $L.item to $G.my.currency</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel check.access.list.1</rev.desc>
          <rev.desc sctype="string">Exit changed from add.item to get.display.cost</rev.desc>
        </rev.desc>
        <change.no type="decimal">4996</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">08/05/12 09:51:16</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA4642 Adds a displayName array to get passed back.</rev.desc>
        </rev.desc>
        <change.no type="decimal">4642</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/02/07 07:22:36</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel parameter</rev.desc>
          <rev.desc sctype="string">Added First ID: (text) parameter with $FIRST.ID value</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel add.item</rev.desc>
          <rev.desc sctype="string">Added expressions:</rev.desc>
          <rev.desc sctype="string">$L.success.flg=rtecall("rid", $L.return.code, $L.item, $L.id)</rev.desc>
          <rev.desc sctype="string">$L.first.id=nullsub($L.first.id, $L.id)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel exit.normal</rev.desc>
          <rev.desc sctype="string">Changed first expression to:</rev.desc>
          <rev.desc sctype="string">if ($L.first and $L.i&gt;$L.max) then ($L.success.flg=rtecall("rgoto", $L.return.code, $L.item, $L.id))</rev.desc>
          <rev.desc sctype="string">Added expression:</rev.desc>
          <rev.desc sctype="string">$FIRST.ID=$L.first.id</rev.desc>
        </rev.desc>
        <change.no type="decimal">41018</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/02/07 06:41:09</rev.date>
        <rev.desc sctype="string"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">imporve performance when retrieving all the capabilitywords.</descript>
      <descript sctype="string">update panel: start / check.access / check.access.total / check.access.list / check.access.list.totol</descript>
      <descript sctype="string">1.Update code of panel “start”:</descript>
      <descript sctype="string">From :</descript>
      <descript sctype="string">$L.operatorName=$OPERATOR.NAME</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.operatorName=nullsub($OPERATOR.NAME, operator())</descript>
      <descript sctype="string"/>
      <descript sctype="string">2.Update code of panel “check.access”:</descript>
      <descript sctype="string">From:</descript>
      <descript sctype="string">if (not null($L.a in access.list in $L.item)) then if jscall("capability.checkPermission", $L.a in access.list in $L.item) then ($L.access=true) else ($L.access=false)</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">if (not null($L.a in access.list in $L.item)) then if jscall("capability.checkPermission", $L.a in access.list in $L.item, $L.operatorName) then ($L.access=true) else ($L.access=false)</descript>
      <descript sctype="string">QC228014 - Service Catalog: Unlinked image can't be retrieve if any file has been attached to the catalog</descript>
      <descript sctype="string">Panel: "add.item"</descript>
      <descript sctype="string">Changed expression from:</descript>
      <descript sctype="string">$L.i in $L.current.items.image="svcCatalog;"+name in $L.item</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.i in $L.current.items.image="joinsvcDisplay;"+name in $L.item</descript>
      <descript sctype="string">Add two parameters:</descript>
      <descript sctype="string">1. $OPERATOR.NAME: pass in the operator name for permission check</descript>
      <descript sctype="string">2. $TYPES: return the item types.(0-category,1-item,2-bundle)</descript>
      <descript sctype="string">S3025 - TA4996:</descript>
      <descript sctype="string">*Changed Line 5 of add.item from:</descript>
      <descript sctype="string">L.i in $L.cost=str(cost in $L.item)+" "+currency in $L.item</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.i in $L.cost=str($L.displayCost)+" "+nullsub($G.my.currency, currency in $L.item)</descript>
      <descript sctype="string"/>
      <descript sctype="string">* Changed check.item.allowed panel exit from add.item to get.display.cost</descript>
      <descript sctype="string"/>
      <descript sctype="string">* Added panel get.display.cost of format "us.format.currency" returning $L.displayCost and exit to add.item</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel get.cost:</descript>
      <descript sctype="string">changed cost in $L.item to $L.displayCost</descript>
      <descript sctype="string">Changed currency in $L.item to $G.my.currency</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel check.access.list.1</descript>
      <descript sctype="string">Exit changed from add.item to get.display.cost</descript>
      <descript sctype="string">TA4642 Adds a displayName array to get passed back.</descript>
      <descript sctype="string">Panel parameter</descript>
      <descript sctype="string">Added First ID: (text) parameter with $FIRST.ID value</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel add.item</descript>
      <descript sctype="string">Added expressions:</descript>
      <descript sctype="string">$L.success.flg=rtecall("rid", $L.return.code, $L.item, $L.id)</descript>
      <descript sctype="string">$L.first.id=nullsub($L.first.id, $L.id)</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel exit.normal</descript>
      <descript sctype="string">Changed first expression to:</descript>
      <descript sctype="string">if ($L.first and $L.i&gt;$L.max) then ($L.success.flg=rtecall("rgoto", $L.return.code, $L.item, $L.id))</descript>
      <descript sctype="string">Added expression:</descript>
      <descript sctype="string">$FIRST.ID=$L.first.id</descript>
      <descript sctype="string">Panel parameter</descript>
      <descript sctype="string">Added First ID: (text) parameter with $FIRST.ID value</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel add.item</descript>
      <descript sctype="string">Added expressions:</descript>
      <descript sctype="string">$L.success.flg=rtecall("rid", $L.return.code, $L.item, $L.id)</descript>
      <descript sctype="string">$L.first.id=nullsub($L.first.id, $L.id)</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel exit.normal</descript>
      <descript sctype="string">Changed first expression to:</descript>
      <descript sctype="string">if ($L.first and $L.i&gt;$L.max and $L.total&gt;$L.i) then ($L.success.flg=rtecall("rgoto", $L.return.code, $L.item, $L.id))</descript>
      <descript sctype="string">Added expression:</descript>
      <descript sctype="string">$FIRST.ID=$L.first.id</descript>
    </descript>
    <release type="string">SM7.0</release>
    <sysmodcount type="decimal">8</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">09/20/10 17:56:25</sysmodtime>
  </record>
</recordset>
