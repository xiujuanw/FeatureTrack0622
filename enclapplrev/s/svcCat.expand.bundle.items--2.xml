<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;svcCat.expand.bundle.items&quot;" recordid="svcCat.expand.bundle.items">
    <application.name type="string">svcCat.expand.bundle.items</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">07/24/12 11:46:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The processing of a delivery objective for a Service Catalog bundle is not working.</rev.desc>
        </rev.desc>
        <change.no type="decimal">74574</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">06/17/08 15:24:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2848</rev.desc>
          <rev.desc sctype="string">Recompile for currency app changes</rev.desc>
        </rev.desc>
        <change.no type="decimal">2848</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">06/11/08 09:26:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA5108 Changes the currency in the bundle options to the root currency.</rev.desc>
        </rev.desc>
        <change.no type="decimal">5108</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">05/21/08 03:05:32</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR 41511: use a new variable for sub-bundle options when calling recursively</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel setup.recurse</rev.desc>
          <rev.desc sctype="string">Changed 2nd expression from:</rev.desc>
          <rev.desc sctype="string">$L.subBundle.options=jscall("svcCatBundles.getForm", $L.new.options, "opt"+$L.i, $L.bundle.item)</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">$L.pass.subBundle.options=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+$L.i, $L.bundle.item)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel recurse</rev.desc>
          <rev.desc sctype="string">Changed the Sub Bundle Options: parameter from</rev.desc>
          <rev.desc sctype="string">$L.subBundle.options</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">$L.pass.subBundle.options</rev.desc>
        </rev.desc>
        <change.no type="decimal">41511</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">02/03/08 11:38:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR40941 - Task 35472:</rev.desc>
          <rev.desc sctype="string">Refactored the code to call getForm for all levels of nested bundles in order to</rev.desc>
          <rev.desc sctype="string">return the options for a bundle. Changed panel move.item.info. Replaced:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if ($L.level&gt;1) then (options in $L.bundle.item=jscall("svcCatBundles.getSubBundleBundleOptions", $L.bundle.options, "opt"+str($L.i), $L.bundle.item)) else (options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+str($L.i), $L.bundle.item))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">With:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+str($L.i), $L.bundle.item)</rev.desc>
        </rev.desc>
        <change.no type="decimal">40941</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">11/28/07 06:05:26</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR 40700 - Task 35311: Modified to recurse properly and getthe options for sub bundles.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Added the new character field "$INTO.SUBBUNDLE.OPTIONS" to the panel to return sub Bundle Options.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">**Modified panel "start":</rev.desc>
          <rev.desc sctype="string">Added the following line to initialize the new variable:</rev.desc>
          <rev.desc sctype="string">$L.subBundle.options=$INTO.SUBBUNDLE.OPTIONS</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">**Modified panel "setup.recurse":</rev.desc>
          <rev.desc sctype="string">Added the following line to get the value when recursing:</rev.desc>
          <rev.desc sctype="string">$L.subBundle.options=jscall("svcCatBundles.getForm", $L.new.options, "opt"+$L.i, $L.bundle.item)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">**Modified panel "recurse:</rev.desc>
          <rev.desc sctype="string">Added the new parameter to be passed in calling the recursive application:</rev.desc>
          <rev.desc sctype="string">$L.subBundle.options</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">**Modified panel "get.catalog.id":</rev.desc>
          <rev.desc sctype="string">Changed the call to the checkBundle function by adding the new parameters passed:</rev.desc>
          <rev.desc sctype="string">if ($L.option~="mandatory") then ($L.add=val(jscall("dynamicFormGenerator.checkBundle", $L.check.item, "opt"+str($L.i)), 4))</rev.desc>
          <rev.desc sctype="string">Changed:</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">if ($L.option~="mandatory") then ($L.add=val(jscall("dynamicFormGenerator.checkBundle", $L.check.item, "opt"+str($L.i), $L.level,</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.subBundle.options), 4))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">**Modified panel "move.item.info":</rev.desc>
          <rev.desc sctype="string">Changed the call to call the new function to get subBundle when bundle whithin bundle:</rev.desc>
          <rev.desc sctype="string">options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+$L.i, $L.bundle.item)</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">if ($L.level&gt;1) then (options in $L.bundle.item=jscall("svcCatBundles.getSubBundleBundleOptions", $L.bundle.options, "opt"+str($L.i), $L.bundle.item))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">else (options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+str($L.i), $L.bundle.item))</rev.desc>
        </rev.desc>
        <change.no type="decimal">40700</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">08/21/07 05:42:07</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2000 - Added setting of requester.for.fullname to the component items when expanding a bundle. Modified panel: move.item.info:</rev.desc>
          <rev.desc sctype="string">if (nullsub(createSubscription in $L.bundle.item, false)=true and subscribeIndividual in $L.bundle.item=true) then (requested.for in $L.new.item=requested.for in $L.item;requested.for.fullname in $L.new.item=requested.for.fullname in $L.item;requested.for.type in $L.new.item="individual")</rev.desc>
          <rev.desc sctype="string">if (nullsub(createSubscription in $L.bundle.item, false)=false) then (requested.for in $L.new.item=requested.for in $L.item;requested.for.fullname in $L.new.item=requested.for.fullname in $L.item)</rev.desc>
        </rev.desc>
        <change.no type="decimal">2000</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">07/28/07 18:47:44</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR40314 - Task 34969 - Correcting the number of components when ordering more than one of the same bundle. Modified panel move.item info.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Replaced:</rev.desc>
          <rev.desc sctype="string">quantity in $L.new.item=nullsub($L.item.qty, 1)</rev.desc>
          <rev.desc sctype="string">by:</rev.desc>
          <rev.desc sctype="string">$L.bundle.qty=nullsub(quantity in $L.item, 1)</rev.desc>
          <rev.desc sctype="string">quantity in $L.new.item=$L.bundle.qty*nullsub($L.item.qty, 1)</rev.desc>
        </rev.desc>
        <change.no type="decimal">40314</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">05/13/07 19:08:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Copy the serviceSLA from the bundle to the item(s)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">03/24/07 08:12:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing to set subscription flags when new cart items are added.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">The processing of a delivery objective for a Service Catalog bundle is not working.</descript>
      <descript sctype="string">DE2848</descript>
      <descript sctype="string">Recompile for currency app changes</descript>
      <descript sctype="string">TA5108 Changes the currency in the bundle options to the root currency.</descript>
      <descript sctype="string">SCR 41511: use a new variable for sub-bundle options when calling recursively</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel setup.recurse</descript>
      <descript sctype="string">Changed 2nd expression from:</descript>
      <descript sctype="string">$L.subBundle.options=jscall("svcCatBundles.getForm", $L.new.options, "opt"+$L.i, $L.bundle.item)</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">$L.pass.subBundle.options=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+$L.i, $L.bundle.item)</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel recurse</descript>
      <descript sctype="string">Changed the Sub Bundle Options: parameter from</descript>
      <descript sctype="string">$L.subBundle.options</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">$L.pass.subBundle.options</descript>
      <descript sctype="string">SCR40941 - Task 35472:</descript>
      <descript sctype="string">Refactored the code to call getForm for all levels of nested bundles in order to</descript>
      <descript sctype="string">return the options for a bundle. Changed panel move.item.info. Replaced:</descript>
      <descript sctype="string"/>
      <descript sctype="string">if ($L.level&gt;1) then (options in $L.bundle.item=jscall("svcCatBundles.getSubBundleBundleOptions", $L.bundle.options, "opt"+str($L.i), $L.bundle.item)) else (options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+str($L.i), $L.bundle.item))</descript>
      <descript sctype="string"/>
      <descript sctype="string">With:</descript>
      <descript sctype="string"/>
      <descript sctype="string">options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+str($L.i), $L.bundle.item)</descript>
      <descript sctype="string">SCR 40700 - Task 35311: Modified to recurse properly and getthe options for sub bundles.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Added the new character field "$INTO.SUBBUNDLE.OPTIONS" to the panel to return sub Bundle Options.</descript>
      <descript sctype="string"/>
      <descript sctype="string">**Modified panel "start":</descript>
      <descript sctype="string">Added the following line to initialize the new variable:</descript>
      <descript sctype="string">$L.subBundle.options=$INTO.SUBBUNDLE.OPTIONS</descript>
      <descript sctype="string"/>
      <descript sctype="string">**Modified panel "setup.recurse":</descript>
      <descript sctype="string">Added the following line to get the value when recursing:</descript>
      <descript sctype="string">$L.subBundle.options=jscall("svcCatBundles.getForm", $L.new.options, "opt"+$L.i, $L.bundle.item)</descript>
      <descript sctype="string"/>
      <descript sctype="string">**Modified panel "recurse:</descript>
      <descript sctype="string">Added the new parameter to be passed in calling the recursive application:</descript>
      <descript sctype="string">$L.subBundle.options</descript>
      <descript sctype="string"/>
      <descript sctype="string">**Modified panel "get.catalog.id":</descript>
      <descript sctype="string">Changed the call to the checkBundle function by adding the new parameters passed:</descript>
      <descript sctype="string">if ($L.option~="mandatory") then ($L.add=val(jscall("dynamicFormGenerator.checkBundle", $L.check.item, "opt"+str($L.i)), 4))</descript>
      <descript sctype="string">Changed:</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">if ($L.option~="mandatory") then ($L.add=val(jscall("dynamicFormGenerator.checkBundle", $L.check.item, "opt"+str($L.i), $L.level,</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.subBundle.options), 4))</descript>
      <descript sctype="string"/>
      <descript sctype="string">**Modified panel "move.item.info":</descript>
      <descript sctype="string">Changed the call to call the new function to get subBundle when bundle whithin bundle:</descript>
      <descript sctype="string">options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+$L.i, $L.bundle.item)</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">if ($L.level&gt;1) then (options in $L.bundle.item=jscall("svcCatBundles.getSubBundleBundleOptions", $L.bundle.options, "opt"+str($L.i), $L.bundle.item))</descript>
      <descript sctype="string"/>
      <descript sctype="string">else (options in $L.bundle.item=jscall("svcCatBundles.getForm", $L.bundle.options, "opt"+str($L.i), $L.bundle.item))</descript>
      <descript sctype="string">DE2000 - Added setting of requester.for.fullname to the component items when expanding a bundle. Modified panel: move.item.info:</descript>
      <descript sctype="string">if (nullsub(createSubscription in $L.bundle.item, false)=true and subscribeIndividual in $L.bundle.item=true) then (requested.for in $L.new.item=requested.for in $L.item;requested.for.fullname in $L.new.item=requested.for.fullname in $L.item;requested.for.type in $L.new.item="individual")</descript>
      <descript sctype="string">if (nullsub(createSubscription in $L.bundle.item, false)=false) then (requested.for in $L.new.item=requested.for in $L.item;requested.for.fullname in $L.new.item=requested.for.fullname in $L.item)</descript>
      <descript sctype="string">SCR40314 - Task 34969 - Correcting the number of components when ordering more than one of the same bundle. Modified panel move.item info.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Replaced:</descript>
      <descript sctype="string">quantity in $L.new.item=nullsub($L.item.qty, 1)</descript>
      <descript sctype="string">by:</descript>
      <descript sctype="string">$L.bundle.qty=nullsub(quantity in $L.item, 1)</descript>
      <descript sctype="string">quantity in $L.new.item=$L.bundle.qty*nullsub($L.item.qty, 1)</descript>
      <descript sctype="string">Copy the serviceSLA from the bundle to the item(s)</descript>
      <descript sctype="string">Added processing to set subscription flags when new cart items are added.</descript>
    </descript>
    <release type="string">SC6.2</release>
    <sysmodcount type="decimal">9</sysmodcount>
    <sysmoduser type="string">zhouanqing</sysmoduser>
    <sysmodtime type="dateTime">07/24/12 11:48:09</sysmodtime>
  </record>
</recordset>
