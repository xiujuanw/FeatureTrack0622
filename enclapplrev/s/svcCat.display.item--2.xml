<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;svcCat.display.item&quot;" recordid="svcCat.display.item">
    <application.name type="string">svcCat.display.item</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">hanrui</rev.name>
        <rev.date type="dateTime">04/23/15 20:23:09</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified validate.options panel to remove Null And Duplicate Option Field Value by adding below line</rev.desc>
          <rev.desc sctype="string">if ($L.valid=true) then (options in $L.item=jscall("xmlFill.removeNullAndDuplicateOptionFieldValue", $L.item, options in $L.item, option.validations in $L.item))</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">10/20/13 18:14:46</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">1. add panel fill.1</rev.desc>
          <rev.desc sctype="string">2. post.display</rev.desc>
          <rev.desc sctype="string">if null($L.requested.for.fullname) then (</rev.desc>
          <rev.desc sctype="string">$L.requested.for.fullname=""</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">if $full.name then (</rev.desc>
          <rev.desc sctype="string">$L.fullnamechanged=null($requested.for.fullname) or not same($L.requested.for.fullname, $requested.for.fullname);</rev.desc>
          <rev.desc sctype="string">if $L.fullnamechanged then (</rev.desc>
          <rev.desc sctype="string">$requested.for=NULL</rev.desc>
          <rev.desc sctype="string">);</rev.desc>
          <rev.desc sctype="string">if (not null($requested.for)) then (</rev.desc>
          <rev.desc sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</rev.desc>
          <rev.desc sctype="string">) else (</rev.desc>
          <rev.desc sctype="string">$L.count=jscall("userUtils.countContactByField", "full.name", $requested.for.fullname);</rev.desc>
          <rev.desc sctype="string">if (1=$L.count) then (</rev.desc>
          <rev.desc sctype="string">$L.contact=jscall("userUtils.findContactByField", "full.name", $requested.for.fullname);</rev.desc>
          <rev.desc sctype="string">$requested.for=contact.name in $L.contact</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">) else (</rev.desc>
          <rev.desc sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</rev.desc>
          <rev.desc sctype="string">)</rev.desc>
          <rev.desc sctype="string">$L.requested.for.fullname=$requested.for.fullname</rev.desc>
        </rev.desc>
        <change.no type="decimal">10020</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">10/13/13 20:18:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel: post.display:</rev.desc>
          <rev.desc sctype="string">Using following get contact</rev.desc>
          <rev.desc sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</rev.desc>
        </rev.desc>
        <change.no type="decimal">100200</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">11/01/12 14:12:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The Date and Time format in SRC not consistent across all date fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">87767</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Zhang, Ming-Di</rev.name>
        <rev.date type="dateTime">07/08/12 07:21:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QCCR1E76998 The "Requested For" field in Service Catalog is not consistently validated</rev.desc>
        </rev.desc>
        <change.no type="decimal">76998</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pengfei</rev.name>
        <rev.date type="dateTime">06/17/12 00:42:33</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The Cancellation Requested should be checked in subscription</rev.desc>
        </rev.desc>
        <change.no type="decimal">76364</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pengfei</rev.name>
        <rev.date type="dateTime">06/16/12 23:23:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Rollback 76364</rev.desc>
        </rev.desc>
        <change.no type="decimal">76364</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pengfei</rev.name>
        <rev.date type="dateTime">06/04/12 20:57:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">User cannot submit another subscription for the same item even after the initial subscription is in Canceled or Denied status.</rev.desc>
        </rev.desc>
        <change.no type="decimal">76364</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhamingd</rev.name>
        <rev.date type="dateTime">05/11/11 08:18:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QCCR1E63613</rev.desc>
          <rev.desc sctype="string">"Requested For" field in Service Catalog is not consistently validated</rev.desc>
        </rev.desc>
        <change.no type="decimal">251376</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">xxia</rev.name>
        <rev.date type="dateTime">10/08/01 03:27:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">option is not considered when  checking for existing subscription/request</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel: post.display</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">for $L.i = 1 to lng(denull(bundle in $L.item)) do ($L.selected=false;if (3 in $L.i in bundle in $L.item="mandatory") then ($L.selected=true) else ($L.selected=val(jscall("svcCatBundles.isSelected", options in $L.item, "opt"+$L.i), 4));$L.selected=nullsub($L.selected, false);if (not $L.selected) then ($L.index=index(2 in $L.i in bundle in $L.item, $L.bundle.items);$L.bundle.items=delete($L.bundle.items, $L.index);$L.bundle.types=delete($L.bundle.types, $L.index);$L.bundle.subscriptionItem=delete($L.bundle.subscriptionItem, $L.index)))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel: init.nested.next</rev.desc>
          <rev.desc sctype="string">$L.nested.next.options={}</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel: add.to.nested.next</rev.desc>
          <rev.desc sctype="string">if ($L.rc~=3) then ($L.nested.next=$L.nested.next+{name in $L.svcCatalog};$L.nested.next.rf=$L.nested.next.rf+{requested.for in $L.cart.item.temp};$L.nested.next.options=$L.nested.next.options+{options in $L.svcCartItem})</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel: init.bundle.vars.2</rev.desc>
          <rev.desc sctype="string">$L.nested=1 in $L.nested.next;$L.nested.rf=1 in $L.nested.next.rf;$L.nested.options=1 in $L.nested.next.options</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel: build.bundle.array.2</rev.desc>
          <rev.desc sctype="string">for $L.i = 1 to $L.bundle.lng do ($L.selected=false;if (3 in $L.i in bundle in $L.svcCatalog.main="mandatory") then ($L.selected=true) else ($L.selected=val(jscall("svcCatBundles.isSelected", $L.nested.options, "opt"+$L.i), 4));$L.selected=nullsub($L.selected, false);if (not null(2 in $L.i in bundle in $L.svcCatalog.main) and $L.selected) then ($L.bundle.items.tmp=$L.bundle.items.tmp+{2 in $L.i in bundle in $L.svcCatalog.main}))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel: delete.nested.2</rev.desc>
          <rev.desc sctype="string">$L.nested.next.options=delete($L.nested.next.options, 1, 1)</rev.desc>
        </rev.desc>
        <change.no type="decimal">55227</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">rolfel</rev.name>
        <rev.date type="dateTime">10/02/29 07:04:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QC53994 - Service Catalog: Unlinked image can't be retrieve if any file has been attached to the catalog</rev.desc>
          <rev.desc sctype="string">Panel: "setup.item"</rev.desc>
          <rev.desc sctype="string">Changed the line:</rev.desc>
          <rev.desc sctype="string">$L.image="svcCatalog;"+name in $L.item</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.image="joinsvcDisplay;"+name in $L.item</rev.desc>
        </rev.desc>
        <change.no type="decimal">53994</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">10/03/26 05:08:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QCCR53773:</rev.desc>
          <rev.desc sctype="string">Modified to add the image as $L.image and set it up in the panel setup.item:</rev.desc>
          <rev.desc sctype="string">Added:</rev.desc>
          <rev.desc sctype="string">$L.image="svcCatalog;"+name in $L.item</rev.desc>
          <rev.desc sctype="string">Modified the following 2 lines to add $L.image to be passed in $L.names and $L.values:</rev.desc>
          <rev.desc sctype="string">$L.names={"$L.format", "$L.search.condition", "$L.configure", "$L.image", "$L.cost", "$L.root.cost", "$L.one.click", "$L.recurring.cost", "$L.title", "$L.option.text", "$L.options.msg", "$L.mode"}</rev.desc>
          <rev.desc sctype="string">$L.values={$L.format, true, $L.configure, $L.image, $L.cost, $L.root.cost,</rev.desc>
        </rev.desc>
        <change.no type="decimal">53773</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">09/08/21 09:04:58</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Service Catalog uses incorrect contact when creating an svcCartItem</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">update panel start and post.display, use contact.name instead of full.name</rev.desc>
        </rev.desc>
        <change.no type="decimal">48548</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">08/09/19 12:08:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">* Modified panel 'build.Subscription.bundle.qry' to point to the correct subscription item. It was pointing to the $L.item which was the bundle , line 1 changed from:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (not null(subscriptionItem in $L.item)) then ($L.Subscription.qry="serviceName=\""+str(subscriptionItem in $L.item)+"\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"") else ($L.Subscription.qry="serviceName=\"NONE\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"")</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">if (not null($L.count in $L.bundle.subscriptionItem) and $L.count in $L.bundle.subscriptionItem~="NONE") then ($L.Subscription.qry="serviceName=\""+str($L.count in $L.bundle.subscriptionItem)+"\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"") else ($L.Subscription.qry="serviceName=\"NONE\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"")</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Modified panel 'check.pending.bundle' to increment the count and go through the entire loop of the items in bundles. Added exit to panel 'inc.count' with the following condition:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.count&lt;=lng(denull($L.bundle.items))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">* Modified panel 'check.if.nested.bundle' to check ifthe subscription item was set to "NONE" since the code is setting that to "NONE" when it is null. Line 3 changed from:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">for $L.i = 1 to lng(denull($L.svcCartItem.all.items)) do (if ($L.i in $L.svcCartItem.all.items=$L.count in $L.bundle.items and $L.i in $L.svcCartItem.all.types="SI" and $L.i in $L.svcCartItem.all.subscriptionItem=$L.count in $L.bundle.subscriptionItem and $L.i in $L.svcCartItem.all.rf=requested.for in $L.cart.item.temp) then ($L.pending=true))</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">for $L.i = 1 to lng(denull($L.svcCartItem.all.items)) do (if ($L.i in $L.svcCartItem.all.items=$L.count in $L.bundle.items and $L.i in $L.svcCartItem.all.types="SI" and $L.i in $L.svcCartItem.all.subscriptionItem=$L.count in $L.bundle.subscriptionItem and $L.count in $L.bundle.subscriptionItem~="NONE" and $L.i in $L.svcCartItem.all.rf=requested.for in $L.cart.item.temp) then ($L.pending=true))</rev.desc>
        </rev.desc>
        <change.no type="decimal">4716</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">08/04/17 09:22:43</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2848</rev.desc>
          <rev.desc sctype="string">Recompile for currency app changes</rev.desc>
        </rev.desc>
        <change.no type="decimal">2848</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">08/04/11 23:49:48</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA5108:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Display the correct currency in the options</rev.desc>
        </rev.desc>
        <change.no type="decimal">5108</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">08/04/02 16:17:20</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">TA4996 and 4999:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel check.cost:</rev.desc>
          <rev.desc sctype="string">Changed exit from format.cost to get.display.cost</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Added panel get.display.cost of format "us.convert.currency":</rev.desc>
          <rev.desc sctype="string">Returning $L.displayCost and exiting to format.cost</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel format.cost:</rev.desc>
          <rev.desc sctype="string">cost in $L.item to $L.displayCost</rev.desc>
          <rev.desc sctype="string">currency in $L.item to $G.my.currency</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed check.recurring.cost panel:</rev.desc>
          <rev.desc sctype="string">Changed exit from format.recurring.cost to get.display.recurring.cost</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Added panel get.display.recurring.cost of format "us.convert.currency":</rev.desc>
          <rev.desc sctype="string">Returning $L.displayrecurringCost and exiting to format.recurring.cost</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">*Changed panel format.recurring.cost:</rev.desc>
          <rev.desc sctype="string">recurring.cost in $L.item to $L.displayrecurringCost</rev.desc>
          <rev.desc sctype="string">currency in $L.item to $G.my.currency</rev.desc>
        </rev.desc>
        <change.no type="decimal">4999</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/03/15 13:20:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel post.display</rev.desc>
          <rev.desc sctype="string">Added expression:</rev.desc>
          <rev.desc sctype="string">$L.split.items=false</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel add.to.cart</rev.desc>
          <rev.desc sctype="string">Set Split Items? parameter to: $L.split.items</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel add.one.item.to.cart</rev.desc>
          <rev.desc sctype="string">Set Split Items? parameter to: $L.split.items</rev.desc>
        </rev.desc>
        <change.no type="decimal">41555</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/31/23 22:18:41</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">S2507 - On start and set.requested.for panels, set $restrictQuantity flag depending on restrictQuantity field value specified in the svcCatalog record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/31/09 17:18:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE1952 - On the post.display panel, 2nd IF-THEN statement, set requested.for to $L.requested.for by default instead of $lo.contact.name.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/30/30 08:56:31</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">S2371 - Added parameter to pass in Service Recipient (contact.name) from an Interaction record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/06/05 08:43:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">changes to allow for validation of the Requested For field value against existing/pending Subscriptions</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">07/06/17 00:54:41</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Subscription query was not being set correctly due to incorrect value in the $L.subscribevalue. Set the requested.for in $L.cart.item.temp to the contact.name value instead of $requested.for which can be the full name value in order to set the correct value for the subscription query. Changed $requested.for in the following panels:</rev.desc>
          <rev.desc sctype="string">build.Subscription.qry, select.svcCartItem.all, build.Subscription.qry, build.Subscription.bundle.qry, build.svcCartItem.bundle.qry, and</rev.desc>
          <rev.desc sctype="string">check.if.nested.bundle</rev.desc>
        </rev.desc>
        <change.no type="decimal">1239</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">07/06/09 00:53:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE1239: displaying fullname instead of contact.name in the cart item.</rev.desc>
          <rev.desc sctype="string">Modified panel post.display. removed the following line:</rev.desc>
          <rev.desc sctype="string">if (type in $L.item~="bundle" and $createSubscription and $requested.for.type="individual" and null($requested.for)) then ($requested.for=$lo.contact.name)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Also modified panels start, set.cart.item, and set.requested.for</rev.desc>
        </rev.desc>
        <change.no type="decimal">1239</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">07/03/07 20:18:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Pass the agreement id to the Service SLA and Delivery Objective setup routines.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">07/03/06 23:30:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Make Service SLA mandatory if there are any to choose from</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">07/03/04 15:38:46</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added support for Find (used for Service SLAs)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">07/03/04 13:50:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added support for service SLAs</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">07/02/29 16:09:16</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Pulled the code that builds the delivery objectives list out in a separate RAD application (svcCat.setup.del.obj.list).  Functionality was not changed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">40046</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/02/24 03:22:11</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/02/19 01:08:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing to check whether or not subscribable items in a bundle already have a Subscription.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/01/01 14:01:27</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing for new Subscription fields on panel=post.display and check.Subscription+</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">06/07/10 01:49:20</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx I1830: Check for null requested for and display a message if the value is null:</rev.desc>
          <rev.desc sctype="string">Modified Decision panel check.valid.item and added "$L.requested" to conditions for exit.</rev.desc>
          <rev.desc sctype="string">Modified process panel validate options and added a check for requested for:</rev.desc>
          <rev.desc sctype="string">$L.requested=jscall("dynamicFormValidation.requestedForIsValid", $requested.for)</rev.desc>
        </rev.desc>
        <change.no type="decimal">1830</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">06/03/29 07:22:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added a nullsub to non.cart so that the else block of the if statement would run if non.cart was NULL.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">06/01/09 15:26:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Adding Split Functionality</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">Modified validate.options panel to remove Null And Duplicate Option Field Value by adding below line</descript>
      <descript sctype="string">if ($L.valid=true) then (options in $L.item=jscall("xmlFill.removeNullAndDuplicateOptionFieldValue", $L.item, options in $L.item, option.validations in $L.item))</descript>
      <descript sctype="string">1. add panel fill.1</descript>
      <descript sctype="string">2. post.display</descript>
      <descript sctype="string">if null($L.requested.for.fullname) then (</descript>
      <descript sctype="string">$L.requested.for.fullname=""</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">if $full.name then (</descript>
      <descript sctype="string">$L.fullnamechanged=null($requested.for.fullname) or not same($L.requested.for.fullname, $requested.for.fullname);</descript>
      <descript sctype="string">if $L.fullnamechanged then (</descript>
      <descript sctype="string">$requested.for=NULL</descript>
      <descript sctype="string">);</descript>
      <descript sctype="string">if (not null($requested.for)) then (</descript>
      <descript sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</descript>
      <descript sctype="string">) else (</descript>
      <descript sctype="string">$L.count=jscall("userUtils.countContactByField", "full.name", $requested.for.fullname);</descript>
      <descript sctype="string">if (1=$L.count) then (</descript>
      <descript sctype="string">$L.contact=jscall("userUtils.findContactByField", "full.name", $requested.for.fullname);</descript>
      <descript sctype="string">$requested.for=contact.name in $L.contact</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">) else (</descript>
      <descript sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</descript>
      <descript sctype="string">)</descript>
      <descript sctype="string">$L.requested.for.fullname=$requested.for.fullname</descript>
      <descript sctype="string">Panel: post.display:</descript>
      <descript sctype="string">Using following get contact</descript>
      <descript sctype="string">$L.contact=jscall("userUtils.findContactByField", "contact.name", $requested.for)</descript>
      <descript sctype="string">The Date and Time format in SRC not consistent across all date fields</descript>
      <descript sctype="string">QCCR1E76998 The "Requested For" field in Service Catalog is not consistently validated</descript>
      <descript sctype="string">The Cancellation Requested should be checked in subscription</descript>
      <descript sctype="string">Rollback 76364</descript>
      <descript sctype="string">User cannot submit another subscription for the same item even after the initial subscription is in Canceled or Denied status.</descript>
      <descript sctype="string">QCCR1E63613</descript>
      <descript sctype="string">"Requested For" field in Service Catalog is not consistently validated</descript>
      <descript sctype="string">option is not considered when  checking for existing subscription/request</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel: post.display</descript>
      <descript sctype="string"/>
      <descript sctype="string">for $L.i = 1 to lng(denull(bundle in $L.item)) do ($L.selected=false;if (3 in $L.i in bundle in $L.item="mandatory") then ($L.selected=true) else ($L.selected=val(jscall("svcCatBundles.isSelected", options in $L.item, "opt"+$L.i), 4));$L.selected=nullsub($L.selected, false);if (not $L.selected) then ($L.index=index(2 in $L.i in bundle in $L.item, $L.bundle.items);$L.bundle.items=delete($L.bundle.items, $L.index);$L.bundle.types=delete($L.bundle.types, $L.index);$L.bundle.subscriptionItem=delete($L.bundle.subscriptionItem, $L.index)))</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel: init.nested.next</descript>
      <descript sctype="string">$L.nested.next.options={}</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel: add.to.nested.next</descript>
      <descript sctype="string">if ($L.rc~=3) then ($L.nested.next=$L.nested.next+{name in $L.svcCatalog};$L.nested.next.rf=$L.nested.next.rf+{requested.for in $L.cart.item.temp};$L.nested.next.options=$L.nested.next.options+{options in $L.svcCartItem})</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel: init.bundle.vars.2</descript>
      <descript sctype="string">$L.nested=1 in $L.nested.next;$L.nested.rf=1 in $L.nested.next.rf;$L.nested.options=1 in $L.nested.next.options</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel: build.bundle.array.2</descript>
      <descript sctype="string">for $L.i = 1 to $L.bundle.lng do ($L.selected=false;if (3 in $L.i in bundle in $L.svcCatalog.main="mandatory") then ($L.selected=true) else ($L.selected=val(jscall("svcCatBundles.isSelected", $L.nested.options, "opt"+$L.i), 4));$L.selected=nullsub($L.selected, false);if (not null(2 in $L.i in bundle in $L.svcCatalog.main) and $L.selected) then ($L.bundle.items.tmp=$L.bundle.items.tmp+{2 in $L.i in bundle in $L.svcCatalog.main}))</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel: delete.nested.2</descript>
      <descript sctype="string">$L.nested.next.options=delete($L.nested.next.options, 1, 1)</descript>
      <descript sctype="string">QC53994 - Service Catalog: Unlinked image can't be retrieve if any file has been attached to the catalog</descript>
      <descript sctype="string">Panel: "setup.item"</descript>
      <descript sctype="string">Changed the line:</descript>
      <descript sctype="string">$L.image="svcCatalog;"+name in $L.item</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.image="joinsvcDisplay;"+name in $L.item</descript>
      <descript sctype="string">QCCR53773:</descript>
      <descript sctype="string">Modified to add the image as $L.image and set it up in the panel setup.item:</descript>
      <descript sctype="string">Added:</descript>
      <descript sctype="string">$L.image="svcCatalog;"+name in $L.item</descript>
      <descript sctype="string">Modified the following 2 lines to add $L.image to be passed in $L.names and $L.values:</descript>
      <descript sctype="string">$L.names={"$L.format", "$L.search.condition", "$L.configure", "$L.image", "$L.cost", "$L.root.cost", "$L.one.click", "$L.recurring.cost", "$L.title", "$L.option.text", "$L.options.msg", "$L.mode"}</descript>
      <descript sctype="string">$L.values={$L.format, true, $L.configure, $L.image, $L.cost, $L.root.cost,</descript>
      <descript sctype="string">Service Catalog uses incorrect contact when creating an svcCartItem</descript>
      <descript sctype="string"/>
      <descript sctype="string">update panel start and post.display, use contact.name instead of full.name</descript>
      <descript sctype="string">* Modified panel 'build.Subscription.bundle.qry' to point to the correct subscription item. It was pointing to the $L.item which was the bundle , line 1 changed from:</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (not null(subscriptionItem in $L.item)) then ($L.Subscription.qry="serviceName=\""+str(subscriptionItem in $L.item)+"\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"") else ($L.Subscription.qry="serviceName=\"NONE\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"")</descript>
      <descript sctype="string"/>
      <descript sctype="string">To:</descript>
      <descript sctype="string"/>
      <descript sctype="string">if (not null($L.count in $L.bundle.subscriptionItem) and $L.count in $L.bundle.subscriptionItem~="NONE") then ($L.Subscription.qry="serviceName=\""+str($L.count in $L.bundle.subscriptionItem)+"\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"") else ($L.Subscription.qry="serviceName=\"NONE\" and subscriber=\""+str(requested.for in $L.cart.item.temp)+"\" and subscriberType=\"contacts\" and status~=\"Canceled\"")</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">* Modified panel 'check.pending.bundle' to increment the count and go through the entire loop of the items in bundles. Added exit to panel 'inc.count' with the following condition:</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.count&lt;=lng(denull($L.bundle.items))</descript>
      <descript sctype="string"/>
      <descript sctype="string"/>
      <descript sctype="string">* Modified panel 'check.if.nested.bundle' to check ifthe subscription item was set to "NONE" since the code is setting that to "NONE" when it is null. Line 3 changed from:</descript>
      <descript sctype="string"/>
      <descript sctype="string">for $L.i = 1 to lng(denull($L.svcCartItem.all.items)) do (if ($L.i in $L.svcCartItem.all.items=$L.count in $L.bundle.items and $L.i in $L.svcCartItem.all.types="SI" and $L.i in $L.svcCartItem.all.subscriptionItem=$L.count in $L.bundle.subscriptionItem and $L.i in $L.svcCartItem.all.rf=requested.for in $L.cart.item.temp) then ($L.pending=true))</descript>
      <descript sctype="string"/>
      <descript sctype="string">To:</descript>
      <descript sctype="string"/>
      <descript sctype="string">for $L.i = 1 to lng(denull($L.svcCartItem.all.items)) do (if ($L.i in $L.svcCartItem.all.items=$L.count in $L.bundle.items and $L.i in $L.svcCartItem.all.types="SI" and $L.i in $L.svcCartItem.all.subscriptionItem=$L.count in $L.bundle.subscriptionItem and $L.count in $L.bundle.subscriptionItem~="NONE" and $L.i in $L.svcCartItem.all.rf=requested.for in $L.cart.item.temp) then ($L.pending=true))</descript>
      <descript sctype="string">DE2848</descript>
      <descript sctype="string">Recompile for currency app changes</descript>
      <descript sctype="string">TA5108:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Display the correct currency in the options</descript>
      <descript sctype="string">TA4996 and 4999:</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel check.cost:</descript>
      <descript sctype="string">Changed exit from format.cost to get.display.cost</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Added panel get.display.cost of format "us.convert.currency":</descript>
      <descript sctype="string">Returning $L.displayCost and exiting to format.cost</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel format.cost:</descript>
      <descript sctype="string">cost in $L.item to $L.displayCost</descript>
      <descript sctype="string">currency in $L.item to $G.my.currency</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed check.recurring.cost panel:</descript>
      <descript sctype="string">Changed exit from format.recurring.cost to get.display.recurring.cost</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Added panel get.display.recurring.cost of format "us.convert.currency":</descript>
      <descript sctype="string">Returning $L.displayrecurringCost and exiting to format.recurring.cost</descript>
      <descript sctype="string"/>
      <descript sctype="string">*Changed panel format.recurring.cost:</descript>
      <descript sctype="string">recurring.cost in $L.item to $L.displayrecurringCost</descript>
      <descript sctype="string">currency in $L.item to $G.my.currency</descript>
      <descript sctype="string">Panel post.display</descript>
      <descript sctype="string">Added expression:</descript>
      <descript sctype="string">$L.split.items=false</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel add.to.cart</descript>
      <descript sctype="string">Set Split Items? parameter to: $L.split.items</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel add.one.item.to.cart</descript>
      <descript sctype="string">Set Split Items? parameter to: $L.split.items</descript>
      <descript sctype="string">S2507 - On start and set.requested.for panels, set $restrictQuantity flag depending on restrictQuantity field value specified in the svcCatalog record.</descript>
      <descript sctype="string">DE1952 - On the post.display panel, 2nd IF-THEN statement, set requested.for to $L.requested.for by default instead of $lo.contact.name.</descript>
      <descript sctype="string">S2371 - Added parameter to pass in Service Recipient (contact.name) from an Interaction record.</descript>
      <descript sctype="string">changes to allow for validation of the Requested For field value against existing/pending Subscriptions</descript>
      <descript sctype="string">Subscription query was not being set correctly due to incorrect value in the $L.subscribevalue. Set the requested.for in $L.cart.item.temp to the contact.name value instead of $requested.for which can be the full name value in order to set the correct value for the subscription query. Changed $requested.for in teh following panels:</descript>
      <descript sctype="string">build.Subscription.qry, select.svcCartItem.all, build.Subscription.qry, build.Subscription.bundle.qry, build.svcCartItem.bundle.qry, and</descript>
      <descript sctype="string">check.if.nested.bundle</descript>
      <descript sctype="string">DE1239: displaying fullname instead of contact.name in the cart item.</descript>
      <descript sctype="string">Modified panel post.display. removed the following line:</descript>
      <descript sctype="string">if (type in $L.item~="bundle" and $createSubscription and $requested.for.type="individual" and null($requested.for)) then ($requested.for=$lo.contact.name)</descript>
      <descript sctype="string"/>
      <descript sctype="string">Also modified panels start, set.cart.item, and set.requested.for</descript>
      <descript sctype="string">Pass the agreement id to the Service SLA and Delivery Objective setup routines.</descript>
      <descript sctype="string">Make Service SLA mandatory if there are any to choose from</descript>
      <descript sctype="string">Added support for Find (used for Service SLAs)</descript>
      <descript sctype="string">Added support for service SLAs</descript>
      <descript sctype="string">Pulled the code that builds the delivery objectives list out in a separate RAD application (svcCat.setup.del.obj.list).  Functionality was not changed.</descript>
      <descript sctype="string">Added processing to determine display conditions for Requested For radio button fields if item being requested is a bundle.</descript>
      <descript sctype="string">Added processing for new Subscription fields on panel=post.display and check.Subscription+</descript>
      <descript sctype="string">devtx I1830: Check for null requested for and display a message if the value is null:</descript>
      <descript sctype="string">Modified Decision panel check.valid.item and added "$L.requested" to conditions for exit.</descript>
      <descript sctype="string">Modified process panel validate options and added a check for requested for:</descript>
      <descript sctype="string">$L.requested=jscall("dynamicFormValidation.requestedForIsValid", $requested.for)</descript>
      <descript sctype="string">Added a nullsub to non.cart so that the else block of the if statement would run if non.cart was NULL.</descript>
      <descript sctype="string">Adding Split Functionality</descript>
    </descript>
    <release type="string">SC6.2</release>
    <sysmodcount type="decimal">28</sysmodcount>
    <sysmoduser type="string">hanrui</sysmoduser>
    <sysmodtime type="dateTime">04/23/15 20:24:13</sysmodtime>
  </record>
</recordset>
