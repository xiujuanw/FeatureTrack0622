<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;se.get.object&quot;" recordid="se.get.object">
    <application.name type="string">se.get.object</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">05/02/16 21:39:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel check, handle Service Catalog specially</rev.desc>
        </rev.desc>
        <change.no type="decimal">14769</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">07/08/15 08:05:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel get.datadict, call StringUtil.escapeAllStr($G.user.role)</rev.desc>
        </rev.desc>
        <change.no type="decimal">125326</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">panjun</rev.name>
        <rev.date type="dateTime">04/02/13 04:25:43</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel: set.env</rev.desc>
          <rev.desc sctype="string">change to use $L.tableAccess.view</rev.desc>
        </rev.desc>
        <change.no type="decimal">93024</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">panjun</rev.name>
        <rev.date type="dateTime">04/02/13 03:33:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel: set.env</rev.desc>
          <rev.desc sctype="string">if tableAccess don't have view access, set authoroized to false</rev.desc>
        </rev.desc>
        <change.no type="decimal">93145</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">rolfel</rev.name>
        <rev.date type="dateTime">11/30/11 00:10:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QCCR1E68728 - Not able to open or update a change from old applications due to passing in wrong environment variable.  Modified se.get.object to get the correct variable for secRoleBasedAccess environment applications.</rev.desc>
          <rev.desc sctype="string">Panel:	check.env</rev.desc>
          <rev.desc sctype="string">Change:Removed the exit to the "no.unique" panelAdded another exit to the "get.env" panelPanel:	no.unique</rev.desc>
          <rev.desc sctype="string">Change:Removed unused panel</rev.desc>
        </rev.desc>
        <change.no type="decimal">68728</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">08/09/06 04:53:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel get.datadict</rev.desc>
          <rev.desc sctype="string">Added nullsub(,false) to $L.data.access.query1=nullsub("db.table=\""+$L.object.name+"\" and is.operator=true and userrole=\""+str(operator())+"\"", false)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">05/21/06 02:59:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DEVTX I1545</rev.desc>
          <rev.desc sctype="string">Updated the set.env panel</rev.desc>
          <rev.desc sctype="string">From:</rev.desc>
          <rev.desc sctype="string">$L.void=evaluate(parse("$L.env="+str(profile.variable in $L.object), 11))</rev.desc>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.void=evaluate(parse("$L.env="+str(profile.variable in $L.object), 11))</rev.desc>
          <rev.desc sctype="string">if (not null($L.env)) then ($L.authorized=true)</rev.desc>
          <rev.desc sctype="string">$L.set.access=true</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">04/03/06 06:57:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed un needed line in set.access</rev.desc>
          <rev.desc sctype="string">if ($L.set.access=false) then (engine.access in $L.object=false)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/29/06 20:14:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added in changes to use the Prohibit Default Access flag in the datadict record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/27/06 19:44:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed some more debug statements.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/27/06 19:39:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed debug statements from earlier changes.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.junk=rtecall("log", $L.rcode, "In the userrole $L.data.access.query1 is:")</rev.desc>
          <rev.desc sctype="string">$L.junk=rtecall("log", $L.rcode, $L.data.access.query1)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.junk=rtecall("log", $L.rcode, "In the userrole $L.data.access.query2 is:")</rev.desc>
          <rev.desc sctype="string">$L.junk=rtecall("log", $L.rcode, $L.data.access.query2)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.junk=rtecall("log", $L.rcode, "In the userrole $L.object.name is:")</rev.desc>
          <rev.desc sctype="string">$L.junk=rtecall("log", $L.rcode, $L.object.name)</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">03/22/06 22:02:01</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel check.env</rev.desc>
          <rev.desc sctype="string">Changed 4th condition from</rev.desc>
          <rev.desc sctype="string">not null(evaluate(parse(profile.variable in $L.object, 2)))</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">not null(contents(evaluate(parse(profile.variable in $L.object, 2))))</rev.desc>
        </rev.desc>
        <change.no type="decimal">38434</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/20/06 00:47:10</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now a dataaccess record associated to an operator or userrole cang be used  to prevent access to any table it is set up to be restrictive.  This will over ride formatctrl privilages.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/19/06 16:24:18</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changes to use dataaccess record to define view and data access.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">11/14/05 20:54:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel start</rev.desc>
          <rev.desc sctype="string">Added</rev.desc>
          <rev.desc sctype="string">if ($L.object.type="contacts") then ($L.query="file.name=\"contacts\"")</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">11/14/05 20:07:18</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel check.special</rev.desc>
          <rev.desc sctype="string">Added</rev.desc>
          <rev.desc sctype="string">if ($L.object.type="contacts") then (file.name in $L.object=nullsub($L.object.name, file.name in $L.object))</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">06/27/04 23:10:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Always set engine access to true if using the always admin capability word.</rev.desc>
        </rev.desc>
        <change.no type="decimal">28144</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/27/04 22:37:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">will now get proper unique key for joinfiles.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/04/04 22:17:03</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Get the default format even when there is an object record.</rev.desc>
        </rev.desc>
        <change.no type="decimal">14206</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">11/29/03 23:12:52</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">11/29/03 23:04:58</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Moved special object type (pagelist, revision) into the Object/datadict record to reduce selects against datadict.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">10/08/03 01:19:26</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">09/29/03 04:11:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now processes the "engine.access" flag that was added to the datadict and Object files.  The flag is set to true if (1) the file has an Object record, (2) the file is a joinfile or (3) it is checked on the file's datadict record.  If the flag is false, users will not be able to access any records from that file with the engine.</rev.desc>
        </rev.desc>
        <change.no type="decimal">28144</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">09/14/03 04:27:08</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now sets up the default format even for non-DEFAULT type objects.  That way, the display format on the file's datadict record will be used if none is specified on the state record.</rev.desc>
        </rev.desc>
        <change.no type="decimal">27544</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">08/23/03 22:41:29</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added a "default format" for DEFAULT type objects.  This format is read from the "display.format" field in the file's datadict record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/18/03 15:27:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added global.inbox and personal.inbox to list of fields moved from datadict on default objects.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">12/15/02 16:51:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified for viewing revisions.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">07/07/02 05:31:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added "device" as a special object type.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">07/09/01 02:48:08</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added scm. variables to those being copied from datadict on default objects.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">11/09/99 19:50:44</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">update panel check, handle Service Catalog specially</descript>
      <descript sctype="string">update panel get.datadict, call StringUtil.escapeAllStr($G.user.role)</descript>
      <descript sctype="string">panel: set.env</descript>
      <descript sctype="string">change to use $L.tableAccess.view</descript>
      <descript sctype="string">panel: set.env</descript>
      <descript sctype="string">if tableAccess don't have view access, set authoroized to false</descript>
      <descript sctype="string">QCCR1E68728 - Not able to open or update a change from old applications due to passing in wrong environment variable.  Modified se.get.object to get the correct variable for secRoleBasedAccess environment applications.</descript>
      <descript sctype="string">Panel:	check.env</descript>
      <descript sctype="string">Change:Removed the exit to the "no.unique" panelAdded another exit to the "get.env" panelPanel:	no.unique</descript>
      <descript sctype="string">Change:Removed unused panelPanel get.datadict</descript>
      <descript sctype="string">Added nullsub(,false) to $L.data.access.query1=nullsub("db.table=\""+$L.object.name+"\" and is.operator=true and userrole=\""+str(operator())+"\"", false)</descript>
      <descript sctype="string">DEVTX I1545</descript>
      <descript sctype="string">Updated the set.env panel</descript>
      <descript sctype="string">From:</descript>
      <descript sctype="string">$L.void=evaluate(parse("$L.env="+str(profile.variable in $L.object), 11))</descript>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.void=evaluate(parse("$L.env="+str(profile.variable in $L.object), 11))</descript>
      <descript sctype="string">if (not null($L.env)) then ($L.authorized=true)</descript>
      <descript sctype="string">$L.set.access=true</descript>
      <descript sctype="string">Removed un needed line in set.access</descript>
      <descript sctype="string">if ($L.set.access=false) then (engine.access in $L.object=false)</descript>
      <descript sctype="string">Added in changes to use the Prohibit Default Access flag in the datadict record.</descript>
      <descript sctype="string">Removed some more debug statements.</descript>
      <descript sctype="string">Removed debug statements from earlier changes.</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.junk=rtecall("log", $L.rcode, "In the userrole $L.data.access.query1 is:")</descript>
      <descript sctype="string">$L.junk=rtecall("log", $L.rcode, $L.data.access.query1)</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.junk=rtecall("log", $L.rcode, "In the userrole $L.data.access.query2 is:")</descript>
      <descript sctype="string">$L.junk=rtecall("log", $L.rcode, $L.data.access.query2)</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.junk=rtecall("log", $L.rcode, "In the userrole $L.object.name is:")</descript>
      <descript sctype="string">$L.junk=rtecall("log", $L.rcode, $L.object.name)</descript>
      <descript sctype="string">Panel check.env</descript>
      <descript sctype="string">Changed 4th condition from</descript>
      <descript sctype="string">not null(evaluate(parse(profile.variable in $L.object, 2)))</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">not null(contents(evaluate(parse(profile.variable in $L.object, 2))))</descript>
      <descript sctype="string">Now a dataaccess record associated to an operator or userrole cang be used  to prevent access to any table it is set up to be restrictive.  This will over ride formatctrl privilages.</descript>
      <descript sctype="string">Changes to use dataaccess record to define view and data access.</descript>
      <descript sctype="string">Panel start</descript>
      <descript sctype="string">Added</descript>
      <descript sctype="string">if ($L.object.type="contacts") then ($L.query="file.name=\"contacts\"")</descript>
      <descript sctype="string">Panel check.special</descript>
      <descript sctype="string">Added</descript>
      <descript sctype="string">if ($L.object.type="contacts") then (file.name in $L.object=nullsub($L.object.name, file.name in $L.object))</descript>
      <descript sctype="string">Always set engine access to true if using the always admin capability word.</descript>
      <descript sctype="string">will now get proper unique key for joinfiles.</descript>
      <descript sctype="string">Get the default format even when there is an object record.</descript>
      <descript sctype="string">Moved special object type (pagelist, revision) into the Object/datadict record to reduce selects against datadict.</descript>
      <descript sctype="string">Now processes the "engine.access" flag that was added to the datadict and Object files.  The flag is set to true if (1) the file has an Object record, (2) the file is a joinfile or (3) it is checked on the file's datadict record.  If the flag is false, users will not be able to access any records from that file with the engine.</descript>
      <descript sctype="string">Now sets up the default format even for non-DEFAULT type objects.  That way, the display format on the file's datadict record will be used if none is specified on the state record.</descript>
      <descript sctype="string">Added a "default format" for DEFAULT type objects.  This format is read from the "display.format" field in the file's datadict record.</descript>
      <descript sctype="string">Added global.inbox and personal.inbox to list of fields moved from datadict on default objects.</descript>
      <descript sctype="string">Modified for viewing revisions.</descript>
      <descript sctype="string">Added "device" as a special object type.</descript>
      <descript sctype="string">Added scm. variables to those being copied from datadict on default objects.</descript>
    </descript>
    <release type="string">A9901</release>
    <sysmodcount type="decimal">2</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">05/02/16 21:40:16</sysmodtime>
  </record>
</recordset>
