<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;sla.outage.process&quot;" recordid="sla.outage.process">
    <application.name type="string">sla.outage.process</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">lmingyan</rev.name>
        <rev.date type="dateTime">09/08/13 21:22:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Performance issue when saving a change in RAD sla.outage.process</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modify Panel: get.ci</rev.desc>
          <rev.desc sctype="string">to better performance:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">1)  Moving the 'rinit' outside of the 'for' loop as it is not necessary to do this each time.</rev.desc>
          <rev.desc sctype="string">2) Change</rev.desc>
          <rev.desc sctype="string">$L.void=rtecall("rinit", $L.rc, $L.dev, "device");</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.void=rtecall("select", $L.rc, $L.dev, $L.qry, {}, false);</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">To:</rev.desc>
          <rev.desc sctype="string">$L.ci.query.fields = {"logical.name"}</rev.desc>
          <rev.desc sctype="string">$L.void=rtecall("rinit", $L.rc, $L.dev, "device", , true);</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.void=rtecall("select", $L.rc, $L.dev, $L.qry, {}, false, , , $L.ci.fields);</rev.desc>
        </rev.desc>
        <change.no type="decimal">79754</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">06/19/08 05:03:17</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On the spread.level panel, modified the setting of $L.spread.stop to use "Y" or "N" instead of true or false.</rev.desc>
        </rev.desc>
        <change.no type="decimal">41712</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">06/09/08 22:05:27</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Refactored areas of the code to handle multiiple boundary condition types and groupings.</rev.desc>
        </rev.desc>
        <change.no type="decimal">41663</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">08/21/07 03:02:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">modified boundary conditions on get.mode panel, and removed hard-coded filename references on get.ci panel</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/22/07 22:36:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed calls to apm.get.related.query and call.outage.dependency and refactored code to call single RAD app=sc.outage.process for spreading and outage dependency processing.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">04/21/07 08:08:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing to support Change records that are opened against a group CI.</rev.desc>
        </rev.desc>
        <change.no type="decimal">40016</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">01/01/07 05:00:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Refactored code on get.mode panel so that appropriate mode is set prior to check for two-step process.</rev.desc>
        </rev.desc>
        <change.no type="decimal">39492</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">09/09/06 10:52:23</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">devtx I3323</rev.desc>
          <rev.desc sctype="string">Passing original CI list, $L.ci.list.orig, to RAD=sla.outageevent.process via new parm (panel=call.outageevent.process)</rev.desc>
        </rev.desc>
        <change.no type="decimal">3323</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">06/17/06 06:54:01</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made to get.mode panel so that outages are marked as closed when tickets are "resolved", for those systems using the two-step process in Incident Management.</rev.desc>
        </rev.desc>
        <change.no type="decimal">38581</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">04/04/06 12:02:13</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing to get.ci panel to properly set $L.ci.change if the operational flag in probsummary, cm3r or cm3t has switched.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">12/27/05 01:46:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">on panel decide.spread, removed the conditional part of the statement:</rev.desc>
          <rev.desc sctype="string">and $L.mode="start". Now outage spreads are processed regardless of the mode.</rev.desc>
        </rev.desc>
        <change.no type="decimal">38018</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">12/10/05 06:54:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">added processing to support inventory configuration groups</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">12/10/05 00:02:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">combined the panels init.modcontrol and get.control into one panel, called get.control, which calls RAD=se.get.record</rev.desc>
        </rev.desc>
        <change.no type="decimal">37989</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">07/18/05 07:15:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">CP SCR36371</rev.desc>
          <rev.desc sctype="string">updated the get.mode panel.  The device was not being updated with an outage if the outage dates were not updated in the incident.</rev.desc>
          <rev.desc sctype="string">added ' or $L.do.outage=true and $L.old.do.outage=false' to the end of the if statement beginning with:</rev.desc>
          <rev.desc sctype="string">if ($L.mode="none") then if ($L.do.outage=true and $L.old.do.outage=false)</rev.desc>
          <rev.desc sctype="string">This way the outage will be refreshed on the device anytime that the incident goes from operational.device=true to operational.device=false, regardless of whether or not the outage dates were updated.</rev.desc>
        </rev.desc>
        <change.no type="decimal">36371</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">04/19/05 07:32:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing to allow for spreading against all CIs in array list (not just the first one).</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">Performance issue when saving a change in RAD sla.outage.process</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modify Panel: get.ci</descript>
      <descript sctype="string">to better performance:</descript>
      <descript sctype="string"/>
      <descript sctype="string">1)  Moving the 'rinit' outside of the 'for' loop as it is not necessary to do this each time.</descript>
      <descript sctype="string">2) Change</descript>
      <descript sctype="string">$L.void=rtecall("rinit", $L.rc, $L.dev, "device");</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.void=rtecall("select", $L.rc, $L.dev, $L.qry, {}, false);</descript>
      <descript sctype="string"/>
      <descript sctype="string">To:</descript>
      <descript sctype="string">$L.ci.query.fields = {"logical.name"}</descript>
      <descript sctype="string">$L.void=rtecall("rinit", $L.rc, $L.dev, "device", , true);</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.void=rtecall("select", $L.rc, $L.dev, $L.qry, {}, false, , , $L.ci.fields);</descript>
      <descript sctype="string">On the spread.level panel, modified the setting of $L.spread.stop to use "Y" or "N" instead of true or false.</descript>
      <descript sctype="string">Refactored areas of the code to handle multiiple boundary condition types and groupings.</descript>
      <descript sctype="string">modified boundary conditions on get.mode panel, and removed hard-coded filename references on get.ci panel</descript>
      <descript sctype="string">Removed calls to apm.get.related.query and call.outage.dependency and refactored code to call single RAD app=sc.outage.process for spreading and outage dependency processing.</descript>
      <descript sctype="string">Removed calls to apm.get.related.query and call.outage.dependency and refactored code to call single RAD app=sc.outage.process for spreading and outage dependency processing.</descript>
      <descript sctype="string">Added processing to support Change records that are opened against a group CI.</descript>
      <descript sctype="string">Refactored code on get.mode panel so that appropriate mode is set prior to check for two-step process.</descript>
      <descript sctype="string">devtx I3323</descript>
      <descript sctype="string">Passing original CI list, $L.ci.list.orig, to RAD=sla.outageevent.process via new parm (panel=call.outageevent.process)</descript>
      <descript sctype="string">Modification made to get.mode panel so that outages are marked as closed when tickets are "resolved", for those systems using the two-step process in Incident Management.</descript>
      <descript sctype="string">Added processing to get.ci panel to properly set $L.ci.change if the operational flag in probsummary, cm3r or cm3t has switched.</descript>
      <descript sctype="string">on panel decide.spread, removed the conditional part of the statement:</descript>
      <descript sctype="string">and $L.mode="start". Now outage spreads are processed regardless of the mode.</descript>
      <descript sctype="string">added processing to support inventory configuration groups</descript>
      <descript sctype="string">combined the panels init.modcontrol and get.control into one panel, called get.control, which calls RAD=se.get.record</descript>
      <descript sctype="string">CP SCR36371</descript>
      <descript sctype="string">updated the get.mode panel.  The device was not being updated with an outage if the outage dates were not updated in the incident.</descript>
      <descript sctype="string">added ' or $L.do.outage=true and $L.old.do.outage=false' to the end of the if statement beginning with:</descript>
      <descript sctype="string">if ($L.mode="none") then if ($L.do.outage=true and $L.old.do.outage=false)</descript>
      <descript sctype="string">This way the outage will be refreshed on the device anytime that the incident goes from operational.device=true to operational.device=false, regardless of whether or not the outage dates were updated.</descript>
      <descript sctype="string">Added processing to allow for spreading against all CIs in array list (not just the first one).</descript>
    </descript>
    <release type="string">SC6.0</release>
    <sysmodcount type="decimal">12</sysmodcount>
    <sysmoduser type="string">lmingyan</sysmoduser>
    <sysmodtime type="dateTime">09/08/13 21:24:56</sysmodtime>
  </record>
</recordset>
