<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;alert.process&quot;" recordid="alert.process">
    <application.name type="string">alert.process</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">dengxin</rev.name>
        <rev.date type="dateTime">07/03/14 06:46:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel get.special.alert.info</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Add</rev.desc>
          <rev.desc sctype="string">$L.alertConditionResult=nullsub(evaluate(parse(str(alert.condition in $L.alert), 2)), true)</rev.desc>
          <rev.desc sctype="string">if ($L.alertConditionResult="unknown") then ($L.alertConditionResult=true)</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">and use $L.alertConditionResult as condition in check.run.alert panel</rev.desc>
        </rev.desc>
        <change.no type="decimal">103257</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name NullValue="1" type="string"/>
        <rev.date type="dateTime">12/05/12 12:11:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">merge pd4&amp;932</rev.desc>
          <rev.desc sctype="string">rollback 2 object solution</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">panjun</rev.name>
        <rev.date type="dateTime">10/22/12 08:28:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">merge pd4&amp;932</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqin</rev.name>
        <rev.date type="dateTime">09/12/11 03:57:55</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">1.Panel :get.special.alert.info</rev.desc>
          <rev.desc sctype="string">change from</rev.desc>
          <rev.desc sctype="string">if (not null(4 in $L.values)) then (4 in $L.values=val(4 in $L.values, 4))</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">if (not null(4 in $L.values)) then (4 in $L.values=evaluate(parse(4 in $L.values, 4)))</rev.desc>
          <rev.desc sctype="string">2.move panel "get.special.alert.info" to between panel "get.record"  and "check.get.parent"</rev.desc>
          <rev.desc sctype="string">3.panel:check.run.alert</rev.desc>
          <rev.desc sctype="string">change from:</rev.desc>
          <rev.desc sctype="string">nullsub(evaluate(parse(alert.condition in $L.alert, 2)), true)</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">nullsub(evaluate(alert.condition in $L.alert), true)</rev.desc>
        </rev.desc>
        <change.no type="decimal">67566</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">yuli</rev.name>
        <rev.date type="dateTime">04/12/11 18:21:11</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Records are not going to DEADLINE ALERT</rev.desc>
          <rev.desc sctype="string">32396  Alerts defined as Notification Only are not immediately executed when the ticket is locked</rev.desc>
          <rev.desc sctype="string">this change of ticket doesn't merge to other version, hen  merge to 930</rev.desc>
          <rev.desc sctype="string">* check.log - changed normal exit from 'ToDo.recs' to 'after.process'</rev.desc>
          <rev.desc sctype="string">* add.log - changed all the exits from 'ToDo.recs' to 'after.process'</rev.desc>
          <rev.desc sctype="string">* ToDo.recs - replaced panel with a call to 'add.update.todo.records' and changed normal exit from 'after.process' to 'check.update.alert.rec'</rev.desc>
        </rev.desc>
        <change.no type="decimal">57745</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">xxia</rev.name>
        <rev.date type="dateTime">10/08/02 02:03:13</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">revert last change, it may introduce new issue</rev.desc>
        </rev.desc>
        <change.no type="decimal">57085</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">09/30/23 20:01:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On panel=check.run.alert, the decision statement for evaluating the alert.condition field modified to be:</rev.desc>
          <rev.desc sctype="string">nullsub(evaluate(alert.condition in $L.alert), true)</rev.desc>
        </rev.desc>
        <change.no type="decimal">51885</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">yu li</rev.name>
        <rev.date type="dateTime">09/30/03 20:39:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Scheduled alert does not release a locked record if there are no associated corresponding ToDoMap records</rev.desc>
          <rev.desc sctype="string">check unlock before decide exit.</rev.desc>
          <rev.desc sctype="string">move  condition: $exit="error" panel: exit.error.msg from  panel "after.process" to new panel "decide.continue" that put after panel "check.unlock"</rev.desc>
          <rev.desc sctype="string">Add the fix of SCR42445 frist before modify</rev.desc>
          <rev.desc sctype="string">SCR42445 - 'Todo' table is not updated to reflect record changes made via SLA alerts</rev.desc>
          <rev.desc sctype="string">alert.process	-&gt;	ToDo.recs</rev.desc>
          <rev.desc sctype="string">Added a panel called "ToDo.recs" of type "trigger.update.ToDoList"</rev.desc>
          <rev.desc sctype="string">alert.process	-&gt;	add.log</rev.desc>
          <rev.desc sctype="string">Changed the exits from "after.process" to "ToDo.recs"</rev.desc>
          <rev.desc sctype="string">alert.process	-&gt;	check.log</rev.desc>
          <rev.desc sctype="string">Changed the exits from "after.process" to "ToDo.recs"</rev.desc>
        </rev.desc>
        <change.no type="decimal">49261</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">09/08/01 12:18:31</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QC32388 - Modified the following panels:</rev.desc>
          <rev.desc sctype="string">* try.lock - changed 'Reselect' exit from 'incr.reselect' to 'refresh.file'</rev.desc>
          <rev.desc sctype="string">* refresh.file - new process panel that refreshes '$L.file' and exits out to 'check.current'</rev.desc>
          <rev.desc sctype="string">* check.current - new decision panel that calls 'refresh.file' if '$L.file' is not current and 'set.locked' otherwise</rev.desc>
          <rev.desc sctype="string">* start - removed expression:  $L.reselect.count=0</rev.desc>
          <rev.desc sctype="string">* sleep - removed from system</rev.desc>
          <rev.desc sctype="string">* check.reselect.count - removed from system</rev.desc>
          <rev.desc sctype="string">* incr.reselect - removed from system</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This prevents any hanging locks and ensures that the alert continues to process even if the record is modified right after a lock is obtained.</rev.desc>
        </rev.desc>
        <change.no type="decimal">32388</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">09/06/16 01:37:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR37250 - Clean up call to the Todo processing.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">09/06/16 01:22:48</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR37250 - do not attempt to get a lock on the record if the alert definition has the "skip.update" field set to true, as there is no need to lock the record if there is not going to be an update.</rev.desc>
        </rev.desc>
        <change.no type="decimal">37250</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">08/30/09 21:13:31</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR42445</rev.desc>
          <rev.desc sctype="string">added a call to the trigger.update.ToDoList application so that the ToDo list will still get updated even when triggers are turned off.</rev.desc>
        </rev.desc>
        <change.no type="decimal">42445</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">rolfel</rev.name>
        <rev.date type="dateTime">07/09/29 15:59:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SCR38019</rev.desc>
          <rev.desc sctype="string">Panel 'run.alert.exp' added expression:</rev.desc>
          <rev.desc sctype="string">$L.alert.process=update.process in $L.alert</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel 'check.update'</rev.desc>
          <rev.desc sctype="string">Changed exit from 'call.update.process' to 'decide.alert.process'</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel 'decide.alert.process'</rev.desc>
          <rev.desc sctype="string">Added panel 'decide.alert.process' of type 'decision'</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel 'call.alert.process'</rev.desc>
          <rev.desc sctype="string">Added panel 'call.alert.process' of type 'se.call.process'</rev.desc>
        </rev.desc>
        <change.no type="decimal">38019</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/07/14 05:54:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On the check.run.alert panel, changed the eval/parse condition to:</rev.desc>
          <rev.desc sctype="string">nullsub(evaluate(parse(alert.condition in $L.alert, 2)), true)</rev.desc>
        </rev.desc>
        <change.no type="decimal">39933</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/05/19 22:05:13</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing to convert elements of the special.info array (Alert record) into their appropriate data types before being processed (get.special.alert.info panel).</rev.desc>
        </rev.desc>
        <change.no type="decimal">39933</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">07/06/12 04:54:05</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added processing to run.alert.exp panel to turn off triggers if alert type is 'sla'.</rev.desc>
        </rev.desc>
        <change.no type="decimal">39933</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">05/02/07 09:14:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified to unlock if an error exit is taken when evaluating expressions.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/10/07 08:52:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Pass special alert information and labels to notify.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">04/09/07 13:11:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">added call to set special alert information and labels.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">03/31/03 10:02:03</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Will now get a parent record if defined in the Object record.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">02/10/16 06:16:28</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed the parse call on alert.condition on check.run.alert.</rev.desc>
        </rev.desc>
        <change.no type="decimal">24172</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">02/02/10 03:59:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added $L.file.save for us.notify panel.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">01/31/14 07:11:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">After processing all notifications, calls cm3.message.pro to handle any additional messages that are to be sent for CM alerts.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">01/31/07 06:15:23</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now updates the current schedule record when rescheduling instead of adding a new one.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">01/31/04 08:30:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified check.run.alert to parse the alert.condition before it gets evaluated.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">panel get.special.alert.info</descript>
      <descript sctype="string"/>
      <descript sctype="string">Add</descript>
      <descript sctype="string">$L.alertConditionResult=nullsub(evaluate(parse(str(alert.condition in $L.alert), 2)), true)</descript>
      <descript sctype="string">if ($L.alertConditionResult="unknown") then ($L.alertConditionResult=true)</descript>
      <descript sctype="string"/>
      <descript sctype="string">and use $L.alertConditionResult as condition in check.run.alert panel</descript>
      <descript sctype="string">1.Panel :get.special.alert.info</descript>
      <descript sctype="string">change from</descript>
      <descript sctype="string">if (not null(4 in $L.values)) then (4 in $L.values=val(4 in $L.values, 4))</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">if (not null(4 in $L.values)) then (4 in $L.values=evaluate(parse(4 in $L.values, 4)))</descript>
      <descript sctype="string">2.move panel "get.special.alert.info" to between panel "get.record"  and "check.get.parent"</descript>
      <descript sctype="string">3.panel:check.run.alert</descript>
      <descript sctype="string">change from:</descript>
      <descript sctype="string">nullsub(evaluate(parse(alert.condition in $L.alert, 2)), true)</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">nullsub(evaluate(alert.condition in $L.alert), true)</descript>
      <descript sctype="string">Records are not going to DEADLINE ALERT</descript>
      <descript sctype="string">32396  Alerts defined as Notification Only are not immediately executed when the ticket is locked</descript>
      <descript sctype="string">this change of ticket doesn't merge to other version, hen  merge to 930</descript>
      <descript sctype="string">* check.log - changed normal exit from 'ToDo.recs' to 'after.process'</descript>
      <descript sctype="string">* add.log - changed all the exits from 'ToDo.recs' to 'after.process'</descript>
      <descript sctype="string">* ToDo.recs - replaced panel with a call to 'add.update.todo.records' and changed normal exit from 'after.process' to 'check.update.alert.rec'</descript>
      <descript sctype="string">revert last change, it may introduce new issue</descript>
      <descript sctype="string">On panel=check.run.alert, the decision statement for evaluating the alert.condition field modified to be:</descript>
      <descript sctype="string">nullsub(evaluate(alert.condition in $L.alert), true)</descript>
      <descript sctype="string">Scheduled alert does not release a locked record if there are no associated corresponding ToDoMap records</descript>
      <descript sctype="string">check unlock before decide exit.</descript>
      <descript sctype="string">move  condition: $exit="error" panel: exit.error.msg from  panel "after.process" to new panel "decide.continue" that put after panel "check.unlock"</descript>
      <descript sctype="string">Add the fix of SCR42445 frist before modify</descript>
      <descript sctype="string">SCR42445 - 'Todo' table is not updated to reflect record changes made via SLA alerts</descript>
      <descript sctype="string">alert.process	-&gt;	ToDo.recs</descript>
      <descript sctype="string">Added a panel called "ToDo.recs" of type "trigger.update.ToDoList"</descript>
      <descript sctype="string">alert.process	-&gt;	add.log</descript>
      <descript sctype="string">Changed the exits from "after.process" to "ToDo.recs"</descript>
      <descript sctype="string">alert.process	-&gt;	check.log</descript>
      <descript sctype="string">Changed the exits from "after.process" to "ToDo.recs"</descript>
      <descript sctype="string">QC32388 - Modified the following panels:</descript>
      <descript sctype="string">* try.lock - changed 'Reselect' exit from 'incr.reselect' to 'check.current'</descript>
      <descript sctype="string">* check.current - new decision panel that calls 'refresh.file' if '$L.file' is not current and 'set.locked' otherwise</descript>
      <descript sctype="string">* refresh.file - new process panel that refreshes '$L.file' and exits out to 'check.current'</descript>
      <descript sctype="string">* start - removed expression:  $L.reselect.count=0</descript>
      <descript sctype="string">* sleep - removed from system</descript>
      <descript sctype="string">* check.reselect.count - removed from system</descript>
      <descript sctype="string">* incr.reselect - removed from system</descript>
      <descript sctype="string"/>
      <descript sctype="string">This prevents any hanging locks and ensures that the alert continues to process even if the record is modified right after a lock is obtained.</descript>
      <descript sctype="string">SCR37250 - Clean up call to the Todo processing.</descript>
      <descript sctype="string">SCR37250 - do not attempt to get a lock on the record if the alert definition has the "skip.update" field set to true, as there is no need to lock the record if there is not going to be an update.</descript>
      <descript sctype="string">SCR42445</descript>
      <descript sctype="string">added a call to the trigger.update.ToDoList application so that the ToDo list will still get updated even when triggers are turned off.</descript>
      <descript sctype="string">SCR38019</descript>
      <descript sctype="string">Panel 'run.alert.exp' added expression:</descript>
      <descript sctype="string">$L.alert.process=update.process in $L.alert</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel 'check.update'</descript>
      <descript sctype="string">Changed exit from 'call.update.process' to 'decide.alert.process'</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel 'decide.alert.process'</descript>
      <descript sctype="string">Added panel 'decide.alert.process' of type 'decision'</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel 'call.alert.process'</descript>
      <descript sctype="string">Added panel 'call.alert.process' of type 'se.call.process'</descript>
      <descript sctype="string">On the check.run.alert panel, changed the eval/parse condition to:</descript>
      <descript sctype="string">nullsub(evaluate(parse(alert.condition in $L.alert, 2)), true)</descript>
      <descript sctype="string">Added following to convert elements of the special.info array (Alert record) into their appropriate data types before being processed (get.special.alert.info panel).</descript>
      <descript sctype="string">Added processing to run.alert.exp panel to turn off triggers if alert type is 'sla'.</descript>
      <descript sctype="string">Modified to unlock if an error exit is taken when evaluating expressions.</descript>
      <descript sctype="string">Pass special alert information and labels to notify.</descript>
      <descript sctype="string">added call to set special alert information and labels.</descript>
      <descript sctype="string">Will now get a parent record if defined in the Object record.</descript>
      <descript sctype="string">Removed the parse call on alert.condition on check.run.alert.</descript>
      <descript sctype="string">Added $L.file.save for us.notify panel.</descript>
      <descript sctype="string">After processing all notifications, calls cm3.message.pro to handle any additional messages that are to be sent for CM alerts.</descript>
      <descript sctype="string">Now updates the current schedule record when rescheduling instead of adding a new one.</descript>
      <descript sctype="string">Modified check.run.alert to parse the alert.condition before it gets evaluated.</descript>
    </descript>
    <release type="string">A9902</release>
    <sysmodcount type="decimal">18</sysmodcount>
    <sysmoduser type="string">dengxin</sysmoduser>
    <sysmodtime type="dateTime">07/03/14 06:48:20</sysmodtime>
  </record>
</recordset>
