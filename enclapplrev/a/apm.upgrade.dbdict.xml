<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;apm.upgrade.dbdict&quot;" recordid="apm.upgrade.dbdict">
    <application.name type="string">apm.upgrade.dbdict</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">10/21/20 19:35:18</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">remove legacy update oracle dbinfo related panels</rev.desc>
        </rev.desc>
        <change.no type="decimal">161613</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">12/04/16 12:39:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel fcreate.1, change error exit to next.object</rev.desc>
        </rev.desc>
        <change.no type="decimal">137700</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">07/31/16 07:39:59</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">idoltoken length is not upgraded to 500 after upgrade to 950 from 941.</rev.desc>
          <rev.desc sctype="string">Simplify the codes of panel merge.fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">135403</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">07/29/16 08:44:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">idoltoken length is not upgraded to 500 after upgrade to 950 from 941.</rev.desc>
        </rev.desc>
        <change.no type="decimal">135403</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">07/28/16 08:49:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">SM Upgrade cannot identify the field type of dbdict with lower case</rev.desc>
        </rev.desc>
        <change.no type="decimal">135413</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">12/21/15 21:32:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Cannot enlarge the varbinary type field length during the upgrade</rev.desc>
          <rev.desc sctype="string">Consider DB2. Check if the type match "FOR BIT DATA"</rev.desc>
        </rev.desc>
        <change.no type="decimal">120560</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">12/20/15 21:36:17</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Cannot enlarge the varbinary type field length during the upgrade</rev.desc>
          <rev.desc sctype="string">Check if the types match VARBINARY or RAW</rev.desc>
        </rev.desc>
        <change.no type="decimal">120560</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">12/19/15 21:06:23</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Cannot enlarge the varbinary type field length during the upgrade</rev.desc>
        </rev.desc>
        <change.no type="decimal">120560</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">07/18/15 15:23:14</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel "exit.error.msg", turn on counters</rev.desc>
        </rev.desc>
        <change.no type="decimal">119493</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">07/11/15 15:53:24</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel "save.old.dbdict, change error exit to "next.object""</rev.desc>
        </rev.desc>
        <change.no type="decimal">119493</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">06/27/15 11:32:28</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">update panel "save.dbdict", change error exit to "no.update"</rev.desc>
        </rev.desc>
        <change.no type="decimal">124661</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">dalei.xu</rev.name>
        <rev.date type="dateTime">02/17/14 18:11:29</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Optimized upgrade log during applying OOB package and custom package.</rev.desc>
          <rev.desc sctype="string">Modified panel : set.tick, prepare.log.merge.</rev.desc>
        </rev.desc>
        <change.no type="decimal">104655</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">zhouanqing</rev.name>
        <rev.date type="dateTime">07/08/13 18:10:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Some alias tables are not created in db after upgrade to 931</rev.desc>
          <rev.desc sctype="string">Apply table alias changes should be earlier than apply key changes</rev.desc>
        </rev.desc>
        <change.no type="decimal">97486</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Weihua</rev.name>
        <rev.date type="dateTime">12/17/11 01:17:16</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Shifted table alias change from panel=merge.fields to new panel=prep.tablealias.changes and panel=apply.tablealias.changes.</rev.desc>
        </rev.desc>
        <change.no type="decimal">70356</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Jianxin.ZHENG</rev.name>
        <rev.date type="dateTime">09/16/11 02:19:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Init the file of updated dbdict</rev.desc>
        </rev.desc>
        <change.no type="decimal">68502</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lihuan</rev.name>
        <rev.date type="dateTime">08/30/11 23:38:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">modified panel:decipher.logs</rev.desc>
          <rev.desc sctype="string">from :</rev.desc>
          <rev.desc sctype="string">if ($L.field.merged or $L.key.merged) then ($L.updated=true)</rev.desc>
          <rev.desc sctype="string">to:</rev.desc>
          <rev.desc sctype="string">if ($L.field.merged and $L.updated=true) then ($L.field.msg=$L.field.msg+"; Field merged to "+object.name in $L.object)</rev.desc>
          <rev.desc sctype="string">if ($L.key.merged and $L.updated=true) then ($L.field.msg=$L.field.msg+"; Key merged to "+object.name in $L.object)</rev.desc>
          <rev.desc sctype="string">if ($L.field.merged and $L.updated=false) then ($L.updated=true;$L.field.msg="Field merged to "+object.name in $L.object)</rev.desc>
          <rev.desc sctype="string">if ($L.key.merged and $L.updated=false) then ($L.updated=true;$L.field.msg="Key merged to "+object.name in $L.object)</rev.desc>
        </rev.desc>
        <change.no type="decimal">68138</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">Jianxin.ZHENG</rev.name>
        <rev.date type="dateTime">08/07/11 22:41:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">apply adding value for id in notification table to all versions and streamline the process</rev.desc>
        </rev.desc>
        <change.no type="decimal">65212</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">weihua</rev.name>
        <rev.date type="dateTime">08/05/11 23:04:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified panel=select.objects for switching to apply.key.changes if there's no objects</rev.desc>
          <rev.desc sctype="string">Added one panel=prep.key.changes for indicating status on UI</rev.desc>
        </rev.desc>
        <change.no type="decimal">67402</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">todjiang</rev.name>
        <rev.date type="dateTime">06/12/11 00:53:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">add value for id in notification table</rev.desc>
        </rev.desc>
        <change.no type="decimal">65212</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">liuyongl</rev.name>
        <rev.date type="dateTime">05/06/11 07:44:11</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">move the js:upgradeDbdictChangeFieldType to apm.upgrade.wizard</rev.desc>
        </rev.desc>
        <change.no type="decimal">62816</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">tiansha</rev.name>
        <rev.date type="dateTime">04/24/11 03:15:09</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">rollback this enhancement since RTE fix this problem</rev.desc>
        </rev.desc>
        <change.no type="decimal">62428</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">tiansha</rev.name>
        <rev.date type="dateTime">04/16/11 04:20:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">change in merge.fields, update parameter when writing error msg for oracle-ci</rev.desc>
        </rev.desc>
        <change.no type="decimal">62428</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">tiansha</rev.name>
        <rev.date type="dateTime">04/03/11 00:12:29</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">change message:</rev.desc>
          <rev.desc sctype="string">DBDICT PHASE in Progress -&gt; Start DBDICT PHASE</rev.desc>
          <rev.desc sctype="string">DBDICT Phase Complete -&gt; Finish DBDICT PHASE</rev.desc>
        </rev.desc>
        <change.no type="decimal">61462</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">weihua</rev.name>
        <rev.date type="dateTime">03/19/11 11:21:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Delete the callling for script upgradePreKeyChange since it's no longer needed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">62496</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">03/17/11 19:25:44</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">not extend field length if the field is part of key and database is oracle with case insensitive.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">panel: mege.fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">62428</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">tiansha</rev.name>
        <rev.date type="dateTime">03/01/11 17:48:10</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">merge.fields: write field length change to detail instead of upgrade</rev.desc>
        </rev.desc>
        <change.no type="decimal">61462</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">todjiang</rev.name>
        <rev.date type="dateTime">02/25/11 09:52:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Call the script upgradeDatabaseFieldTypeUpdate</rev.desc>
        </rev.desc>
        <change.no type="decimal">245620</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">weihua</rev.name>
        <rev.date type="dateTime">02/23/11 17:47:10</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added two javascript:</rev.desc>
          <rev.desc sctype="string">upgradeCm3r and upgradeTableAliasChanges</rev.desc>
          <rev.desc sctype="string">and added two lines on panel=merge.fields to call the scirpt upgradeTableAliasChanges</rev.desc>
          <rev.desc sctype="string">Also following two panels were added to call script upgradeCm3r</rev.desc>
          <rev.desc sctype="string">decide.upgrade.cm3r and upgrade.cm3r</rev.desc>
        </rev.desc>
        <change.no type="decimal">53738</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">02/16/11 12:09:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">use string instead of number to refer to msgid 1100</rev.desc>
        </rev.desc>
        <change.no type="decimal">53995</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">weihua</rev.name>
        <rev.date type="dateTime">02/04/11 10:34:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added two javascript:</rev.desc>
          <rev.desc sctype="string">upgradeKeyChanges and upgradePreKeyChanges</rev.desc>
          <rev.desc sctype="string">and two panels before panel=exit.normal</rev.desc>
          <rev.desc sctype="string">pre.key.changes and apply.key.changes</rev.desc>
          <rev.desc sctype="string">These two panels are just used to call the two scripts</rev.desc>
        </rev.desc>
        <change.no type="decimal">53295</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">liuyongl</rev.name>
        <rev.date type="dateTime">07/05/01 07:59:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">QCRQ1E53294: add a jscall in the "start" panel, to make all required field type changes.</rev.desc>
        </rev.desc>
        <change.no type="decimal">53294</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">tiansha</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">add merge.fields: only if the new field is character and length is greater than old length, replace the sql type</rev.desc>
          <rev.desc sctype="string">add merge.keys: add new key</rev.desc>
        </rev.desc>
        <change.no type="decimal">54209</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Moving code from 7.10 branch.</rev.desc>
        </rev.desc>
        <change.no type="decimal">53854</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Use the return code from apm.upgrade.merge.new to check for added fields</rev.desc>
        </rev.desc>
        <change.no type="decimal">3521</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ffaegh</rev.name>
        <rev.date type="dateTime">04/02/08 16:58:45</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE3347 - Removing references to upgrade before SC62:</rev.desc>
          <rev.desc sctype="string">** decide.action panel. Removed the following 2 conditions both exiting to prepare.log.merge:</rev.desc>
          <rev.desc sctype="string">name in $L.old="probsummary" and $G.tmpUpgFrmVerSeq&lt;$G.tmpSC5VerSeq</rev.desc>
          <rev.desc sctype="string">name in $L.old={"sla", "rootcause"} and $G.tmpUpgFrmVerSeq&lt;$G.tmpSC61VerSeq</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Removed panels decide.update.activity,process.display.evtopt, process.display.evtopt.1, update.activity.keys</rev.desc>
          <rev.desc sctype="string">Redirected panel check.edit.key   from process.display.evtopt panel to get.sql.options panel.</rev.desc>
          <rev.desc sctype="string">Redirecteded panel edit.fields.010  from process.display.evtopt panel to get.sql.options panel.</rev.desc>
          <rev.desc sctype="string">Redirected panel log.new.fields   from process.display.evtopt panel to get.sql.options panel.</rev.desc>
          <rev.desc sctype="string">Redirected panel project.file.005 from process.display.evtopt panel to get.sql.options panel.</rev.desc>
          <rev.desc sctype="string">Redirected panel project.file.020 from process.display.evtopt panel to get.sql.options panel.</rev.desc>
        </rev.desc>
        <change.no type="decimal">3347</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Call sqlmap after merging the dbdicts.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2705</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Backing out last change</rev.desc>
        </rev.desc>
        <change.no type="decimal">4934</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Call upgradeDbdictMerge instead of apm.upgrade.merge.new for dbdict merging.</rev.desc>
        </rev.desc>
        <change.no type="decimal">4934</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2158 Attempts to go to an RIO after an alter table statement fails.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2158</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">DE2132 Call sqlmap after merging the dbdicts.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2132</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">$L.field.type no longer initializes to NULL. Change needed in check.sig properly call make.sigs.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2082</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Properly initing $L.logs</rev.desc>
        </rev.desc>
        <change.no type="decimal">1614</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DevTx ticket I2299.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Back in SC5.1, a modification was made under CenterPoint Reqeust 24287 Task 22900 to handle the case where Peregrine deleted the format.name field from the device dbdict. This necessitated the creation of a temporary dbdict for device. In this temporary dbdict, the structured array information (ie, information in the sa.unique.filename and sa.attribute.file fiels) was being copied over, triggering the RTE to delete/recreate the subtables associated with device (they are associated by virtue of the fact that they are in the structured array).</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This temporary device dbdict is just that: TEMPORARY. (It is used solely to compare the device dbdict's old and new structures to determine if a field had been deleted.) So, it really does NOT need all that information in the structured arrays. That being the case, when this temporary dbdict is created, a fix was made (for this ticket, DevTx I2299) so that the structured array information is NOT copied over. This changed was made in panel edit.key.005.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2299</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DevTx ticket I2282.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modification made so that the help dbdict will always be merged. This is because prior to SC5.1, there was a gap in the index numbers between the operator and the syslanguage fields (it jumps from index 17 to index 23). If we just replace the old dbdict with the new dbdict (which does not have this gap), it gives the RTE fits and renders the help file unuseable.</rev.desc>
        </rev.desc>
        <change.no type="decimal">2282</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">12/29/04 17:08:36</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DevTx ticket I1959. The gist of this change was to undo what was done in Change #22900 dated 05/20/03 07:03:00. See DevTx ticket I1959 for details of the reasons and the risks for undoing this change.</rev.desc>
        </rev.desc>
        <change.no type="decimal">1959</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">09/29/04 10:56:31</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Based on last change, puts back in the old unique key for displayoption (as nulls&amp;dups) so that the sorting is correct when fixing the new id field.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made so that if upgrading from a version PRIOR to SC6.1 AND the file being processed is displayevent or displayoption, then the following are done:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">. the key on the customer's system is forced to look like the key that was sent down on the upgrade</rev.desc>
          <rev.desc sctype="string">. the unique key comprised of the id field in the customer's system is removed</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This key will be put back later on in the upgrade process by another application. This is necessary because unique keys MUST be populated, otherwise, the regen of the file will abend.</rev.desc>
        </rev.desc>
        <change.no type="decimal">0</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DevTX Ticket I0704.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">When processing the sla dbdict and the customer is upgrading from a version PRIOR to SC6.1, then the merge of the dbdict is forced. This is because the sla file was restructured in SC6.1.</rev.desc>
        </rev.desc>
        <change.no type="decimal">704</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DEVTX BUG14999.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This bug reported a problem: If the customer added field(s) to the problem file but did NOT them probsummary file, the upgrade is supposed to add them to the probsummary file. This was not happening.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">The reason why this was not happening is because the application apm.upgrade.merge.prob was NOT being executed. (This is the application that does the add of the field(s) to probsummary.) The reason why apm.upgrade.merge.prob was NOT being executed is because, in our test, probsummary was NOT modified, so it does not go through merge.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">To remedy this, apm.upgrade.dbdict was changed so that if we are processing the probsummary file AND we are upgrading from a version PRIOR to SC5, the merge code is executed irregardless of whether the probsummary file was modified by the customer or not.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">To effect this change, the following line (it is now the second condition on the panel) was added in panel decide.action of RAD application apm.upgrade.dbdict:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Exit: prepare.log.merge</rev.desc>
          <rev.desc sctype="string">Condition for exit: name in $L.old="probsummary" and $G.tmpUpgFrmVerSeq&lt;$G.tmpSC5VerSeq</rev.desc>
        </rev.desc>
        <change.no type="decimal">14999</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DEVTX BUG14516 to clear the ALTER statement (contained in variable $L.alter) after it has been executed.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This was effected by doing the following:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">1) Panel apply.alter: Changed the Normal Exit of this panel from refresh.sql to clear.alter.</rev.desc>
          <rev.desc sctype="string">2) Panel clear.alter: New process panel which sets the variable $L.alter to NULL. This panel then exits to refresh.sql.</rev.desc>
        </rev.desc>
        <change.no type="decimal">14516</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modification made for DEVTX BUG14645. The change was to add a line (actually, it was made the first line) to panel wrapup.project.000 that says "if root.record in $L.old is -1, branch to check.sql".</rev.desc>
        </rev.desc>
        <change.no type="decimal">14645</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">05/29/04 13:30:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">The following modifications made for DEVTX BUB14474:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">1) In panel check.signature, added the following statement:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$L.fldrmv=false</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This addresses the bug found by DGoodliffe when he was reviewing a log produced by the upgrade where the Object dbdict was being deleted.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">2) In panel rollback.dbdict, changed the following line</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">contents($L.old)=$L.dbdict.save</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">contents($L.old)=$L.old.contents</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This addresses the bug where the upgrade was getting a Signal 11 when the user skips the updating of the RDBMS by ServiceCenter.</rev.desc>
        </rev.desc>
        <change.no type="decimal">14474</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">12/27/10 23:59:27</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Made modification to the first condition of panel decide.action as follows:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Before modification:</rev.desc>
          <rev.desc sctype="string">$G.tmpUpgFrmVerSeq&lt;$G.tmpSC6VerSeq and name in $L.old="dbdict"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">After modification:</rev.desc>
          <rev.desc sctype="string">name in $L.old="dbdict"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This is because by the time the upgrade reaches this point, the dbdict dbdict has already been processed by apm.upgrade.pre6dbdfix.1 and apm.upgrade.pre6dbdfix.2. Really, the dbdict dbdict should be handled separately from all other dbdicts. In future releases, changes to dbdict dbdict should be done via these two applications (ie, apm.upgrade.pre6dbdfix.1 and apm.upgrade.pre6dbdfix.2), NOT through apm.upgrade.dbdict.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Made modification to the first condition of panel decide.action as follows:</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Before modification:</rev.desc>
          <rev.desc sctype="string">$G.tmpUpgFrmVerSeq&lt;$G.tmpSC51VerSeq and name in $L.old="dbdict"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">After modification:</rev.desc>
          <rev.desc sctype="string">$G.tmpUpgFrmVerSeq&lt;$G.tmpSC6VerSeq and name in $L.old="dbdict"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This modification bypasses the processing of the dbdict dbdict if upgrading from a version PRIOR to SC6. This is the desired outcome because the dbdict dbdict is handled earlier on in the upgrade process by apm.upgrade.wizard when it calls apm.upgrade.pre6dbdfix.1 and apm.upgrade.pre6dbdfix.2.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Continuation of the entry below (05/16/03 14:44:41): Confirmed w/ CGeist that changing the sequence numbers in a dbdict will cause problems, especially if there is data already in the file. To alleviate this for the help file, in panel update.old.fields, code was put in to BYPASS the code that replaces the old dbdict with the new dbdict (the statement field in $L.old=field in $L.new) if processing the help file.</rev.desc>
        </rev.desc>
        <change.no type="decimal">22900</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">During 5.1 upgrade testing (from SC3GA to SC51), it was discovered that the statement that after this statement:</rev.desc>
          <rev.desc sctype="string">field.fields field in $L.old=field in $L.new</rev.desc>
          <rev.desc sctype="string">in panel update.old.fields, the records in the help file become inaccessible (although they are still in the file).</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">What's happening is that when a record in the help file is attempted to be retrieved, the select statement results in a record-not-found condition, so you'd think the record is not there. However, when you then subsequently try to add the record, the dbInsert duplicate record message is generated, and the record is not added.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">This is causing apm.upgrade.data to spit out dbInsert messages (duplicate records in the help file). I can only assume that the records are becoming inaccessible because although the fields in SC3GA help are exactly the same as the fields in SC51 help, the last four fields have different index numbers, and this is somehow throwing P4 off. To get around this, when processing the help dbdict, I force a regen of the file, and this really make the records go away. The upgrade (in a later step) will add these records back.</rev.desc>
        </rev.desc>
        <change.no type="decimal">22900</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">esoriano</rev.name>
        <rev.date type="dateTime">00:00:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Numerous modifications done for CenterPoint Task 22900 for Request 24287. See the document named Tsk22900Rqs24287A.doc attached to that task for details.</rev.desc>
        </rev.desc>
        <change.no type="decimal">22900</change.no>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">remove legacy update oracle dbinfo related panels</descript>
      <descript sctype="string">update panel fcreate.1, change error exit to next.object</descript>
      <descript sctype="string">idoltoken length is not upgraded to 500 after upgrade to 950 from 941.</descript>
      <descript sctype="string">Simplify the codes of panel merge.fields</descript>
      <descript sctype="string">idoltoken length is not upgraded to 500 after upgrade to 950 from 941.</descript>
      <descript sctype="string">SM Upgrade cannot identify the field type of dbdict with lower case</descript>
      <descript sctype="string">Cannot enlarge the varbinary type field length during the upgrade</descript>
      <descript sctype="string">Consider DB2. Check if the type match "FOR BIT DATA"</descript>
      <descript sctype="string">Cannot enlarge the varbinary type field length during the upgrade</descript>
      <descript sctype="string">Check if the types match VARBINARY or RAW</descript>
      <descript sctype="string">Cannot enlarge the varbinary type field length during the upgrade</descript>
      <descript sctype="string">update panel "exit.error.msg", turn on counters</descript>
      <descript sctype="string">update panel "save.old.dbdict, change error exit to "next.object""</descript>
      <descript sctype="string">update panel "save.dbdict", change error exit to "no.update"</descript>
      <descript sctype="string">Optimize the upgrade log.</descript>
      <descript sctype="string">Some alias tables are not created in db after upgrade to 931</descript>
      <descript sctype="string">Apply table alias changes should be earlier than apply key changes</descript>
      <descript sctype="string">Shifted table alias change from panel=merge.fields to new panel=prep.tablealias.changes and panel=apply.tablealias.changes.</descript>
      <descript sctype="string">Init the file of updated dbdict</descript>
      <descript sctype="string">modified panel:decipher.logs</descript>
      <descript sctype="string">from :</descript>
      <descript sctype="string">if ($L.field.merged or $L.key.merged) then ($L.updated=true)</descript>
      <descript sctype="string">to:</descript>
      <descript sctype="string">if ($L.field.merged) then ($L.updated=true;$L.field.msg="Field merged to "+object.name in $L.object)</descript>
      <descript sctype="string">if ($L.key.merged) then ($L.updated=true;$L.field.msg="Key merged to "+object.name in $L.object)</descript>
      <descript sctype="string">apply adding value for id in notification table to all versions and streamline the process</descript>
      <descript sctype="string">Modified panel=select.objects for switching to apply.key.changes if there's no objects</descript>
      <descript sctype="string">Added one panel=prep.key.changes for indicating status on UI</descript>
      <descript sctype="string">add value for id in notification table</descript>
      <descript sctype="string">added panel = pre.key.change to fix data problem for preventing performance issue</descript>
      <descript sctype="string">move the js:upgradeDbdictChangeFieldType to apm.upgrade.wizard</descript>
      <descript sctype="string">rollback this enhancement since RTE fix this problem</descript>
      <descript sctype="string">change in merge.fields, update parameter when writing error msg for oracle-ci</descript>
      <descript sctype="string">change message:</descript>
      <descript sctype="string">DBDICT PHASE in Progress -&gt; Start DBDICT PHASE</descript>
      <descript sctype="string">DBDICT Phase Complete -&gt; Finish DBDICT PHASE</descript>
      <descript sctype="string">Delete the callling for script upgradePreKeyChange since it's no longer needed.</descript>
      <descript sctype="string">not extend field length if the field is part of key and database is oracle with case insensitive.</descript>
      <descript sctype="string"/>
      <descript sctype="string">panel: mege.fields</descript>
      <descript sctype="string">merge.fields: write field length change to detail instead of upgrade</descript>
      <descript sctype="string">Call the script upgradeDatabaseFieldTypeUpdate</descript>
      <descript sctype="string">Call the script upgradeCm3r and upgradeTableAliasChanges</descript>
      <descript sctype="string">use string instead of number to refer to msgid 1100</descript>
      <descript sctype="string">Change the functin name for SQL Table Changes</descript>
      <descript sctype="string">Call the script for table changes, like sql table change.</descript>
      <descript sctype="string">prepare for key changes because some tables may throw exception for some data conflicts</descript>
      <descript sctype="string">Update the calling script for key changes</descript>
      <descript sctype="string">call jscall function doesn't need lib</descript>
      <descript sctype="string">updated exit.normal to call UpgradeKeyChangesAutomation js. This script is used for automating the key changes</descript>
      <descript sctype="string">QCRQ1E53294: add a jscall in the "start" panel, to make all required field type changes.</descript>
      <descript sctype="string">add merge.fields: only if the new field is character and length is greater than old length, replace the sql type</descript>
      <descript sctype="string">add merge.keys: add new key</descript>
      <descript sctype="string">Moving code from 7.10 branch.</descript>
      <descript sctype="string">Use the return code from apm.upgrade.merge.new to check for added fields</descript>
      <descript sctype="string">DE3347 - Removing references to upgrade before SC62:</descript>
      <descript sctype="string">** decide.action panel. Removed the following 2 conditions both exiting to prepare.log.merge:</descript>
      <descript sctype="string">name in $L.old="probsummary" and $G.tmpUpgFrmVerSeq&lt;$G.tmpSC5VerSeq</descript>
      <descript sctype="string">name in $L.old={"sla", "rootcause"} and $G.tmpUpgFrmVerSeq&lt;$G.tmpSC61VerSeq</descript>
      <descript sctype="string"/>
      <descript sctype="string">Removed panels decide.update.activity,process.display.evtopt, process.display.evtopt.1, update.activity.keys</descript>
      <descript sctype="string">Redirected panel check.edit.key   from process.display.evtopt panel to get.sql.options panel.</descript>
      <descript sctype="string">Redirecteded panel edit.fields.010  from process.display.evtopt panel to get.sql.options panel.</descript>
      <descript sctype="string">Redirected panel log.new.fields   from process.display.evtopt panel to get.sql.options panel.</descript>
      <descript sctype="string">Redirected panel project.file.005 from process.display.evtopt panel to get.sql.options panel.</descript>
      <descript sctype="string">Redirected panel project.file.020 from process.display.evtopt panel to get.sql.options panel.</descript>
      <descript sctype="string">Call sqlmap after merging the dbdicts.</descript>
      <descript sctype="string">Backing out last change</descript>
      <descript sctype="string">Call upgradeDbdictMerge instead of apm.upgrade.merge.new for dbdict merging.</descript>
      <descript sctype="string">DE2158 Attempts to go to an RIO after an alter table statement fails.</descript>
      <descript sctype="string">DE2132 Call sqlmap after merging the dbdicts.</descript>
      <descript sctype="string">$L.field.type no longer initializes to NULL. Change needed in check.sig properly call make.sigs.</descript>
      <descript sctype="string">Properly initing $L.logs</descript>
      <descript sctype="string">Modification made for DevTx ticket I2299.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Back in SC5.1, a modification was made under CenterPoint Reqeust 24287 Task 22900 to handle the case where Peregrine deleted the format.name field from the device dbdict. This necessitated the creation of a temporary dbdict for device. In this temporary dbdict, the structured array information (ie, information in the sa.unique.filename and sa.attribute.file fiels) was being copied over, triggering the RTE to delete/recreate the subtables associated with device (they are associated by virtue of the fact that they are in the structured array).</descript>
      <descript sctype="string"/>
      <descript sctype="string">This temporary device dbdict is just that: TEMPORARY. (It is used solely to compare the device dbdict's old and new structures to determine if a field had been deleted.) So, it really does NOT need all that information in the structured arrays. That being the case, when this temporary dbdict is created, a fix was made so that the structured array information is NOT copied over.</descript>
      <descript sctype="string">Modification made for DevTx ticket I2282.</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modification made so that the help dbdict will always be merged. This is because prior to SC5.1, there was a gap in the index numbers between the operator and the syslanguage fields (it jumps from index 17 to index 23). If we just replace the old dbdict with the new dbdict (which does not have this gap), it gives the RTE fits and renders the help file unuseable.</descript>
      <descript sctype="string">Modification made for DevTx ticket I1959. The gist of this change was to undo what was done in Change #22900 dated 05/20/03 07:03:00. See DevTx ticket I1959 for details of the reasons and the risks for undoing this change.</descript>
      <descript sctype="string">Based on last change, puts back in the old unique key for displayoption (as nulls&amp;dups) so that the sorting is correct when fixing the new id field.</descript>
      <descript sctype="string">Modification made so that if upgrading from a version PRIOR to SC6.1 AND the file being processed is displayevent or displayoption, then the following are done:</descript>
      <descript sctype="string"/>
      <descript sctype="string">. the key on the customer's system is forced to look like the key that was sent down on the upgrade</descript>
      <descript sctype="string">. the unique key comprised of the id field in the customer's system is removed</descript>
      <descript sctype="string"/>
      <descript sctype="string">This key will be put back later on in the upgrade process by another application. This is necessary because unique keys MUST be populated, otherwise, the regen of the file will abend.</descript>
      <descript sctype="string">Modification made for DevTX Ticket I0704.</descript>
      <descript sctype="string"/>
      <descript sctype="string">When processing the sla dbdict and the customer is upgrading from a version PRIOR to SC6.1, then the merge of the dbdict is forced. This is because the sla file was restructured in SC6.1.</descript>
      <descript sctype="string">Modification made for DEVTX BUG14999.</descript>
      <descript sctype="string"/>
      <descript sctype="string">This bug reported a problem: If the customer added field(s) to the problem file but did NOT them probsummary file, the upgrade is supposed to add them to the probsummary file. This was not happening.</descript>
      <descript sctype="string"/>
      <descript sctype="string">The reason why this was not happening is because the application apm.upgrade.merge.prob was NOT being executed. (This is the application that does the add of the field(s) to probsummary.) The reason why apm.upgrade.merge.prob was NOT being executed is because, in our test, probsummary was NOT modified, so it does not go through merge.</descript>
      <descript sctype="string"/>
      <descript sctype="string">To remedy this, apm.upgrade.dbdict was changed so that if we are processing the probsummary file AND we are upgrading from a version PRIOR to SC5, the merge code is executed irregardless of whether the probsummary file was modified by the customer or not.</descript>
      <descript sctype="string"/>
      <descript sctype="string">To effect this change, the following line (it is now the second condition on the panel) was added in panel decide.action of RAD application apm.upgrade.dbdict:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Exit: prepare.log.merge</descript>
      <descript sctype="string">Condition for exit: name in $L.old="probsummary" and $G.tmpUpgFrmVerSeq&lt;$G.tmpSC5VerSeq</descript>
      <descript sctype="string">Modification made for DEVTX BUG14516 to clear the ALTER statement (contained in variable $L.alter) after it has been executed.</descript>
      <descript sctype="string"/>
      <descript sctype="string">This was effected by doing the following:</descript>
      <descript sctype="string"/>
      <descript sctype="string">1) Panel apply.alter: Changed the Normal Exit of this panel from refresh.sql to clear.alter.</descript>
      <descript sctype="string">2) Panel clear.alter: New process panel which sets the variable $L.alter to NULL. This panel then exits to refresh.sql.</descript>
      <descript sctype="string">Modification made for DEVTX BUG14645. The change was to add a line (actually, it was made the first line) to panel wrapup.project.000 that says "if root.record in $L.old is -1, branch to check.sql".</descript>
      <descript sctype="string">The following modifications made for DEVTX BUB14474:</descript>
      <descript sctype="string"/>
      <descript sctype="string">1) In panel check.signature, added the following statement:</descript>
      <descript sctype="string"/>
      <descript sctype="string">$L.fldrmv=false</descript>
      <descript sctype="string"/>
      <descript sctype="string">This addresses the bug found by DGoodliffe when he was reviewing a log produced by the upgrade where the Object dbdict was being deleted.</descript>
      <descript sctype="string"/>
      <descript sctype="string">2) In panel rollback.dbdict, changed the following line</descript>
      <descript sctype="string"/>
      <descript sctype="string">contents($L.old)=$L.dbdict.save</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">contents($L.old)=$L.old.contents</descript>
      <descript sctype="string"/>
      <descript sctype="string">This addresses the bug where the upgrade was getting a Signal 11 when the user skips the updating of the RDBMS by ServiceCenter.</descript>
      <descript sctype="string">Made modification to the first condition of panel decide.action as follows:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Before modification:</descript>
      <descript sctype="string">$G.tmpUpgFrmVerSeq&lt;$G.tmpSC6VerSeq and name in $L.old="dbdict"</descript>
      <descript sctype="string"/>
      <descript sctype="string">After modification:</descript>
      <descript sctype="string">name in $L.old="dbdict"</descript>
      <descript sctype="string"/>
      <descript sctype="string">This is because by the time the upgrade reaches this point, the dbdict dbdict has already been processed by apm.upgrade.pre6dbdfix.1 and apm.upgrade.pre6dbdfix.2. Really, the dbdict dbdict should be handled separately from all other dbdicts. In future releases, changes to dbdict dbdict should be done via these two applications (ie, apm.upgrade.pre6dbdfix.1 and apm.upgrade.pre6dbdfix.2), NOT through apm.upgrade.dbdict.</descript>
      <descript sctype="string">Made modification to the first condition of panel decide.action as follows:</descript>
      <descript sctype="string"/>
      <descript sctype="string">Before modification:</descript>
      <descript sctype="string">$G.tmpUpgFrmVerSeq&lt;$G.tmpSC51VerSeq and name in $L.old="dbdict"</descript>
      <descript sctype="string"/>
      <descript sctype="string">After modification:</descript>
      <descript sctype="string">$G.tmpUpgFrmVerSeq&lt;$G.tmpSC6VerSeq and name in $L.old="dbdict"</descript>
      <descript sctype="string"/>
      <descript sctype="string">This modification bypasses the processing of the dbdict dbdict if upgrading from a version PRIOR to SC6. This is the desired outcome because the dbdict dbdict is handled earlier on in the upgrade process by apm.upgrade.wizard when it calls apm.upgrade.pre6dbdfix.1 and apm.upgrade.pre6dbdfix.2.</descript>
      <descript sctype="string">Continuation of the entry below (05/16/03 14:44:41): Confirmed w/ CGeist that changing the sequence numbers in a dbdict will cause problems, especially if there is data already in the file. To alleviate this for the help file, in panel update.old.fields, code was put in to BYPASS the code that replaces the old dbdict with the new dbdict (the statement field in $L.old=field in $L.new) if processing the help file.</descript>
      <descript sctype="string">During 5.1 upgrade testing (from SC3GA to SC51), it was discovered that the statement that after this statement:</descript>
      <descript sctype="string">field.fields field in $L.old=field in $L.new</descript>
      <descript sctype="string">in panel update.old.fields, the records in the help file become inaccessible (although they are still in the file).</descript>
      <descript sctype="string"/>
      <descript sctype="string">What's happening is that when a record in the help file is attempted to be retrieved, the select statement results in a record-not-found condition, so you'd think the record is not there. However, when you then subsequently try to add the record, the dbInsert duplicate record message is generated, and the record is not added.</descript>
      <descript sctype="string"/>
      <descript sctype="string">This is causing apm.upgrade.data to spit out dbInsert messages (duplicate records in the help file). I can only assume that the records are becoming inaccessible because although the fields in SC3GA help are exactly the same as the fields in SC51 help, the last four fields have different index numbers, and this is somehow throwing P4 off. To get around this, when processing the help dbdict, I force a regen of the file, and this really make the records go away. The upgrade (in a later step) will add these records back.</descript>
      <descript sctype="string">Numerous modifications done for CenterPoint Task 22900 for Request 24287. See the document named Tsk22900Rqs24287A.doc attached to that task for details.</descript>
    </descript>
    <release type="string">SC5</release>
    <sysmodcount type="decimal">66</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">10/21/20 19:35:57</sysmodtime>
  </record>
</recordset>
