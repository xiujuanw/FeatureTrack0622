<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;apm.compute.linked.close&quot;" recordid="apm.compute.linked.close">
    <application.name type="string">apm.compute.linked.close</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhangqi</rev.name>
        <rev.date type="dateTime">06/01/15 19:50:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Remove Fax and Page functions, delete panel send.page &amp; send.page.go</rev.desc>
        </rev.desc>
        <change.no type="decimal">113821</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">07/13/14 18:39:26</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel decide</rev.desc>
          <rev.desc sctype="string">Change</rev.desc>
          <rev.desc sctype="string">not  (null(contact.name in $L.incidents)) and tolower(callback.type in $L.incidents)="email"</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">not  (null(contact.name in $L.incidents)) and (tolower(callback.type in $L.incidents)="email" or tolower(callback.type in $L.incidents)="e-mail")</rev.desc>
        </rev.desc>
        <change.no type="decimal">110647</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">panjun</rev.name>
        <rev.date type="dateTime">07/16/12 00:10:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel:add.action need add $allow.save=true to pass the fc validation</rev.desc>
        </rev.desc>
        <change.no type="decimal">75664</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">02/14/12 23:09:56</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Add panel:</rev.desc>
          <rev.desc sctype="string">decide.add.schedule</rev.desc>
          <rev.desc sctype="string">not iscurrent($L.incidents)</rev.desc>
          <rev.desc sctype="string">add.schedule</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">1. Panel: save.incident.1</rev.desc>
          <rev.desc sctype="string">Error exit: decide.add.schedule</rev.desc>
          <rev.desc sctype="string">Bad validation exit: decide.add.schedule</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">2. Panel: save.incident</rev.desc>
          <rev.desc sctype="string">Error exit: decide.add.schedule</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">3. Panel: get.lock</rev.desc>
          <rev.desc sctype="string">Reselect: add.schedule</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">1. Panel: save.incident.2</rev.desc>
          <rev.desc sctype="string">Error exit: decide.add.schedule</rev.desc>
          <rev.desc sctype="string">Bad validation exit: decide.add.schedule</rev.desc>
        </rev.desc>
        <change.no type="decimal">71608</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">falcon</rev.name>
        <rev.date type="dateTime">04/16/10 16:42:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">change exit for panel post.process to save.incident2 which calls cc.save.incident</rev.desc>
        </rev.desc>
        <change.no type="decimal">53635</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">acorvino</rev.name>
        <rev.date type="dateTime">01/06/10 18:04:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Recompile needed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">49573</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">09/04/07 23:22:45</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel start</rev.desc>
          <rev.desc sctype="string">$L.bypass.failed.validation=$bypass.failed.validation</rev.desc>
          <rev.desc sctype="string">Panel process.post, close.incident, process.post.1</rev.desc>
          <rev.desc sctype="string">$bypass.failed.validation=true</rev.desc>
          <rev.desc sctype="string">Panel cleanup</rev.desc>
          <rev.desc sctype="string">$bypass.failed.validation=$L.bypass.failed.validation</rev.desc>
          <rev.desc sctype="string">DE2248</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">07/17/05 14:17:22</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">CP SCR22027</rev.desc>
          <rev.desc sctype="string">panel:  decide</rev.desc>
          <rev.desc sctype="string">changed exit 'add.action' to 'decide.post.1'</rev.desc>
          <rev.desc sctype="string">added panel:  decide.post.1</rev.desc>
          <rev.desc sctype="string">if $L.post.resolution is true then the resolution will get posted before the action is added.</rev.desc>
          <rev.desc sctype="string">added panel:  process.post.1...this is simply a copy of the process.post panel</rev.desc>
          <rev.desc sctype="string">from here the normal exit is to add.action which is the rest of the normal workflow for calls with a callback of type 'telephone'</rev.desc>
        </rev.desc>
        <change.no type="decimal">22027</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">08/24/03 15:23:11</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">changed the messages for $L.one on the process.post panel to reference an scmsg instead of being hard-coded.</rev.desc>
        </rev.desc>
        <change.no type="decimal">19598</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">07/27/03 13:27:38</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">changed the close.incident exit on the relation.select panel to check.required.actions.  This then calls a select panel to query for any active required actions.  If any are found then the message posted back to the call is modified to indicate pending reqd actions and the call is not closed.  If no reqd actions are found then the call is closed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">19598</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">06/10/02 14:55:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Externalized paging messages and added a check for $L.type="ocmq" so emails will get sent when a related quote is closed.</rev.desc>
        </rev.desc>
        <change.no type="decimal">20017</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">01/12/02 04:05:45</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified the save.incident.1 panel in apm.compute.linked.close to pass the background flag of true.</rev.desc>
        </rev.desc>
        <change.no type="decimal">16386</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">02/25/01 01:07:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Modified to have new parameter (Macro format) that is used to pass a format name to the macro.mailproblem1 application.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">kasey</rev.name>
        <rev.date type="dateTime">02/07/01 03:33:37</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">After adding an action item for an incident when status is Telephone, call application apm.incidents.screlation to update the status in the screlation file.</rev.desc>
        </rev.desc>
        <change.no type="decimal">3853</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">11/28/00 06:43:41</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changes made inter-nationalization</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/16/00 17:17:01</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Made more changes to allow request and change to pass information back via link records as well as problem.</rev.desc>
        </rev.desc>
        <change.no type="decimal">1962</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">07/04/00 14:39:28</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Updated the link to use a message array passed in from apm.start.link.closed.  Also modified the messages fed back to "incident" resolution from problem.</rev.desc>
        </rev.desc>
        <change.no type="decimal">1962</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">mprice</rev.name>
        <rev.date type="dateTime">01/16/00 07:09:50</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed application being scheduled for execution from apm.linked.header to apm.start.linked.close on panel "setup" in application apm.compute.linked.close. Also added the following statement to the same panel.</rev.desc>
          <rev.desc sctype="string">if (post.resolution in $G.pm.global.environment=true) then (strings in $L.schedule=insert(strings in $L.schedule, 5, 1, "true")) else (strings in $L.schedule=insert(strings in $L.schedule, 5, 1, "false"))</rev.desc>
        </rev.desc>
        <change.no type="decimal">2105</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">05/22/99 08:20:40</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Update the incident in bg mode.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">01/31/99 00:50:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Use scmsg to get strings to add to incdepends file.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">07/25/98 09:09:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Add code to allow processing from Request Management Quotes.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">05/18/98 09:30:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Save the incident before adding the incdepends record.  The trigger on incdep updates the call.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">03/22/98 01:36:00</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Save the incident after adding the incdepends record.  Needed for resolution posting.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">01/28/98 04:07:42</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed the error exit on add.action to exit.error.msg from $error.</rev.desc>
          <rev.desc sctype="string">Set the trigger error exit to exit.error.msg on add panel.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">11/29/97 04:14:25</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">Remove Fax and Page functions, delete panel send.page &amp; send.page.go</descript>
      <descript sctype="string">Panel decide</descript>
      <descript sctype="string">Change</descript>
      <descript sctype="string">not  (null(contact.name in $L.incidents)) and tolower(callback.type in $L.incidents)="email"</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">not  (null(contact.name in $L.incidents)) and (tolower(callback.type in $L.incidents)="email" or tolower(callback.type in $L.incidents)="e-mail")</descript>
      <descript sctype="string">Panel:add.action need add $allow.save=true to pass the fc validation</descript>
      <descript sctype="string">Add panel:</descript>
      <descript sctype="string">decide.add.schedule</descript>
      <descript sctype="string">not iscurrent($L.incidents)</descript>
      <descript sctype="string">add.schedule</descript>
      <descript sctype="string"/>
      <descript sctype="string">1. Panel: save.incident.1</descript>
      <descript sctype="string">Error exit: decide.add.schedule</descript>
      <descript sctype="string">Bad validation exit: decide.add.schedule</descript>
      <descript sctype="string"/>
      <descript sctype="string">2. Panel: save.incident</descript>
      <descript sctype="string">Error exit: decide.add.schedule</descript>
      <descript sctype="string"/>
      <descript sctype="string">3. Panel: get.lock</descript>
      <descript sctype="string">Reselect: add.schedule</descript>
      <descript sctype="string"/>
      <descript sctype="string">1. Panel: save.incident.2</descript>
      <descript sctype="string">Error exit: decide.add.schedule</descript>
      <descript sctype="string">Bad validation exit: decide.add.schedule</descript>
      <descript sctype="string">change exit for panel post.process to save.incident2 which calls cc.save.incident</descript>
      <descript sctype="string">Recompile needed.</descript>
      <descript sctype="string">Panel start</descript>
      <descript sctype="string">$L.bypass.failed.validation=$bypass.failed.validation</descript>
      <descript sctype="string">Panel process.post, close.incident, process.post.1</descript>
      <descript sctype="string">$bypass.failed.validation=true</descript>
      <descript sctype="string">Panel cleanup</descript>
      <descript sctype="string">$bypass.failed.validation=$L.bypass.failed.validation</descript>
      <descript sctype="string">DE2248</descript>
      <descript sctype="string">CP SCR22027</descript>
      <descript sctype="string">panel:  decide</descript>
      <descript sctype="string">changed exit 'add.action' to 'decide.post.1'</descript>
      <descript sctype="string">added panel:  decide.post.1</descript>
      <descript sctype="string">if $L.post.resolution is true then the resolution will get posted before the action is added.</descript>
      <descript sctype="string">added panel:  process.post.1...this is simply a copy of the process.post panel</descript>
      <descript sctype="string">from here the normal exit is to add.action which is the rest of the normal workflow for calls with a callback of type 'telephone'</descript>
      <descript sctype="string">changed the messages for $L.one on the process.post panel to reference an scmsg instead of being hard-coded.</descript>
      <descript sctype="string">changed the close.incident exit on the relation.select panel to check.required.actions.  This then calls a select panel to query for any active required actions.  If any are found then the message posted back to the call is modified to indicate pending reqd actions and the call is not closed.  If no reqd actions are found then the call is closed.</descript>
      <descript sctype="string">Externalized paging messages and added a check for $L.type="ocmq" so emails will get sent when a related quote is closed.</descript>
      <descript sctype="string">Modified the save.incident.1 panel in apm.compute.linked.close to pass the background flag of true.</descript>
      <descript sctype="string">Modified to have new parameter (Macro format) that is used to pass a format name to the macro.mailproblem1 application.</descript>
      <descript sctype="string">After adding an action item for an incident when status is Telephone, call application apm.incidents.screlation to update the status in the screlation file.</descript>
      <descript sctype="string">Changes made inter-nationalization</descript>
      <descript sctype="string">Made more changes to allow request and change to pass information back via link records as well as problem.</descript>
      <descript sctype="string">Updated the link to use a message array passed in from apm.start.link.closed.  Also modified the messages fed back to "incident" resolution from problem.</descript>
      <descript sctype="string">Changed application being scheduled for execution from apm.linked.header to apm.start.linked.close on panel "setup" in application apm.compute.linked.close. Also added the following statement to the same panel.</descript>
      <descript sctype="string">if (post.resolution in $G.pm.global.environment=true) then (strings in $L.schedule=insert(strings in $L.schedule, 5, 1, "true")) else (strings in $L.schedule=insert(strings in $L.schedule, 5, 1, "false"))</descript>
      <descript sctype="string">Update the incident in bg mode.</descript>
      <descript sctype="string">Use scmsg to get strings to add to incdepends file.</descript>
      <descript sctype="string">Add code to allow processing from Request Management Quotes.</descript>
      <descript sctype="string">Save the incident before adding the incdepends record.  The trigger on incdep updates the call.</descript>
      <descript sctype="string">Save the incident after adding the incdepends record.  Needed for resolution posting.</descript>
      <descript sctype="string">Changed the error exit on add.action to exit.error.msg from $error.</descript>
      <descript sctype="string">Set the trigger error exit to exit.error.msg on add panel.</descript>
    </descript>
    <release type="string">A9701</release>
    <sysmodcount type="decimal">3</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">06/01/15 19:55:14</sysmodtime>
  </record>
</recordset>
