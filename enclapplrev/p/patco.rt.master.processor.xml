<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;patco.rt.master.processor&quot;" recordid="patco.rt.master.processor">
    <application.name type="string">patco.rt.master.processor</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">miquan</rev.name>
        <rev.date type="dateTime">03/11/14 15:41:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">add panel: call.pdrequest to support pd request</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">patcasey</rev.name>
        <rev.date type="dateTime">12/07/05 06:16:53</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Put back in exception logic.</rev.desc>
        </rev.desc>
        <change.no type="decimal">37968</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cfullert</rev.name>
        <rev.date type="dateTime">06/04/04 04:09:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">deleted and recreated the 'recalc' panel to fix an issue with a broken parameter panel which was causing the application to not run correctly and completely.</rev.desc>
        </rev.desc>
        <change.no type="decimal">30989</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">patcasey</rev.name>
        <rev.date type="dateTime">01/01/03 01:37:16</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed special processing and moved it into recalc logic instead to simplify code.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">patcasey</rev.name>
        <rev.date type="dateTime">01/01/03 01:33:23</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Put in some special processing for demand based maintenance.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">patcasey</rev.name>
        <rev.date type="dateTime">06/11/01 22:39:07</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">If the user enters an arbitary query like, oh, say, "true" the system can theoretically generate a problem ticket for every entry in the device file. This would be bad. Added code to limit the maximum number of tickets the system will generate this way.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">patcasey</rev.name>
        <rev.date type="dateTime">06/11/01 11:41:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">New 4.5 functionality. Users can now enter an arbitrary query for creation limitation instead of being limited to selecting on device type and location.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">patcasey</rev.name>
        <rev.date type="dateTime">03/06/01 23:17:57</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Was erroniously setting the execution data of certain tasks to "false" instead of a date.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">patcasey</rev.name>
        <rev.date type="dateTime">03/05/01 22:54:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Fixed lisa's fix so it properly cleans up the variables in question. She was cleaning them up, when instead they should have been restored to their previous values.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">03/05/01 04:55:12</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Set $axces.bypass.failed.validation and $bypass.failed.validation to true on start panel to bypass user input screen on failed validation.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">add panel: call.pdrequest to support pd request</descript>
      <descript sctype="string">Put back in exception logic that cfullert appears to have mistakenly removed when he worked on code.</descript>
      <descript sctype="string">deleted and recreated the 'recalc' panel to fix an issue with a broken parameter panel which was causing the application to not run correctly and completely.</descript>
      <descript sctype="string">Removed special processing and moved it into recalc logic instead to simplify code.</descript>
      <descript sctype="string">Linked in Demand Based Stuff</descript>
      <descript sctype="string">If the user enters an arbitary query like, oh, say, "true" the system can theoretically generate a problem ticket for every entry in the device file. This would be bad. Added code to limit the maximum number of tickets the system will generate this way.</descript>
      <descript sctype="string">New 4.5 functionality. Users can now enter an arbitrary query for creation limitation instead of being limited to selecting on device type and location.</descript>
      <descript sctype="string">Was erroniously setting the execution data of certain tasks to "false" instead of a date.</descript>
      <descript sctype="string">Fixed lisa's fix so it properly cleans up the variables in question. She was cleaning them up, when instead they should have been restored to their previous values.</descript>
      <descript sctype="string">Set $axces.bypass.failed.validation and $bypass.failed.validation to true on start panel to bypass user input screen on failed validation.</descript>
    </descript>
    <release type="string">A9901</release>
    <sysmodcount type="decimal">15</sysmodcount>
    <sysmoduser type="string">miquan</sysmoduser>
    <sysmodtime type="dateTime">03/11/14 15:41:42</sysmodtime>
  </record>
</recordset>
