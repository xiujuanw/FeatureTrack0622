<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="enclapplrev">
  <record id="application.name=&quot;cm.open.save&quot;" recordid="cm.open.save">
    <application.name type="string">cm.open.save</application.name>
    <rev.array sctype="array">
      <rev.array sctype="structure">
        <rev.name type="string">zhouf</rev.name>
        <rev.date type="dateTime">02/25/13 15:59:39</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">check.size panel:</rev.desc>
          <rev.desc sctype="string">change</rev.desc>
          <rev.desc sctype="string">not rtecall("recordsizeok", $L.errcode, $L.file) and 10 in descriptor($L.file)~=-1</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">10 in descriptor($L.file)~=-1 and not rtecall("recordsizeok", $L.errcode, $L.file)</rev.desc>
        </rev.desc>
        <change.no type="decimal">90790</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">qiqingsong</rev.name>
        <rev.date type="dateTime">05/20/12 21:42:51</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel:</rev.desc>
          <rev.desc sctype="string">Change</rev.desc>
          <rev.desc sctype="string">(null($L.approvals) or lng(denull($L.approvals))=0) and category in $L.file.save="Unplanned Change"</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">(null($L.approvals) or lng(denull($L.approvals))=0) and category in $L.file.save="Unplanned Change" and approval.status in $L.file.save="denied"</rev.desc>
        </rev.desc>
        <change.no type="decimal">70718</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">ramuro</rev.name>
        <rev.date type="dateTime">02/29/12 12:14:20</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Recompiling, as a new parameter (Workflowhase) was added to the alert.schedule RAD application.</rev.desc>
        </rev.desc>
        <change.no type="decimal">72146</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">hzhang</rev.name>
        <rev.date type="dateTime">05/11/09 15:43:52</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">replace the error exit for update.record to decide.nosave1 so that it does not call validate.fields which causes infinite loop</rev.desc>
        </rev.desc>
        <change.no type="decimal">42175</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">07/04/07 09:04:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added exit.badval panel.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">03/03/07 16:18:30</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel exit.nosave</rev.desc>
          <rev.desc sctype="string">Changed $L.exit="bad.val" to $L.exit="nosave"</rev.desc>
        </rev.desc>
        <change.no type="decimal">39656</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">02/13/06 14:54:04</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Removed the entire line that I updated in the previous revision.</rev.desc>
        </rev.desc>
        <change.no type="decimal">37785</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">cblanck</rev.name>
        <rev.date type="dateTime">11/14/05 18:44:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">panel:  update.current</rev.desc>
          <rev.desc sctype="string">if the misc.array2 field was null then no approvals were set</rev.desc>
          <rev.desc sctype="string">changed the following line from:</rev.desc>
          <rev.desc sctype="string">if $L.saved then ($L.approvals=$L.approvals+denull(misc.array2 in $L.file))</rev.desc>
          <rev.desc sctype="string">to</rev.desc>
          <rev.desc sctype="string">if ($L.saved and not null(misc.array2 in $L.file)) then ($L.approvals=$L.approvals+denull(misc.array2 in $L.file))</rev.desc>
        </rev.desc>
        <change.no type="decimal">37785</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">10/30/05 16:58:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel set.change.vars</rev.desc>
          <rev.desc sctype="string">Changed "CM" to "ChM" in</rev.desc>
          <rev.desc sctype="string">$L.notify.name="ChM Change Open"</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Panel set.task.vars</rev.desc>
          <rev.desc sctype="string">Changed "CM" to "ChM" in</rev.desc>
          <rev.desc sctype="string">$L.notify.name="CM Task Open"</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">sanderson</rev.name>
        <rev.date type="dateTime">10/29/05 16:40:19</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Panel update.current</rev.desc>
          <rev.desc sctype="string">Removed 'and $L.saved' from this expression:</rev.desc>
          <rev.desc sctype="string">if (evaluate(paging in $L.phase) and $L.saved) then ((page in $L.file)+=1;(total.pages in $L.file)+=1)</rev.desc>
        </rev.desc>
        <change.no type="decimal">32519</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">04/13/05 02:02:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">I1361 Devtx 6.1</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Modified the no.parent.msg panel so that the normal exit is exit.nosave instead of exit.error.msg.  This will return a bad.val message instead of a soap fault.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">04/07/05 04:50:49</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">I1384  DEVTX 6.1</rev.desc>
          <rev.desc sctype="string">Modified decide.badval and decide.nosave panels to use the following condition.</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">$bypass.failed.validation=true and $L.bg</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">joeh</rev.name>
        <rev.date type="dateTime">03/28/05 18:51:10</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Devtx I0993</rev.desc>
          <rev.desc sctype="string"/>
          <rev.desc sctype="string">Added validate.phase process panel to check that a phase was listed in the category record.</rev.desc>
          <rev.desc sctype="string">Added invalid.phase message panel to send a message if the phase was invalid.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">03/19/05 18:10:02</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed the "nosave" exit to "bad.val"</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">03/16/05 17:27:35</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Default the open field to "true".  If no phase passed, use first phase in the category.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">pbudic</rev.name>
        <rev.date type="dateTime">01/11/05 19:54:25</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added the $L.file.save variable to parameters passed to alert.schedule.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">prietke</rev.name>
        <rev.date type="dateTime">06/08/04 21:12:58</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Added "add" to the Mode parm on the schedule.alerts panel.</rev.desc>
        </rev.desc>
        <change.no type="decimal">29426</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">07/13/03 20:22:21</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now creates an screlation record right after a change is added (it used to be created in cm3r.main)</rev.desc>
          <rev.desc sctype="string">* added two parameters:  related filename and related ID</rev.desc>
          <rev.desc sctype="string">* changed add.record exit from check.area to check.screlate</rev.desc>
          <rev.desc sctype="string">* set up check.screlate to call us.save.relation if a related ID is passed in with a change</rev.desc>
          <rev.desc sctype="string">* set up save.relation to call set.change.vars after an screlation is created</rev.desc>
        </rev.desc>
        <change.no type="decimal">20837</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">04/23/03 20:24:31</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Same change as below to check.master.sub.</rev.desc>
        </rev.desc>
        <change.no type="decimal">25809</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">04/23/03 19:42:15</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On check.master.fc, changed exit condition from name in $L.fc.master~=name in $L.fc to not same(name in $L.fc.master, name in $L.fc).</rev.desc>
        </rev.desc>
        <change.no type="decimal">25809</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">04/13/03 20:16:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Updated send.message to pass in $L.file.save.</rev.desc>
        </rev.desc>
        <change.no type="decimal">25493</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">04/05/03 21:49:08</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On update.current, set close.time to NULL.  It used to be set on cm.open:set.vars.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">03/25/03 15:16:54</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">On copyopen.task, changed the background setting from true to $L.bg.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">03/12/03 17:27:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Changed task query on count.open.task to select all associated tasks to copy and open, not just the open ones.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">02/18/03 16:26:34</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Can now copy and open changes with tasks:</rev.desc>
          <rev.desc sctype="string">- added a Copy Parent Number parameter to pass in the number of the original change</rev.desc>
          <rev.desc sctype="string">- modified check.auto.task to look for $L.copy.number; if not null, count the number of associated open tasks and call cmc.copyopen.task if the user chooses to clone them</rev.desc>
        </rev.desc>
        <change.no type="decimal">23894</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">07/08/02 03:29:07</rev.date>
        <rev.desc sctype="array"/>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">06/16/02 20:32:47</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Now calls get.base.form.name to set up the format control name.  The master.fc field in the object record is referenced instead of the filename to select the master format control record.</rev.desc>
        </rev.desc>
        <change.no type="decimal">19616</change.no>
      </rev.array>
      <rev.array sctype="structure">
        <rev.name type="string">lisa</rev.name>
        <rev.date type="dateTime">01/15/02 14:53:08</rev.date>
        <rev.desc sctype="array">
          <rev.desc sctype="string">Shifted panels so that paging is processed after the record is added/updated and alerts before.</rev.desc>
        </rev.desc>
        <change.no NullValue="1" type="decimal"/>
      </rev.array>
    </rev.array>
    <descript sctype="array">
      <descript sctype="string">check.size panel:</descript>
      <descript sctype="string">change</descript>
      <descript sctype="string">not rtecall("recordsizeok", $L.errcode, $L.file) and 10 in descriptor($L.file)~=-1</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">10 in descriptor($L.file)~=-1 and not rtecall("recordsizeok", $L.errcode, $L.file)</descript>
      <descript sctype="string">Panel:</descript>
      <descript sctype="string">Change</descript>
      <descript sctype="string">(null($L.approvals) or lng(denull($L.approvals))=0) and category in $L.file.save="Unplanned Change"</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">(null($L.approvals) or lng(denull($L.approvals))=0) and category in $L.file.save="Unplanned Change" and approval.status in $L.file.save="denied"</descript>
      <descript sctype="string">Recompiling, as a new parameter (Workflowhase) was added to the alert.schedule RAD application.</descript>
      <descript sctype="string">replace the error exit for update.record to decide.nosave1 so that it does not call validate.fields which causes infinite loop</descript>
      <descript sctype="string">Added exit.badval panel.</descript>
      <descript sctype="string">Panel exit.nosave</descript>
      <descript sctype="string">Changed $L.exit="bad.val" to $L.exit="nosave"</descript>
      <descript sctype="string">Removed the entire line that I updated in the previous revision.</descript>
      <descript sctype="string">panel:  update.current</descript>
      <descript sctype="string">if the misc.array2 field was null then no approvals were set</descript>
      <descript sctype="string">changed the following line from:</descript>
      <descript sctype="string">if $L.saved then ($L.approvals=$L.approvals+denull(misc.array2 in $L.file))</descript>
      <descript sctype="string">to</descript>
      <descript sctype="string">if ($L.saved and not null(misc.array2 in $L.file)) then ($L.approvals=$L.approvals+denull(misc.array2 in $L.file))</descript>
      <descript sctype="string">Panel set.change.vars</descript>
      <descript sctype="string">Changed "CM" to "ChM" in</descript>
      <descript sctype="string">$L.notify.name="ChM Change Open"</descript>
      <descript sctype="string"/>
      <descript sctype="string">Panel set.task.vars</descript>
      <descript sctype="string">Changed "CM" to "ChM" in</descript>
      <descript sctype="string">$L.notify.name="CM Task Open"</descript>
      <descript sctype="string">Panel update.current</descript>
      <descript sctype="string">Removed 'and $L.saved' from this expression:</descript>
      <descript sctype="string">if (evaluate(paging in $L.phase) and $L.saved) then ((page in $L.file)+=1;(total.pages in $L.file)+=1)</descript>
      <descript sctype="string">I1361 Devtx 6.1</descript>
      <descript sctype="string"/>
      <descript sctype="string">Modified the no.parent.msg panel so that the normal exit is exit.nosave instead of exit.error.msg.  This will return a bad.val message instead of a soap fault.</descript>
      <descript sctype="string">I1384  DEVTX 6.1</descript>
      <descript sctype="string">Modified decide.badval and decide.nosave panels to use the following condition.</descript>
      <descript sctype="string"/>
      <descript sctype="string">$bypass.failed.validation=true and $L.bg</descript>
      <descript sctype="string">Devtx I0993</descript>
      <descript sctype="string"/>
      <descript sctype="string">Added validate.phase process panel to check that a phase was listed in the category record.</descript>
      <descript sctype="string">Added invalid.phase message panel to send a message if the phase was invalid.</descript>
      <descript sctype="string">Changed the "nosave" exit to "bad.val"</descript>
      <descript sctype="string">Default the open field to "true".  If no phase passed, use first phase in the category.</descript>
      <descript sctype="string">Added the $L.file.save variable to parameters passed to alert.schedule.</descript>
      <descript sctype="string">Added "add" to the Mode parm on the schedule.alerts panel.</descript>
      <descript sctype="string">Now creates an screlation record right after a change is added (it used to be created in cm3r.main)</descript>
      <descript sctype="string">* added two parameters:  related filename and related ID</descript>
      <descript sctype="string">* changed add.record exit from check.area to check.screlate</descript>
      <descript sctype="string">* set up check.screlate to call us.save.relation if a related ID is passed in with a change</descript>
      <descript sctype="string">* set up save.relation to call set.change.vars after an screlation is created</descript>
      <descript sctype="string">Same change as below to check.master.sub.</descript>
      <descript sctype="string">On check.master.fc, changed exit condition from name in $L.fc.master~=name in $L.fc to not same(name in $L.fc.master, name in $L.fc).</descript>
      <descript sctype="string">Updated send.message to pass in $L.file.save.</descript>
      <descript sctype="string">On update.current, set close.time to NULL.  It used to be set on cm.open:set.vars.</descript>
      <descript sctype="string">On copyopen.task, changed the background setting from true to $L.bg.</descript>
      <descript sctype="string">Changed task query on count.open.task to select all associated tasks to copy and open, not just the open ones.</descript>
      <descript sctype="string">Can now copy and open changes with tasks:</descript>
      <descript sctype="string">- added a Copy Parent Number parameter to pass in the number of the original change</descript>
      <descript sctype="string">- modified check.auto.task to look for $L.copy.number; if not null, count the number of associated open tasks and call cmc.copyopen.task if the user chooses to clone them</descript>
      <descript sctype="string">Cleaned up paging.  Nullsubbed page and total.pages to 0 on update.current.</descript>
      <descript sctype="string">Now calls get.base.form.name to set up the format control name.  The master.fc field in the object record is referenced instead of the filename to select the master format control record.</descript>
      <descript sctype="string">Shifted panels so that paging is processed after the record is added/updated and alerts before.</descript>
    </descript>
    <release type="string">SC4.5</release>
    <sysmodcount type="decimal">4</sysmodcount>
    <sysmoduser type="string">zhouf</sysmoduser>
    <sysmodtime type="dateTime">02/25/13 16:00:17</sysmodtime>
  </record>
</recordset>
