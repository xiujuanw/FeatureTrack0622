<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;CIActualState&quot;" recordid="CIActualState">
    <name type="string">CIActualState</name>
    <script type="string">var strStyle = "&lt;STYLE&gt;\
body{\
  PADDING-RIGHT: 0px;\
  PADDING-LEFT:0px;\
  FONT-SIZE: 11px;\
  PADDING-BOTTOM:0px;\
  MARGIN:0px;\
  COLOR: #000000;\
  PADDING-TOP:0px;\
  FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif;\
  BACKGROUND-COLOR: #ffffff\
}\
\
.listTable{\
  font-family: Verdana, Arial, Helvetica, sans-serif;\
  margin:0px;\
  padding:0px;\
  font-size: 11px;\
  border-top: #ccc 0px solid;\
  border-bottom: #ccc 0px solid;\
  border-right: #ccc 0px solid;\
  color: #000000;\
  background: #ffffff;\
}\
\
.listTable TD{\
  border-left: #ccc 0px solid;\
  font-weight: normal;\
  padding:4px 6px 4px 6px;\
  color: #000000;\
  line-height: 14px;\
}\
\
.listTableEnd {\
  border-right: #ccc 0px solid;\
}\
\
.listTable TH{\
  border-top: #ccc 0px solid;\
  border-left: #ccc 0px solid;\
  font-weight: bold;\
  padding:4px;\
  background: #E0E0E0;\
  text-align: left;\
}\
\
.oddRow{\
  BACKGROUND: #edf3fe;\
  COLOR: #0000cc\
}\
.evenRow{\
  BACKGROUND: #ffffff;\
  COLOR: #0000cc\
}\
.listTable A{\
  color: #0000CC;\
  cursor: pointer;\
  text-decoration: none;\
}\
\
.listTable A:HOVER{\
  text-decoration: underline;\
  color: #0000FF;\
}\
\
.resultLink{\
  font-weight:bold;\
}\
\
.hithighlight{\
  FONT-WEIGHT: bold;\
}\
\
.resultHeading{\
  PADDING: 4px;\
  TEXT-ALIGN:left;\
  display: block;\
}\
.resultTable{\
  font-size: 11px;\
  PADDING: 4px;\
   TEXT-ALIGN:left;\
  display: block;\
  scrolling:auto;\
}\
\
.informationMessage{\
  font-size: 11px;\
  font-weight:bold;\
  TEXT-ALIGN:left;\
}\
\
.label{\
  TEXT-ALIGN:left;\
}\
&lt;/STYLE&gt;";

// HARDCODE TEST DATA


function getActualState(strCI_ID)
{
	var rcode;
	var strHTML = strStyle + "&lt;DIV class=\"resultTable\"&gt;&lt;TABLE class=\"listTable\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\"&gt;";
	var strColumnWidth = "width=\"40%\"";
	var	strRowClass;	
	
	//make sure we have a ucmdb.id else return message
	if(strCI_ID== "" || strCI_ID == null || strCI_ID == undefined )
	{
		return strHTML + "&lt;TR&gt;&lt;TD&gt;&lt;SPAN class=\"informationMessage\"&gt;"+ system.functions.scmsg(165, "ScriptLibrary")+"&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt;&lt;/DIV&gt;";
	}	
	
	var ucmdbSvc = {};
	var totalRows = 0;
	ucmdbSvc.location = lib.uCMDBConfiguration.getWebserviceUrl();
	ucmdbSvc.user     = lib.uCMDBConfiguration.getUsername();
	ucmdbSvc.password = lib.operatorUtil.getPassword(lib.uCMDBConfiguration.getPassword());
	
	var customerId = 1;
	// set CustomerID for multi tenant
	if( system.vars.$G_multi &amp;&amp; lib.uCMDBConfiguration.isEnabled() )
	{
		var companyData = lib.discoveryEvent.getUCMDBCompanyData(vars.$L_file);
		var customerId = companyData.ucmdb_customer_id;
		//set user name and password
		setUserNamePassword(ucmdbSvc,companyData);		
	} 

	var getAllCIPropertiesResp;
	try
	{
		getAllCIPropertiesResp = doGetActualState(ucmdbSvc.location, strCI_ID, ucmdbSvc.user, ucmdbSvc.password, customerId);
	}
	catch(e)
	{
		return strHTML + "&lt;TR&gt;&lt;TD&gt;&lt;SPAN class=\"informationMessage\"&gt;"+ system.functions.scmsg(164, "ScriptLibrary")+"&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;"+ e.toString() + "&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt;&lt;/DIV&gt;";
	}
	
	if ( getAllCIPropertiesResp.isFault() )
	{
	   return strHTML + "&lt;TR&gt;&lt;TD&gt;&lt;SPAN class=\"informationMessage\"&gt;"+ system.functions.scmsg(164, "ScriptLibrary")+"&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;"+ getAllCIPropertiesResp.faultstring.getValue() + "&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt;&lt;/DIV&gt;";
	}
	
	var numProps = getAllCIPropertiesResp.CI.prop.length;
		
	for( i= 0; i &lt; numProps; i++, totalRows++ )
	{
		strRowClass = totalRows%2==0 ? "evenRow" : "oddRow";
		strHTML += "&lt;TR valign=top CLASS=\""+ strRowClass +"\"&gt;";
		strHTML += "&lt;TD " + strColumnWidth +" &gt;" + 
					getLocalizedLabel( getAllCIPropertiesResp.CI.prop[i].name.getValue() )  + ": &lt;/TD&gt;";
		strHTML += "&lt;TD&gt;" + getAllCIPropertiesResp.CI.prop[i].value.getValue() + "&lt;/TD&gt;";
		strHTML += "&lt;/TR&gt;";
	}
	
	numProps = getAllCIPropertiesResp.CI.complexProp.length;
	
	for( i= 0; i &lt; numProps; i++ )
	{
		var numSubProps = getAllCIPropertiesResp.CI.complexProp[i].length();
		
		strRowClass = totalRows++%2==0 ? "evenRow" : "oddRow";

		for( j=0; j &lt; numSubProps; j++ )
		{
			strHTML += "&lt;TR valign=top CLASS=\""+ strRowClass +"\"&gt;";
			strHTML += "&lt;TD " + strColumnWidth +" &gt;" + 
						getLocalizedLabel( getAllCIPropertiesResp.CI.complexProp[i].className ) + "&lt;/TD&gt;";
			strHTML += "&lt;TD&gt;&lt;/TD&gt;";
			strHTML += "&lt;/TR&gt;";			
		
		    complexProp = getAllCIPropertiesResp.CI.complexProp[i].item[j].prop;
			numComplexPropItems = complexProp.length;
			
			for(k = 0; k &lt; numComplexPropItems; k++, totalRows++ )
			{
				strRowClass = totalRows%2==0 ? "evenRow" : "oddRow";
				strHTML += "&lt;TR valign=top CLASS=\""+ strRowClass +"\"&gt;";
				strHTML += "&lt;TD " + strColumnWidth +" &gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;" + 
							getLocalizedLabel( complexProp[k].name.getValue() ) + ": &lt;/TD&gt;";
				strHTML += "&lt;TD&gt;" + complexProp[k].value.getValue() + "&lt;/TD&gt;";
				strHTML += "&lt;/TR&gt;";
			}
		}
	}
		
	strHTML += "&lt;/TABLE&gt;&lt;/DIV&gt;";	
	
	return strHTML;
}

function getLocalizedLabel( label )
{
	var text;
	
	text = system.functions.scmsg( label, "ucmdb" );
	
	if (system.functions.index( "Message ", text ) == 0 )
	{
		return text==null?label:text;
	}
	var msg = new SCFile( "scmessage", SCFILE_READONLY );
	var sql = "syslanguage=\""+vars.$G_my_language+"\" and class=\"ucmdb\" and message.id=\""+label+"\"";
	
	if ( msg.doSelect( sql ) == RC_SUCCESS )
	{
		return msg.message==null?label:msg.message;
	}
	
	if ( vars.$G_my_language != "en" )
	{
		sql = "syslanguage=\"en\" and class=\"ucmdb\" and message.id=\""+label+"\"";
		if ( msg.doSelect( sql ) == RC_SUCCESS )
		{
			return msg.message==null?label:msg.message;
		}
	}
	
	msg.syslanguage = vars.$G_my_language;
	if (msg.syslanguage == null )
	{
		msg.syslanguage = "en";
	}
	msg.message_id = label;
	msg.severity = 10;
	msg.message = label;
	msg._class = "ucmdb";
	
	msg.doInsert();

	return label;
}

function setUserNamePassword(ucmdbSvc, companyData)
{
	if (companyData.ucmdb_userid != null)
	{
		ucmdbSvc.user = companyData.ucmdb_userid;
		if(companyData.ucmdb_password == null)
		{
			ucmdbSvc.password = "";
		}		
		else 
		{
			ucmdbSvc.password = lib.operatorUtil.getPassword(companyData.ucmdb_password);
		}
	}
}

function doGetActualState(url, ucmdbId, user, pass, company) {
    if (!company) company = 1;

    var reqBody = '&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://schemas.hp.com/ucmdb/1/types"&gt;'
        + '&lt;soap:Header/&gt;&lt;soap:Body&gt;&lt;typ:getAllCIProperties&gt;'
        + '  &lt;typ:ID&gt;' + ucmdbId + '&lt;/typ:ID&gt;'
        + '  &lt;typ:CustomerID&gt;' + company + '&lt;/typ:CustomerID&gt;'
        + '&lt;/typ:getAllCIProperties&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;';


    var baseAuth = "Basic " + lib.Base64Encoder.encode(user + ":" + pass);
    var headers = [];
    headers.push(new Header('Accept-Encoding', 'gzip,deflate'));
    headers.push(new Header('Content-Type', 'application/soap+xml;charset=UTF-8;action="getAllCIProperties"'));
    headers.push(new Header('Authorization', baseAuth));
    var respHeaders = {};
    var resp = doHTTPRequest("POST", url, headers, reqBody, 10, 10, null, respHeaders);

    var xml = new XML();
    xml.setContent(resp);
    var resultObj = {};
    lib.SOAP.deserialize( "ucmdbSMService", xml.getDocumentElement(), resultObj);
    var content = resultObj["soap_Envelope"][ "Body" ].getContent();
    return content;
}</script>
    <package type="string">Configuration Management</package>
    <sysmodtime type="dateTime">12/13/18 12:32:42</sysmodtime>
    <sysmoduser type="string">qiqingsong</sysmoduser>
    <sysmodcount type="decimal">137</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
