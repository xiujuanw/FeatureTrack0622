<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;colorindicatorsetting&quot;" recordid="colorindicatorsetting">
    <name type="string">colorindicatorsetting</name>
    <script type="string">
/**
*  This functions is used for color indicator setting
*
*
*/

var $ = lib.c.$;

function getCSS()
{

    var style;
    style =		"&lt;style&gt; ";
    style +=	"body{border:0 0 0 0;margin:0;font-size:14px;padding:0}";
    style +=	".error{color: #454323;background: white;}";
    style +=	".error td{padding:1 2 1 1;color: red;line-height: 12;}";
    style +=	".main{width:100%;font-size: 12px;text-align: left}";
    style +=	".main th{font-size: 14px; font-weight: normal;padding:0;background: #ebebeb;border-right: solid 1px #888;border-bottom: solid 1px #888;text-align: left;}";
    style +=	"th.rowtitle{font-weight: bold;padding:0;background: #99BBE8;}";
    style +=	".main td{border-bottom: 1px solid #ededed}";
    style +=	"&lt;/style&gt;"

    return style;

}

function getGlobalList(tablename, fieldname) {
  // get global list from datadict
  if (tablename == null || fieldname == null) {
    return null;
  }
  var datadict = $("datadict").select('name="' + tablename + '"').uniqueResult();
  if (datadict != null) {
    var index = system.functions.index(fieldname, datadict.fields);
    if (index &gt; 0) {
      var gl = datadict.globallist[index - 1];
      if (gl != null) {
        return $("globallists").select('name="' + gl + '"').uniqueResult();
      }
    }
  }
  return null;
}

function getDisplayValue( v, gl) {
  if (gl == null || v == null) return v;
  if (gl.list_variable != null) {
    var valueList = vars[gl["list.variable"]];
    var index = system.functions.index(v, valueList);
    if (index &gt; 0 &amp;&amp; gl.display_variable != null &amp;&amp; vars[gl["display.variable"]] != null) {
      return vars[gl["display.variable"]][index - 1]
    }
  }
  return v;
}

// Get field names and captions for dbdict and datadict tables.
function getFields4Dict(tablename) {
  if (tablename == "datadict" || tablename == "dbdict") {
    vars.$L_com_list  = $("#datadictService").getAvailableFields(tablename);
    var returnCode;
    system.functions.rtecall("sort", returnCode, vars.$L_com_list, 1, 0);
    vars.$fieldNames = vars.$L_com_list[0];
    vars.$fieldCaptions = vars.$L_com_list[1];
  }
}

function codeLink(sLink, sType) {

       if (sType == "en") {
             sLink = sLink.replace(/\(/g, "::opnb1::");
             sLink = sLink.replace(/\)/g, "::clsb1::");
             sLink = sLink.replace(/\[/g, "::opnb2::");
             sLink = sLink.replace(/\]/g, "::clsb2::");
             sLink = sLink.replace(/\*/g, "::star1::");
             sLink = sLink.replace(/\\/g, "::slas0::");
             sLink = sLink.replace(/\?/g, "::ques3::");
           return sLink;
       } else if (sType == "de") {

             sLink = sLink.replace(/::opnb1::/g, "(");
             sLink = sLink.replace(/::clsb1::/g, ")");
             sLink = sLink.replace(/::opnb2::/g, "[");
             sLink = sLink.replace(/::clsb2::/g, "]");
             sLink = sLink.replace(/::star1::/g, "*");
             sLink = sLink.replace(/::slas0::/g, "\\");
             sLink = sLink.replace(/::ques3::/g, "?");
           return sLink;
       }
}


function quoteText(sText) {
  sText = sText.replace(/&amp;/g, "&amp;amp;");
  sText = sText.replace(/\&gt;/g, "&amp;gt;");
  sText = sText.replace(/\&lt;/g, "&amp;lt;");
  sText = sText.replace(/\"/g, "&amp;quot;");
  sText = sText.replace(/\'/g, "'");
  sText = sText.replace(/\//g, "/");  
  return sText;
}
function unquoteText(sText) {
  sText = sText.replace(/&amp;gt;/g, "&gt;");
  sText = sText.replace(/&amp;lt;/g, "&lt;");
  sText = sText.replace(/&amp;quot;/g, "\"");
  sText = sText.replace(/&amp;amp;/g, "&amp;");
  return sText;
}
function list(record) {
  if(record.file=='sla') {
    return listSlmStatus(record);
  }
  
  if (record != null) {
    var html =  getCSS();
    html += "&lt;table class=\"main\" style=\"border-spacing: 0px;\"&gt;\n";
    html += "&lt;TR&gt;";
    html += "&lt;TH width='20%' style=\"padding-left: 2px;padding-right: 2px;\"&gt;" + system.functions.scmsg(1, "colorindicatorsetting") + "&lt;/TH&gt;";
    html += "&lt;TH width='20%' style=\"padding-left: 2px;padding-right: 2px;\"&gt;" + system.functions.scmsg(2, "colorindicatorsetting") + "&lt;/TH&gt;";
    html += "&lt;TH width='15%' style=\"padding-left: 2px;padding-right: 2px;\"&gt;" + system.functions.scmsg(3, "colorindicatorsetting") + "&lt;/TH&gt;";
    html += "&lt;TH width='15%' style=\"padding-left: 2px;padding-right: 2px;;\"&gt;" + system.functions.scmsg(4, "colorindicatorsetting") + "&lt;/TH&gt;";
    html += "&lt;TH width='20%' style=\"padding-left: 2px;padding-right: 2px;\"&gt;" + system.functions.scmsg(5, "colorindicatorsetting") + "&lt;/TH&gt;";
    html += "&lt;TH style=\"border-right: none;\"&gt;&amp;nbsp;&lt;/TH&gt;";
	html += "&lt;/TR&gt;";
	var length = system.functions.lng(record.value);
	var gl = getGlobalList(record.file, record.field);
	for (var i= 0; i&lt; length; i++) {
	  var v = record.value[i];
	  if (v == null) continue;
	  var f = record.fgcolor[i];
	  var b = record.bgcolor[i];
      html += "&lt;TR&gt;&lt;TD&gt;" + quoteText("" + v) + "&lt;/TD&gt;";
      var displayText = quoteText(getDisplayValue(v, gl));
      html += "&lt;TD&gt;" + displayText + "&lt;/TD&gt;";
      html += "&lt;TD&gt;" + (f?f:"&amp;nbsp;") + "&lt;/TD&gt;";
      html += "&lt;TD&gt;" + (b?b:"&amp;nbsp;") + "&lt;/TD&gt;";
      html += "&lt;TD style=\"" + (b?"background-color:" + b + ";" : "")
                     + (f?"color:" + f : "") + "\"&gt;" + displayText + "&lt;/TD&gt;";
      html += "&lt;TD&gt;";
      var codelink = codeLink(encodeURIComponent(v), "en");
      html += "&lt;a href=\"scactivelink://edit:"+ codelink +"\"&gt;" + system.functions.scmsg(6, "colorindicatorsetting") + "&lt;/a&gt;";
      html += "&amp;nbsp;&lt;a href=\"scactivelink://remove:"+ codelink +"\"&gt;" + system.functions.scmsg(7, "colorindicatorsetting") + "&lt;/a&gt;";
      html += "&lt;/TD&gt;";
	  html += "&lt;/TR&gt;";
	}
	html += "&lt;/table&gt;";    

	return html;
  }
}


function listSlmStatus(record) {
    if (record != null) {
        var html = getCSS();
        html += "&lt;table class=\"main\" style=\"border-spacing: 0px;\"&gt;\n";
        html += "&lt;tr&gt;";
        html += "&lt;th width='20%' style=\"padding-left: 2px;padding-right: 2px;\"&gt;" + funcs.scmsg(8, "colorindicatorsetting") + "&lt;/th&gt;"; // Type
        html += "&lt;th width='20%' style=\"padding-left: 2px;padding-right: 2px;\"&gt;" + funcs.scmsg(9, "colorindicatorsetting") + "&lt;/th&gt;"; // Color
        html += "&lt;th width='20%' style=\"padding-left: 2px;padding-right: 2px;\"&gt;" + funcs.scmsg(5, "colorindicatorsetting") + "&lt;/th&gt;";
        html += "&lt;th style=\"border-right: none;\"&gt;&amp;nbsp;&lt;/th&gt;";
        html += "&lt;/tr&gt;";
    
        var list = ['background', 'level1', 'level2', 'level3', 'level4', 'level5'];
        
        var msgClazz = ['10', '11', '12', '13', '14', '15', '16'];
        var length = list.length;
    
        for (var i = 0; i &lt; length; i++) {
            var b = record.bgcolor[i];
            html += "&lt;tr&gt;&lt;td&gt;" + quoteText(funcs.scmsg(msgClazz[i], 'colorindicatorsetting')) + "&lt;/td&gt;";
            html += "&lt;td&gt;" + (b ? b : "&amp;nbsp;") + "&lt;/td&gt;";
            html += "&lt;td style=\"" + (b ? "background-color:" + b + ";" : "") + "\"&gt;&lt;/td&gt;";
            var codelink = codeLink(encodeURIComponent(list[i]), "en");
            html += "&lt;td&gt;&lt;a href=\"scactivelink://edit:" + codelink + "\"&gt;" + funcs.scmsg(6, "colorindicatorsetting") + "&lt;/a&gt;&lt;/td&gt;";
            html += "&lt;/tr&gt;";
        }
        html += "&lt;/table&gt;";
        
        return html;
    }
}</script>
    <package type="string">BaseUtilities</package>
    <sysmodtime type="dateTime">06/08/20 14:37:27</sysmodtime>
    <sysmoduser type="string">qiqingsong</sysmoduser>
    <sysmodcount type="decimal">167</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
