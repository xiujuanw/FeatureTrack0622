<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;KMQuery_IDOL&quot;" recordid="KMQuery_IDOL">
    <name type="string">KMQuery_IDOL</name>
    <script type="string">/**  @fileoverview KMQuery_IDOL
 *   @author Yang,Chun-Fu
 */

var _ = lib.Underscore.require(),
    KMCollection_Update_Utils = lib.KMCollection_Update_Utils,
    IDOLGlobalSearchLibrary = lib.IDOLGlobalSearchLibrary.require(),
    IDOLKMSecurity          = lib.IDOLKMSecurity.require(),
    IDOLKMFieldMapping      = lib.IDOLKMFieldMapping.require(),
    IDOLKMQueryParameter    = lib.IDOLKMQueryParameter.require();

var logger = getLog('KMQuery_IDOL');

var KMQuery_IDOL= (function(){


  function getKMRawCategory(fKmKnowledgebase, scLibFile) {
    var categoryStr = lib[fKmKnowledgebase.categoryindexscript].getCategoryStr(scLibFile);
    return categoryStr || '';
  }

  function kmCategoryString(fKmKnowledgebase, scLibFile ) {
    var categoryStr = getKMRawCategory(fKmKnowledgebase, scLibFile);
    return KMCollection_Update_Utils.categoryStrtoName(categoryStr);
  }

  function kmCategoryArray(fKmKnowledgebase, scLibFile) {
    var categoryStr = getKMRawCategory(fKmKnowledgebase, scLibFile) || '';
    return categoryStr ? categoryStr.split(";") : [];
  }

  function getOnLineLibs() {
    var libs = IDOLGlobalSearchLibrary.getLibraryList();
    return _.pluck(libs, 'name');
  }
  
  function getAllOnLineLibs() {
    var libs = IDOLGlobalSearchLibrary.getAllLibraryList();
    return _.pluck(libs, 'name');
  }

  function getEpochSeconds(date) {
    var seconds = Math.floor(date.getTime()/1000);
    return seconds+'e';
  }

  return {
    getSecurityInfo         : IDOLKMSecurity.getSecurityInfo,
    processIDOL             : IDOLKMFieldMapping.processFieldMapping,
    normalField             : IDOLKMFieldMapping.mappingIDOLField,
    dateField               : IDOLKMFieldMapping.mappingIDOLDateField,

    getEpochSeconds         : getEpochSeconds,
    getCategoryString       : kmCategoryString,
    getKMSearchCategoryArray: kmCategoryArray,
    getOnLineLibs           : getOnLineLibs,
    getAllOnLineLibs        : getAllOnLineLibs
  };
}());

function require() {
  return KMQuery_IDOL;
}
</script>
    <package type="string">KnowledgeManagement</package>
    <sysmodtime type="dateTime">11/22/16 20:27:32</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">345</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted type="boolean">false</sysrestricted>
  </record>
</recordset>
