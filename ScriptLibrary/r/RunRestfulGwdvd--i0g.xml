<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;RunRestfulGwdvd&quot;" recordid="RunRestfulGwdvd">
    <name type="string">RunRestfulGwdvd</name>
    <script type="string">var _ = lib.Underscore.require();

var logger = getLog('RunRestfulgwscripteval');
var getCurrentOperator = lib.GatewayAPI_Util.getCurrentOperator;

/**
 * Request payload, a json object of input fields, for e.g.:
 *   fields: {
 *     "NewORDeactivate": {
 *         mandatory: false,
 *         visible: true,
 *         type: 'radio',
 *         value: ''
 *     },
 *     "SerialNumber": {
 *         mandatory: '[NewORDeactivate]="Deactivate"',
 *         visible: '[NewORDeactivate]="Deactivate"',
 *         type: 'string',
 *         value: ''
 *     },
 *     "SecureIDORSoftID": {
 *         mandatory: '[NewORDeactivate]="New"',
 *         visible: '[NewORDeactivate]="New"',
 *         type: 'combo',
 *         value: ''
 *     },
 *     "Company": {
 *         mandatory: false,
 *         visible: '[SecureIDORSoftID]="Secure ID"',
 *         type: 'combo',
 *         value: ''
 *     },
 *     "Department": {
 *         mandatory: '$L.format&lt;&gt;"svcCat.disp.item"',
 *         visible: '[SecureIDORSoftID]="Secure ID"',
 *         type: 'string',
 *         value: ''
 *     },
 *     "Address": {
 *         mandatory: '$L.format="svcCat.disp.item"',
 *         visible: '[SecureIDORSoftID]="Secure ID"',
 *         type: 'string',
 *         value: ''
 *     },
 *     "OperatingSystem": {
 *         mandatory: '[SecureIDORSoftID]="Soft ID"',
 *         visible: '[SecureIDORSoftID]="Soft ID"',
 *         type: 'combo',
 *         value: ''
 *     }
 * }
 * Response body, the validated json object, for e.g.:
 *   fields: {
 *     "NewORDeactivate": {
 *         mandatory: false,
 *         visible: true,
 *         type: 'radio',
 *         value: ''
 *     },
 *     "SerialNumber": {
 *         mandatory: '[NewORDeactivate]="Deactivate"',
 *         visible: '[NewORDeactivate]="Deactivate"',
 *         type: 'string',
 *         value: ''
 *     },
 *     "SecureIDORSoftID": {
 *         mandatory: '[NewORDeactivate]="New"',
 *         visible: '[NewORDeactivate]="New"',
 *         type: 'combo',
 *         value: ''
 *     },
 *     "Company": {
 *         mandatory: false,
 *         visible: '[SecureIDORSoftID]="Secure ID"',
 *         type: 'combo',
 *         value: ''
 *     },
 *     "Department": {
 *         mandatory: '$L.format&lt;&gt;"svcCat.disp.item"',
 *         visible: '[SecureIDORSoftID]="Secure ID"',
 *         type: 'string',
 *         value: ''
 *     },
 *     "Address": {
 *         mandatory: '$L.format="svcCat.disp.item"',
 *         visible: '[SecureIDORSoftID]="Secure ID"',
 *         type: 'string',
 *         value: ''
 *     },
 *     "OperatingSystem": {
 *         mandatory: '[SecureIDORSoftID]="Soft ID"',
 *         visible: '[SecureIDORSoftID]="Soft ID"',
 *         type: 'combo',
 *         value: ''
 *     }
 * } 
 */
function POST(req, res) {
	var msgs = [];
	var oriOperator=getCurrentOperator().name;
	//logger.info("oldoper"+oriOperator);
	if (req.body.gwdvdfields.operator !=null) {
	   var requestOnBehalf=req.body.gwdvdfields.operator;
	   if (oriOperator!=requestOnBehalf)
	    lib.GatewayAPI_Util.changeUserSession(requestOnBehalf);
	} 
	var newOper=getCurrentOperator().name;
	//logger.info("newoper"+newOper);
	var fields = req.body.gwdvdfields.fields;
	// 1. validate whether the mandatory and visible condition are supported or not
	for (var fieldId in fields) {
		var msg = checkFieldCondition(fieldId, fields[fieldId], 'mandatory');
		if(msg!=null) {
			msgs.push(msg);
		}
		var msg = checkFieldCondition(fieldId, fields[fieldId], 'visible');
		if(msg!=null) {
			msgs.push(msg);
		}
		var msg = checkFieldCondition(fieldId, fields[fieldId], 'query');
		if(msg!=null){
			msgs.push(msg);
		}
		var msg = checkFieldCondition(fieldId, fields[fieldId], 'value');
		if(msg!=null){
			msgs.push(msg);
		}
		var msg = checkFieldArrayCondition(fieldId, fields[fieldId], 'parameters');
        if(msg != null) {
            msgs.push(msg);
        }
	}
	
	// 2, evaluate the fields 
	var validatedFieldsObj = lib.GatewayAPI_Form_DVD.evaluate(req.body.gwdvdfields.fields);
	var result;
	if(validatedFieldsObj!=null) {
		result = rteJSONStringify(validatedFieldsObj);		
	} else {
		result = '';
	}
	res.send({
		Messages: msgs,
		fields: result
	});
	if (newOper!=oriOperator) lib.GatewayAPI_Util.changeUserSession(oriOperator);
}

function checkFieldCondition(fieldId, field, condType) {
	var cond = field[condType];
	if(cond != undefined &amp;&amp; typeof(cond)==='string' &amp;&amp; cond.indexOf('$L.')&gt;=0) {
		field[condType] = false;
		return 'The field ' + fieldId + '\'s ' + condType + ' condition "' + cond + '" is not supported, reset to false by default!';
	}
	return null;
}
function checkFieldArrayCondition(fieldId, field, condType) {
    var cond = field[condType];
    if (cond != undefined) {
        for (var i = 0; i&lt; funcs.lng(cond); i++) {
            if (cond[i].indexOf('$L.')&gt;=0) {
                cond[i] = false;
                return 'The field ' + fieldId + '\'s ' + condType + ' condition "' + cond[i] + '" is not supported, reset to false by default!';
            }
        }
    }
    return null;
}

function authorize() {
	return true;
}

</script>
    <package type="string">Integration</package>
    <sysmodtime type="dateTime">08/26/20 10:46:58</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">59</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
