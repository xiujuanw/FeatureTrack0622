<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;RendingUtil&quot;" recordid="RendingUtil">
    <name type="string">RendingUtil</name>
    <script type="string">
/**
input:
the format
output:
the propertyArray which is like:
priority.code,ValueList=,DisplayList=,
priority.code,1,1 - Critical,
priority.code,2,2 - High,
priority.code,3,3 - Average,
priority.code,4,4 - Low,
severity,ValueList=,DisplayList=,
severity,1,1 - Critical,
severity,2,2 - High,
severity,3,3 - Average,
severity,4,4 - Low,
initial.impact,ValueList=,DisplayList=,
initial.impact,1,1 - Enterprise,
initial.impact,2,2 - Site/Dept,
initial.impact,3,3 - Multiple Users,
initial.impact,4,4 - User
*/
function generateFormPropertyArray(format)
{
    var propertyArray=new Array();
    var fieldArray=format[1]
    for (var i = 0; i &lt;system.functions.lng(fieldArray); i++)
    {
        var tempArraylength=propertyArray.length;
        // handle display list and value list.
        //formArray[i][10] contains the property of the form
        var displayStartLocation = system.functions.index("DisplayList",fieldArray[i][10]);
        //formArray[i][7] contains the field name.
        if (fieldArray[i][7]!=null &amp;&amp; displayStartLocation&gt;0)
        {
            var valueStartLocation = system.functions.index("ValueList",fieldArray[i][10]);
            var displayEndLocation = system.functions.index("\t",fieldArray[i][10],displayStartLocation);
            var valueEndLocation = system.functions.index("\t",fieldArray[i][10],valueStartLocation);
            
            var displayProperty=fieldArray[i][10].substring(displayStartLocation-1,displayEndLocation-1);
            var valueProperty=fieldArray[i][10].substring(valueStartLocation-1,valueEndLocation-1);
            
            var displayArray = new Array();
            var valueArray = new Array();
            
            //if we use global list in diaplayProperty, we shall parse the global list variable
            if (displayProperty.substr(12,1)=="$") 
            {
                var temparr1=new Array();
                var temp=system.functions.parse_evaluate(displayProperty.substr(12),8);
                if (temp!=null)
                {
                    temparr1=temp.toArray();
                }
                displayArray[0]="DisplayList=";
                for(var k=0; k&lt;temparr1.length; k++)
                {
                    displayArray[k+1]=temparr1[k];
                }
            } else {
            	displayProperty = displayProperty.replace('DisplayList=', 'DisplayList=;');
            	displayArray=displayProperty.split(";");
           	}
           	
            //if we use global list in valueProperty, we shall parse the global list variable
            if (valueProperty.substr(10,1)=="$") 
            {
                var temparr2=new Array();
                var valuePropertyArray=system.functions.parse_evaluate(valueProperty.substr(10),8);
                if (valuePropertyArray != null)
	                temparr2=valuePropertyArray.toArray();
                valueArray[0]="ValueList=";
                for(var l=0; l&lt;temparr2.length; l++)
                {
                    valueArray[l+1]=temparr2[l];
                }
            } else {
            	valueProperty = valueProperty.replace('ValueList=', 'ValueList=;');
            	valueArray=valueProperty.split(";");
           	}
            
            // add display list and value list to return array: propertyArray.
            for(var j =0; j&lt;valueArray.length;j++)
            {
                propertyArray[j+tempArraylength]=new Array();

                propertyArray[j+tempArraylength][0]=fieldArray[i][7];
                propertyArray[j+tempArraylength][1]=valueArray[j];
                propertyArray[j+tempArraylength][2]=(displayArray[j]!=null)?displayArray[j]:valueArray[j];

            }
        }
    }
    return propertyArray;
}

/**
input:
fieldname
propertyArray (rad array of array)
the value of the field
return:
the value in display list of our field

As this function is much slower 500% than rad, I will not use it. The time is cost at var tempArray=propertyArray[i].toArray();
if we have 10000 records, the function will cost a lot of time
*/
function replaceValueToDispaly(fieldname, propertyArray,value)
{
    for (var i =0 ; i&lt;system.functions.lng(propertyArray);i++){
        var tempArray=propertyArray[i].toArray();
        if (tempArray[0]==fieldname &amp;&amp; tempArray[1]==value){

            return tempArray[2];
        }
    }
    return value;
}


/**
 * Return max size of export external file.
 *
 * The uppper limit is 50M for uncompress file, but for some languages those  
 * which use double size such as Chinese, the limit should be 25M. 
 */
function getMaxExternalFileSize()
{
	return 25000000;
}


/**
 * Parse Query parameter
 *
 * @param parameter string, e.g. {"initial.impact", "number"}
 * @return array
 */
function parseQueryParameter(arrayStr)
{
	if (arrayStr.length &lt;= 2)
		return null;
	
	// remove brace {}, e.g. "initial.impact", "number"
	arrayStr = arrayStr.substring(1, arrayStr.length-1);
	
	// remove quote "", e.g. initial.impact, number
	arrayStr = arrayStr.replace(/\"/g,"");
	
	var array = arrayStr.split(",");
	
	// empty array, return null
	if (array.length == 0)
		return null;
	
	for (var i = 0; i &lt; array.length; i++)
	{
    	// trim
		array[i] = array[i].replace(/(^\s*)|(\s*$)/g, "");
		
		// change 0/1 to false/true
		if (array[i] == 0)
			array[i] = false;
		else if (array[i] == 1)
			array[i] = true;
	}
	
	return array;	
}

function isEscapeChar(c){
	return c=='=' || c== '@' || c== '-' || c== '+';
}

function escapeCsv(value, sep) {
	if(typeof(value)!='string') {
		return value;
	}
	
	if(sep!=','){
		value = value.replace(/([,\t])([-+=@])/g, '$1\'$2');
	}
	
	if(value.length&gt;0 &amp;&amp; isEscapeChar(value.charAt(0))){
		return '\''+value;
	}
	
	return value;
}
</script>
    <package type="string">BaseUtilities</package>
    <sysmodtime type="dateTime">07/26/18 03:27:01</sysmodtime>
    <sysmoduser type="string">qiqingsong</sysmoduser>
    <sysmodcount type="decimal">21</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
