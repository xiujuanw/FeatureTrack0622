<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;IDOLGlobalSearchAutoCompletionFilter&quot;" recordid="IDOLGlobalSearchAutoCompletionFilter">
    <name type="string">IDOLGlobalSearchAutoCompletionFilter</name>
    <script type="string">var _ = lib.Underscore.require(),
    IDOLKMQueryFactory = lib.IDOLKMQueryFactory.require(),
    IDOLClientFactory = lib.IDOLClientFactory.require(),
    IDOLAdvancedSettings = lib.IDOLAdvancedSettings.require();

var GlobalSearchSettings = IDOLAdvancedSettings.GlobalSearch;

var IDOLGlobalSearchAutoCompletionFilter = (function() {

  function queryStartWith(qs, criteria) {
    var keyword = qs.query || '*',
        options = {},
        start = parseInt(qs.start, 10) || 1,
        limit = parseInt(qs.limit, 10) || GlobalSearchSettings.PARAMETRIC_PAGE_SIZE;

    var fKMQuery = new SCFile('kmquery');
    fKMQuery.query = keyword;

    options = _.extend(options, {
      "Start" : start,
      "MaxValues" : start + limit - 1
    });

    var client = IDOLClientFactory.create('GlobalSearch');
    var IDOLKMQuery = IDOLKMQueryFactory.create('parametric', fKMQuery, criteria);
    var result = IDOLKMQuery.search(options);
    var field = criteria['__field__'];
    if(field &amp;&amp; field.libname &amp;&amp; field.libname == "Knowledge_Library" &amp;&amp; field.fieldname == "hotnews")
    {
      IDOLKMQuery.fKMQuery.kmlib_hotnews = true;
      var hotnews = IDOLKMQuery.search(options);
      //        {"data":[{"text":"false","value":"false","count":198},{"text":"true","value":"true","count":4}],"total":2}
      //hotnews:{"data":[{"text":"true","value":"true","count":1}],"total":1}
      var i=0;
      for(;hotnews &amp;&amp; hotnews["data"] &amp;&amp; i&lt;hotnews["data"].length;i++)
      {
        if(hotnews["data"][i]["value"]=="true" &amp;&amp; hotnews["data"][i]["count"] != null)
        {
           var tcount = hotnews["data"][i]["count"] ;
           var old_fcount =0;
           var old_tcount =0;
           var j=0;
           for(;result&amp;&amp; result["data"] &amp;&amp; j&lt;result["data"].length;j++)
           {
             if(result["data"][j].value == "true")
             {
               old_tcount = result["data"][j].count;
               
             }
             else if(result["data"][j].value == "false")
             {
               old_fcount = result["data"][j].count;               
             }
           }
           if(old_tcount != tcount &amp;&amp; old_tcount &gt; 0 )
           {
             j=0;
             for(;result &amp;&amp; result.data &amp;&amp; j&lt;result.data.length;j++)
             {
               if(result["data"][j].value == "true")
               {
                 result.data[j].count = tcount;
               }
               else if(result["data"][j].value == "false")
               {
                 result.data[j].count = old_fcount + old_tcount - tcount;
               }
             }
           }
        }
      }
    } 
    return result;
  }

  return {
    query : queryStartWith
  };
}());


function require() {
  return IDOLGlobalSearchAutoCompletionFilter;
}</script>
    <package type="string">IDOL</package>
    <sysmodtime type="dateTime">06/15/21 00:48:36</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">0</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
