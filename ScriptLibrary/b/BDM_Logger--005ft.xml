<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;BDM_Logger&quot;" recordid="BDM_Logger">
    <name type="string">BDM_Logger</name>
    <script type="string">
Logger.DEBUG = 0;
Logger.INFO = 1;
Logger.WARN = 2;
Logger.ERROR = 3;

function Logger( le ) {

    if (le == undefined || le == null || le &lt; 0) le = Logger.INFO;

    return {
        logLevel: le,
        setLogLevel: function( level ) {
            this.logLevel = level;
        },

        debug: function( msg, clazz ) {
            this._printLog( Logger.DEBUG, msg, clazz );
        },

        isDebug: function() {
            return this.logLevel &lt;= Logger.DEBUG;
        },

        info: function( msg, clazz ) {
            this._printLog( Logger.INFO, msg, clazz );
        },

        isInfo:function() {
            return this.logLevel &lt;= Logger.INFO;
        },

        warn: function( msg, clazz ) {
            this._printLog( Logger.WARN, msg, clazz );
        },

        isWarn:function() {
            return this.logLevel &lt;= Logger.WARN;
        },

        error: function( msg, clazz ) {
            this._printLog( Logger.ERROR, msg, clazz );
        },

        isError:function() {
            return this.logLevel &lt;= Logger.ERROR;
        },

        _printLog: function( l, msg, clazz ) {

            if ( l == null || l &lt; 0 ) l = Logger.INFO;
            clazz = clazz || 'BDM_Logger';

            var prefix = "";
            switch ( l ) {
                case Logger.DEBUG:
                    prefix = "DEBUG";
                    break;
                case Logger.INFO:
                    prefix = "INFO";
                    break;
                case Logger.WARN:
                    prefix = "WARN";
                    break;
                case Logger.ERROR:
                    prefix = "ERROR";
                    break;
                default:
                    prefix = "ERROR";
            }

            if ( this.logLevel &lt;= l ) {
                print( "[" + prefix + "][" + clazz + "]: " + msg );

            }
        }
    }
}

var __log_instance = Logger( Logger.INFO );


function log( fileName ) {
    return {
        isDebug : function( functionName ) { 
            return __log_instance.isDebug();
        },
        isInfo : function( functionName ) { 
            return __log_instance.isInfo();
        },
        isWarn : function( functionName ) { 
            return __log_instance.isWarn();
        },
        isError : function( functionName ) { 
            return __log_instance.isError();
        },

        debug : function( msg ) { 
            __log_instance.debug( msg, fileName );
        },
        info : function( msg ) { 
            __log_instance.info( msg, fileName );
        },
        warn : function( msg ) { 
            __log_instance.warn( msg, fileName );
        },
        error : function( msg ) { 
            __log_instance.error( msg, fileName );
        }
    };
}
</script>
    <package type="string">BDM</package>
    <sysmodtime type="dateTime">02/01/10 16:43:17</sysmodtime>
    <sysmoduser type="string">zengwe</sysmoduser>
    <sysmodcount type="decimal">3</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
