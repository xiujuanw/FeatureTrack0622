<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;DBUtils&quot;" recordid="DBUtils">
    <name type="string">DBUtils</name>
    <script type="string">function File(fileName, fields, sortBy, orderBy) {
    this.fileName = fileName;
    if (sortBy)
    	this.sortBy = sortBy;
    if (orderBy) {
    	if (!(orderBy instanceof Array))
    		orderBy = [orderBy];
	 	var orderValues = {
			ASC: SCFILE_ASC,
			DESC: SCFILE_DSC,
			DSC: SCFILE_DSC
		};
		orderValues[(SCFILE_ASC).toString()] = SCFILE_ASC;
		orderValues[(SCFILE_DSC).toString()] = SCFILE_DSC;		
		for (var i=0; i&lt;orderBy.length; ++i) {
    		if (orderBy[i] === SCFILE_ASC || orderBy[i] === SCFILE_DSC)
    			continue;
    		else if (
    				typeof orderBy[i] == 'string' &amp;&amp; 
    				orderValues[orderBy[i].toUpperCase()]
    			)
    			orderBy[i] = orderValues[orderBy[i].toUpperCase()]
    		else
    			orderBy[i] = SCFILE_ASC;
		}
    
    	this.orderBy = orderBy;
    } else
    	this.orderBy = [SCFILE_ASC];
    	
    if (fields == undefined) {
        this.scFile = new SCFile(fileName);
    } else {
        this.scFile = new SCFile(fileName, SCFILE_READONLY);
        this.scFile.setFields(fields);
    }
    
    if (this.sortBy) {
    	this.scFile.setOrderBy([].concat(this.sortBy), this.orderBy);
    }
    
}

File.prototype.setPaging = function (start, size) {
	this.paging = true;
	this.pageStart = start;
	this.pageSize = size;
}

File.prototype.getRecords = function(queryString) {
	var scReturnCode = this.scFile.doSelect(queryString);
	if(scReturnCode == RC_BAD_QUERY)
		throw new Error('Bad Query:' + queryString);
	if(scReturnCode == RC_NO_MORE)
		return null;
	var file = this;
    return {
    	scFile: this.scFile,
    	scReturnCode: scReturnCode,
    	each: function(run) {
    		if(this.scReturnCode == RC_SUCCESS) {
    			this.scFile.getFirst();
    			var pi = 1;
				do {
					if (file.paging) {
						if (pi &lt; file.pageStart) { ++pi; continue; }
						else if (pi &gt;= file.pageStart + file.pageSize) break;
						else ++pi;
					}
	    			if (run(this.scFile) === false) break;
				}while(this.scFile.getNext() == RC_SUCCESS)
    		}
    	}
    };
}

function getQueryByRecord(record)
{
    var lVoid    = new SCDatum();
    var lRtnCode = new SCDatum();
    var lRtnSql  = new SCDatum();
    var lTag     = getTagByRecord(record);
    var lInitedFile = new SCFile(system.functions.filename(record));
    lVoid = system.functions.rtecall("tagquery", lRtnCode, lInitedFile, lRtnSql, lTag, false);

    var sql = system.functions.str(lRtnSql);
    return sql;
}

function getTagByRecord(record)
{
    var lVoid    = new SCDatum();
    var lRtnCode = new SCDatum();
    var lTag     = new SCDatum();
    lVoid = system.functions.rtecall("tag", lRtnCode, lTag, record);
    
    return system.functions.str(lTag);
}

function getQueryByTag(lTag)
{
    var tableName = getFilenameByTag(lTag);
    var dbdict = new SCFile("dbdict");
    var sql = new String();
    if (dbdict.doSelect("name=\"" + tableName + "\"") == RC_SUCCESS)
    {
	    var lInitedFile = new SCFile(tableName);
	    var lVoid    = new SCDatum();
	    var lRtnCode = new SCDatum();
	    var lRtnSql  = new SCDatum();
	    lVoid = system.functions.rtecall("tagquery", lRtnCode, lInitedFile, lRtnSql, lTag, false);
	    
	    sql = system.functions.str(lRtnSql);
    }
    
    return sql;
}

function getFilenameByTag(lTag)
{
    return lTag.substring(0, lTag.indexOf(";"));
}

// Delete a record by get it using query
function deleteByRecord(lRecord)
{
    var sql = getQueryByRecord(lRecord);
    var fRecord = new SCFile(system.functions.filename(lRecord));
    if (fRecord.doSelect(sql) == RC_SUCCESS)
    {
        if (fRecord.doRemove() == RC_SUCCESS)
            return true;
    }
    
    return false;
}</script>
    <package type="string">ScAPI</package>
    <sysmodtime type="dateTime">11/11/14 20:03:25</sysmodtime>
    <sysmoduser type="string">shiji.shu</sysmoduser>
    <sysmodcount type="decimal">10</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
