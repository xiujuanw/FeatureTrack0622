<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;DataService&quot;" recordid="DataService">
    <name type="string">DataService</name>
    <script type="string">var $ = lib.c.$;

var Db2Adaptor = $({
    escapeField: function (field) {
        return "\"" + field + "\"";
    }
});

var SqlserverAdaptor = $({
    escapeField: function (field) {
        return "[" + field + "]";
    }
});

var OracleAdaptor = $({
    escapeField: function (field) {
        return "\"" + field + "\"";
    }
});

var PostgresqlAdaptor = $({
    escapeField: function (field) {
        return "\"" + field + "\"";
    }
});

var adaptors = {
    "sqlserver": new SqlserverAdaptor(),
    "db2": new Db2Adaptor(),
    "oracle": new OracleAdaptor(),
    "postgresql": new PostgresqlAdaptor() 
};

function getAdaptor(name) {
	if ($.contains(name, "sqlserver")) {
		return adaptors["sqlserver"];
	} else if ($.contains(name, "db2")) {
		return adaptors["db2"];
	} else if ($.contains(name, "postgresql")) {
		return adaptors["postgresql"];
	} else {
		return adaptors["oracle"];
	}
}

var DataService = $(new function () {
    var dbdictService = $("#dbdictService");

    return {
        escapeField: function(dbdict, field){
	    	var dbType = dbdict["sql.tables"][0]["sql.db.type"];
	    	 
			var adaptor = getAdaptor(dbType);
	    	return adaptor.escapeField(field);
	    },
        updateWithoutTrigger: function (file) {
            var ret;
			var result = true;
            system.functions.rtecall("trigger", ret, 0);
            try {
                file.doSave();
            } catch (e) {
                print(e);
                result = false;
            }
            system.functions.rtecall("trigger", ret, 1);
            return result;

        },
        getUpdateSql: function (fileName, fieldPath, newValue, oldValue) {
            var dbdict = $(fileName).dbdict();
            var dbType = dbdict["sql.tables"][0]["sql.db.type"];
            var adaptor = getAdaptor(dbType);

            var descriptorMeta = dbdictService
                .getDescriptorMeta(dbdict["field"]);
            var fieldMeta = dbdictService.getFieldMeta(fieldPath,
                descriptorMeta);
            var field = fieldMeta.field;
            var fieldType = field["type"];

            var sqlFieldName = field["sql.field.options"]["sql.column.name"];
            if (sqlFieldName == null) {
                return null;
            }

            var tableAlias = field["sql.field.options"]["sql.table.alias"];
            var table = dbdictService.getTableByAlias(dbdict["sql.tables"],
                tableAlias);

            var sql = "update " + adaptor.escapeField(table["sql.table.name"]) + " set " + adaptor.escapeField(sqlFieldName) + " = ";
            if (fieldType == $.Character) {
                sql += "'" + newValue + "'";
            } else {
                sql += newValue;
            }

            var whereCond = "";

            if (oldValue === undefined) {
                whereCond = "";
            } else {
                whereCond = " where ";
                if (oldValue == null) {
                    whereCond += adaptor.escapeField(sqlFieldName) + " is null";
                } else {
                    whereCond += adaptor.escapeField(sqlFieldName) + " = ";
                    if (fieldType == $.Character) {
                        whereCond += "'" + oldValue + "'";
                    } else {
                        whereCond += oldValue;
                    }
                }
            }

            sql += whereCond;
            return sql;
        },
        executeSQL: function (statement) {
            try {
                $.callrad("SQLexecute", {
                    "values": [statement, "commit"]
                });
                return true;
            } catch (e) {
                return false;
            }
        }
    };

});

function getClass() {
    return DataService;
}</script>
    <package type="string">BaseUtilities</package>
    <sysmodtime type="dateTime">04/18/17 19:07:42</sysmodtime>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodcount type="decimal">2</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
