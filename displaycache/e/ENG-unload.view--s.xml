<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="displaycache">
  <record id="language=&quot;ENG&quot; and screen.id=&quot;unload.view&quot;" recordid="ENG - unload.view">
    <unl>kC0LdW5sb2FkLnZpZXcvHy8vL5AtC3VubG9hZC52aWV3K0VOR90IJEwudGl0
bGXdCSRMLmZvcm1hdEE/kICBTy+RLQZyZXR1cm6QTy8vLGxlZnQfH5EtC3Vu
bG9hZC52aWV3T0EVLQZmYWxjb249CEHPdv7vqIiJTy9PkU+AERITExQVFxkI
GQkZChkLGQ0ZDhnSGdMZ1BoCWRoCWhoDjRoD5xoD7xoD8BoTiBoTiRoTihoT
ixoUABoUChoUFBoUHhoUKIGAK0FkZCpPSy0VQ2FuY2VsO0RvbmUgU2VhcmNo
aW5nLRNCYWNrO0RvbmUgU2VhcmNoaW5nLFNhdmUtBkRlbGV0ZS0HUHJvY2Vl
ZCxGaW5kLEZpbGwsTmV4dC0IUHJldmlvdXMtGEdlbmVyYXRlIEV4cG9ydCBT
Y2hlZHVsZS0XR2VuZXJhdGUgUHVyZ2UgU2NoZWR1bGUtD1ZhbGlkaXR5IExv
b2t1cC0NRXhwb3J0L1VubG9hZC0ISVIgUXVlcnktGFJldmlzaW9uPkNyZWF0
ZSBSZXZpc2lvbi0XUmV2aXNpb24+VmlldyBSZXZpc2lvbnMtCFZhbGlkYXRl
LE1lbnUtF0FkZCBVc2VyIHRvIE1lbWJlciBMaXN0LRlBZGQgVXNlciB0byBB
cHByb3ZlciBMaXN0LQhNYXNzIEFkZC0LTWFzcyBVcGRhdGUtC01hc3MgRGVs
ZXRlLQtNYXNzIFVubG9hZC0HUmVmcmVzaC0OTW9kaWZ5IENvbHVtbnMtD0V4
cG9ydCB0byBFeGNlbC0TRXhwb3J0IHRvIFRleHQgRmlsZS0MU2F2ZSBBcyBW
aWV3gYCkqXupF/thZGTdBiRMLmVudqCgqQmpN90IJEwuZmlsZWSgLQZkYmRp
Y3SgoKl7qRf9BnVwZGF0Zd0GJEwuZW52oKCpe6kX/QZ1cGRhdGXdBiRMLmVu
dqCgpal7qRf9BnVwZGF0Zd0GJEwuZW52oKCgqXupF/0GdXBkYXRl3QYkTC5l
bnagoKSkqXupF/0GZGVsZXRl3QYkTC5lbnagoKkJqTfdCCRMLmZpbGVkoC0G
ZGJkaWN0oKCpCd0HJEwubW9kZSthZGSgoEGkqXupF/xmaW5k3QYkTC5lbnag
oN0LJEwuaGFzLmxpbmugpKl7qRf8ZmlsbN0GJEwuZW52oKDdCyRMLmhhcy5s
aW5roN0HJEwubXVsdN0HJEwubXVsdKSpe6kX/QZ1bmxvYWTdBiRMLmVudqCg
qQipTi0RZGVsdGFfZGF0YV9hZnRlcl+pF/xuYW1l3QckTC5maWxloKARoKCk
qXupF/0GdW5sb2Fk3QYkTC5lbnagoKkIqU4tEWRlbHRhX2RhdGFfYWZ0ZXJf
qRf8bmFtZd0HJEwuZmlsZaCgEaCgqXupF/0PdmFsaWRpdHkubG9va3Vw3QYk
TC5lbnagoKSpe6kX/QZ1bmxvYWTdBiRMLmVudqCgqQmpN90IJEwuZmlsZWSg
LQZkYmRpY3SgoKm6EqCkpalYqRf9DXJldmlzaW9uLmZpbGXdCSRMLm9iamVj
dKCgoKOpC6lOLQhTeXNBZG1pbt0KJGxvLnVjYXBleKAQoKkLqU4tCnByb2dy
YW1tZXLdCiRsby51Y2FwZXigEKCgoKSlqVipF/0NcmV2aXNpb24uZmlsZd0J
JEwub2JqZWN0oKCgo6kLqU4tCFN5c0FkbWlu3QokbG8udWNhcGV4oBCgqQup
Ti0KcHJvZ3JhbW1lct0KJGxvLnVjYXBleKAQoKCgQUGkpKl7qRf9BnVwZGF0
Zd0GJEwuZW52oKCpCd0HJEwubW9kZSthZGSgoN0RJGNhdS5hZGQudG8uZ3Jv
dXCgpKSpe6kX/QZ1cGRhdGXdBiRMLmVudqCgqQndByRMLm1vZGUrYWRkoKDd
GyRjYXUuYWRkLnRvLmFwcHJvdmFscy5ncm91cKCkpKl7qRf9CG1hc3MuYWRk
3QYkTC5lbnagoKkJqTfdCCRMLmZpbGVkoC0GZGJkaWN0oKCpCd0NJEwuZGQu
cmVjbGlzdBCgoKSpe6kX/QttYXNzLnVwZGF0Zd0GJEwuZW52oKCpCd0NJEwu
ZGQucmVjbGlzdBCgoKSkqXupF/0LbWFzcy5kZWxldGXdBiRMLmVudqCgqQmp
N90IJEwuZmlsZWSgLQZkYmRpY3SgoKkJ3Q0kTC5kZC5yZWNsaXN0EKCgpKSp
e6kX/QZ1bmxvYWTdBiRMLmVudqCgqQmpN90IJEwuZmlsZWSgLQZkYmRpY3Sg
oKkJ3Q0kTC5kZC5yZWNsaXN0EKCgqQndDSRMLmRkLnJlY2xpc3QQoKSkpKmb
oKkJqXzdECRMLmRkLnFiZS5mb3JtYXSgEqCgqQndDSRMLmRkLnJlY2xpc3QQ
oKCpfd0OJEwubW9kLmNvbHVtbnNBoKCkqTypqS0MQ2xpZW50T1NOYW1loCtX
aW6gqQndDSRMLmRkLnJlY2xpc3QQoKCkqTypqS0LZW52aXJvbm1lbnSgLQZz
Y2d1aXegqQndDSRMLmRkLnJlY2xpc3QQoKCpCd0NJEwuZGQucmVjbGlzdBCg
gYCAK2FkZIGAKm9rgYAsYmFja4GALQpiYWNrbm9zYXZlgYAsc2F2ZYGALQZk
ZWxldGWBgC0HcHJvY2VlZIGALGZpbmSBgCxmaWxsgYAsbmV4dIGALQhwcmV2
aW91c4GALQpkbyBub3RoaW5ngYAtCmRvIG5vdGhpbmeBgC0OdmFsaWRpdHls
b29rdXCBgC0NZXhwb3J0L3VubG9hZIGALQdpcnF1ZXJ5gYAtDmNyZWF0ZXJl
dmlzaW9ugYAtDHZpZXdyZXZpc2lvboGALQh2YWxpZGF0ZYGALG1lbnWBgC0K
ZG8gbm90aGluZ4GALQpkbyBub3RoaW5ngYAtB21hc3NhZGSBgC0KbWFzc3Vw
ZGF0ZYGALQptYXNzZGVsZXRlgYAtCm1hc3N1bmxvYWSBgC0HcmVmcmVzaIGA
LQpkbyBub3RoaW5ngYAtCmRvIG5vdGhpbmeBgC0KZG8gbm90aGluZ4GALQpp
bmJveC5zYXZlgYGADw8PDw8PDw8PDw+Aot0ZJHVubG9hZC5zY2hlZHVsZS5j
b250aW51ZUCgot0cJHVubG9hZC5zY2hlZHVsZS5pbXBvcnQuZmxhZ0CggYCi
3RkkdW5sb2FkLnNjaGVkdWxlLmNvbnRpbnVlQKCi3RwkdW5sb2FkLnNjaGVk
dWxlLmltcG9ydC5mbGFnQKCBDw8PDw+AgYCBgKkTqQipN90IJEwuZmlsZWSg
LQVncm91cKCpE90RJGNhdS5hZGQudG8uZ3JvdXCiqRf9Bm1lbWJlct0IJEwu
ZmlsZWSgqUupF/0GbWVtYmVy3QgkTC5maWxlZKAREd0SJGNhdS5vcGVyYXRv
ci5uYW1loKCgoKkTqQipN90IJEwuZmlsZWSgLQ1jbTNwcm9maWxlZ3JwoKkT
3REkY2F1LmFkZC50by5ncm91cKKpF/0HbWVtYmVyc90IJEwuZmlsZWSgqUup
F/0HbWVtYmVyc90IJEwuZmlsZWSgERHdEiRjYXUub3BlcmF0b3IubmFtZaCg
oKCpE6kIqTfdCCRMLmZpbGVkoC0KYXNzaWdubWVudKCpE90RJGNhdS5hZGQu
dG8uZ3JvdXCiqRf9CW9wZXJhdG9yc90IJEwuZmlsZWSgqUupF/0Jb3BlcmF0
b3Jz3QgkTC5maWxlZKAREd0SJGNhdS5vcGVyYXRvci5uYW1loKCgoKkTqQip
N90IJEwuZmlsZWSgLQlvY21ncm91cHOgqRPdESRjYXUuYWRkLnRvLmdyb3Vw
oqkX/QdtZW1iZXJz3QgkTC5maWxlZKCpS6kX/QdtZW1iZXJz3QgkTC5maWxl
ZKAREd0SJGNhdS5vcGVyYXRvci5uYW1loKCgoKkTqQipN90IJEwuZmlsZWSg
LQljbTNncm91cHOgqRPdESRjYXUuYWRkLnRvLmdyb3VwoqkX/QdtZW1iZXJz
3QgkTC5maWxlZKCpS6kX/QdtZW1iZXJz3QgkTC5maWxlZKAREd0SJGNhdS5v
cGVyYXRvci5uYW1loKCgoIGAqROpCKk33QgkTC5maWxlZKAtCW9jbWdyb3Vw
c6CpE90RJGNhdS5hZGQudG8uZ3JvdXCiqRf9CWFwcHJvdmVyc90IJEwuZmls
ZWSgqUupF/0JYXBwcm92ZXJz3QgkTC5maWxlZKAREd0SJGNhdS5vcGVyYXRv
ci5uYW1loKCgoKkTqQipN90IJEwuZmlsZWSgLQljbTNncm91cHOgqRPdESRj
YXUuYWRkLnRvLmdyb3VwoqkX/QlhcHByb3ZlcnPdCCRMLmZpbGVkoKlLqRf9
CWFwcHJvdmVyc90IJEwuZmlsZWSgERHdEiRjYXUub3BlcmF0b3IubmFtZaCg
oKCBgIGAgYCBgIGAgYCi3QckTC5uYW1lqX2pN90OJEwuZGQudHJhdmVyc2Wg
qTfdCCRMLmZpbGVkoKCggYCBgKLdByRMLmhpZGVAoKkTqQipqS0MQ2xpZW50
T1NOYW1loCtXZWKgot0HJEwuaGlkZUGgoIGBgA8PDw8PDw8PDw8PkC0Kd2l6
YXJkLnJ1bk+ALG5hbWWBgC0WdW5sb2FkLnNjaGVkdWxlLmV4cG9ydIGRkC0K
d2l6YXJkLnJ1bk+ALG5hbWWBgC0VdW5sb2FkLnNjaGVkdWxlLnB1cmdlgZEP
Dw8PD5AvT4CBgIGRkC9PgIGAgZGQL0+AgYCBkZAvT4CBgIGRkC9PgIGAgZGQ
L0+AgYCBkZAvT4CBgIGRkC9PgIGAgZGQL0+AgYCBkZAtDnVzLm1vZGlmeS5m
b3JtQIAtBnJlY29yZCxuYW1lgYDdECRMLmRkLnFiZS5mb3JtYXTdByRMLm5h
bWWBkZAtD2RkZS5wbXFiZTJleGNlbECALQZyZWNvcmQsbmFtZYGA3QgkTC5m
aWxlZN0QJEwuZGQucWJlLmZvcm1hdIGRkC0RdXMuZHVtcC5kZWxpbWl0ZWRA
gC0GcmVjb3JkLG5hbWUtCmNvbmQuaW5wdXSBgN0TJEwuZGQudHJhdmVyc2Uu
bGlzdN0QJEwuZGQucWJlLmZvcm1hdN0HJEwuaGlkZYGRgYCBgIBBgYBBgYBB
gYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBB
gYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYBBgYErRU5H
ES0GZmFsY29uPQhBz6+X/kRERIBAQEBAQEFAQEFAQEBAQEBAQEBBQEBAQEBA
QEBAQEBAgYCBgA8PDw8PDw8PDw8PLgZSCXZhciByZWdTdGFydFRpbWUgPSAv
c3lzbW9kdGltZVxzKj49XHMqJy4rPycvZzsKCglmdW5jdGlvbiBnZW5lcmF0
ZVVubG9hZFNjaGVkdWxlKHVubG9hZCwgdW5sb2FkRmlsZSwgcHJvY2Vzc29y
LCBzdGFydFRpbWUpIHsKCSAgICB2YXIgc3RhcnRUaW1lU3RyID0gc3RhcnRU
aW1lID8gKCJzeXNtb2R0aW1lPj0nIiArIHN0YXJ0VGltZSArICInIikgOiBu
dWxsOwoJICAgIHZhciBsbnggPSBmdW5jcy5sbmcodW5sb2FkLnJlY29yZCk7
CgkgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsbng7ICsraSkgewoJICAgICAg
ICBpZiAodW5sb2FkLnJlY29yZFtpXS5maWxlbmFtZSAhPSBudWxsICYmIHVu
bG9hZC5yZWNvcmRbaV0uZmlsZW5hbWUgIT0gIiIpIHsKCSAgICAgICAgICAg
IHZhciBxdWVyeSA9ICIiICsgdW5sb2FkLnJlY29yZFtpXS5xdWVyeTsKCSAg
ICAgICAgICAgIGlmIChxdWVyeS5pbmRleE9mKCJmYWxzZSIpID09IC0xKSB7
CgkgICAgICAgICAgICAgICAgdmFyIG5hbWUgPSAiZGF0YSB1bmxvYWQgIiAr
IHVubG9hZC5uYW1lICsgIiAtICIgKyAoaSArIDEpOwoJICAgICAgICAgICAg
ICAgIHByaW50KCJHZW5lcmF0ZWQgU2NoZWR1bGU6PT0+IiArIG5hbWUpOwoJ
ICAgICAgICAgICAgICAgIHF1ZXJ5ID0gc3RhcnRUaW1lU3RyID8gcXVlcnku
cmVwbGFjZShyZWdTdGFydFRpbWUsIHN0YXJ0VGltZVN0cikgOiBxdWVyeTsK
CSAgICAgICAgICAgICAgICBnZXJhdGVTY2hlZHVsZSh1bmxvYWQucmVjb3Jk
W2ldLmZpbGVuYW1lLCBxdWVyeSwgdW5sb2FkRmlsZSwgcHJvY2Vzc29yLCBu
YW1lKTsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfQoJICAgIH0KCX0KCglm
dW5jdGlvbiBnZXJhdGVTY2hlZHVsZShmaWxlLCBxdWVyeSwgdW5sb2FkRmls
ZSwgcHJvY2Vzc29yLCBuYW1lKSB7CgkgICAgdmFyIGYgPSBuZXcgU0NGaWxl
KCJzY2hlZHVsZSIpOwoKCSAgICBmLl9jbGFzcyA9IHByb2Nlc3NvcjsKCgkg
ICAgZi5leHBpcmF0aW9uID0gbmV3IERhdGUoKTsKCSAgICBmLmFwcGxpY2F0
aW9uID0gInVubG9hZC5iYWNrZ3JvdW5kIjsKCSAgICBmLnN0cmluZ3NbMl0g
PSB1bmxvYWRGaWxlOwoJICAgIGYuc3RyaW5nc1szXSA9IHF1ZXJ5OwoJICAg
IGYuc3RyaW5nc1s0XSA9IGZpbGU7CgkgICAgZi5uYW1lID0gbmFtZTsKCSAg
ICBmLmRvSW5zZXJ0KCk7Cgl9CgoJaWYgKHZhcnNbJyR1bmxvYWQuc2NoZWR1
bGUuY29udGludWUnXSkgewoJICAgIHZhciB1bmxvYWQgPSB2YXJzWyckTC5m
aWxlJ107CgoJICAgIHZhciB1bmxvYWRGaWxlID0gdmFyc1snJHVubG9hZC5z
Y2hlZHVsZS5maWxlJ107CgkgICAgdmFyIHVubG9hZENsYXNzID0gdmFyc1sn
JHVubG9hZC5zY2hlZHVsZS5jbGFzcyddOwoJICAgIHZhciBzdGFydFRpbWUg
PSB2YXJzWyckdW5sb2FkLnN5c21vZHRpbWUuc3RhcnQnXQoKCSAgICBpZiAo
dW5sb2FkRmlsZSAmJiB1bmxvYWRDbGFzcykgewoJICAgICAgICBnZW5lcmF0
ZVVubG9hZFNjaGVkdWxlKHVubG9hZCwgdW5sb2FkRmlsZSwgdW5sb2FkQ2xh
c3MsIHN0YXJ0VGltZSk7CgkgICAgfSBlbHNlIHsKCSAgICAgICAgcHJpbnQo
IlBsZWFzZSBTcGVjaWZ5IHVubG9hZCBmaWxlIGFuZCB1bmxvYWQgc2NoZWR1
bGUgY2xhc3MhIik7CgkgICAgfQoJfS4HfQl2YXIgcmVnU3RhcnRUaW1lID0g
L3N5c21vZHRpbWVccyo+PVxzKicuKz8nL2c7CgoJZnVuY3Rpb24gZ2VuZXJh
dGVVbmxvYWRTY2hlZHVsZSh1bmxvYWQsIHVubG9hZEZpbGUsIHByb2Nlc3Nv
ciwgc3RhcnRUaW1lKSB7CgkgICAgdmFyIHN0YXJ0VGltZVN0ciA9IHN0YXJ0
VGltZSA/ICgic3lzbW9kdGltZT49JyIgKyBzdGFydFRpbWUgKyAiJyIpIDog
bnVsbDsKCSAgICB2YXIgbG54ID0gc3lzdGVtLmZ1bmN0aW9ucy5sbmcodW5s
b2FkLnJlY29yZCk7CgkgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsbng7ICsr
aSkgewoJICAgICAgICBpZiAodW5sb2FkLnJlY29yZFtpXS5maWxlbmFtZSAh
PSBudWxsICYmIHVubG9hZC5yZWNvcmRbaV0uZmlsZW5hbWUgIT0gIiIpIHsK
CSAgICAgICAgICAgIHZhciBxdWVyeSA9ICIiICsgdW5sb2FkLnJlY29yZFtp
XS5xdWVyeTsKCSAgICAgICAgICAgIGlmIChxdWVyeS5pbmRleE9mKCJmYWxz
ZSIpID09IC0xKSB7CgkgICAgICAgICAgICAgICAgdmFyIG5hbWUgPSAiZGF0
YSBwdXJnZSAiICsgdW5sb2FkLm5hbWUgKyAiIC0gIiArIChpICsgMSk7Cgkg
ICAgICAgICAgICAgICAgcHJpbnQoIkdlbmVyYXRlZCBTY2hlZHVsZTo9PT4i
ICsgbmFtZSk7CgkgICAgICAgICAgICAgICAgcXVlcnkgPSBzdGFydFRpbWVT
dHIgPyBxdWVyeS5yZXBsYWNlKHJlZ1N0YXJ0VGltZSwgc3RhcnRUaW1lU3Ry
KSA6IHF1ZXJ5OwoJICAgICAgICAgICAgICAgIGdlcmF0ZVNjaGVkdWxlKHVu
bG9hZC5yZWNvcmRbaV0uZmlsZW5hbWUsIHF1ZXJ5LCB1bmxvYWRGaWxlLCBw
cm9jZXNzb3IsIG5hbWUpOwoJICAgICAgICAgICAgfQoJICAgICAgICB9Cgkg
ICAgfQoJfQoKCWZ1bmN0aW9uIGdlcmF0ZVNjaGVkdWxlKGZpbGUsIHF1ZXJ5
LCB1bmxvYWRGaWxlLCBwcm9jZXNzb3IsIG5hbWUpIHsKCSAgICB2YXIgZiA9
IG5ldyBTQ0ZpbGUoInNjaGVkdWxlIik7CgoJICAgIGYuX2NsYXNzID0gcHJv
Y2Vzc29yOwoKCSAgICBmLmV4cGlyYXRpb24gPSBuZXcgRGF0ZSgpOwoJICAg
IGYuamF2YXNjcmlwdCA9ICJ2YXIgcmV0O1xuZnVuY3MucnRlY2FsbChcInRy
aWdnZXJcIiwgcmV0LCAwKTtcbnZhciBzY2hlZHVsZT12YXJzWyckTC5zY2hl
ZHVsZSddO1xudmFyIGYgPSBuZXcgU0NGaWxlKHNjaGVkdWxlLnN0cmluZ3Nb
NF0pO1xudmFyIHJjPWYuZG9TZWxlY3Qoc2NoZWR1bGUuc3RyaW5nc1szXSk7
XG53aGlsZShyYz09UkNfU1VDQ0VTUyl7XG5cdGYuZG9EZWxldGUoKTtcblx0
cmM9Zi5nZXROZXh0KClcbn1cbnN5c3RlbS5mdW5jdGlvbnMucnRlY2FsbChc
InRyaWdnZXJcIiwgcmV0LCAxKTtcbnByaW50KFwiRmluaXNoIHB1cmdpbmcg
XCIrc2NoZWR1bGUuc3RyaW5nc1s0XSk7IjsKCSAgICBmLnN0cmluZ3NbMl0g
PSB1bmxvYWRGaWxlOwoJICAgIGYuc3RyaW5nc1szXSA9IHF1ZXJ5OwoJICAg
IGYuc3RyaW5nc1s0XSA9IGZpbGU7CgkgICAgZi5uYW1lID0gbmFtZTsKCSAg
ICBmLmRvSW5zZXJ0KCk7Cgl9CgoJaWYgKHZhcnNbJyR1bmxvYWQuc2NoZWR1
bGUuY29udGludWUnXSkgewoJICAgIHZhciB1bmxvYWQgPSB2YXJzWyckTC5m
aWxlJ107CgoJICAgIHZhciB1bmxvYWRGaWxlID0gdmFyc1snJHVubG9hZC5z
Y2hlZHVsZS5maWxlJ107CgkgICAgdmFyIHVubG9hZENsYXNzID0gdmFyc1sn
JHVubG9hZC5zY2hlZHVsZS5jbGFzcyddOwoJICAgIHZhciBzdGFydFRpbWUg
PSB2YXJzWyckdW5sb2FkLnN5c21vZHRpbWUuc3RhcnQnXQoJICAgIGlmICh1
bmxvYWRDbGFzcykgewoJICAgICAgICBnZW5lcmF0ZVVubG9hZFNjaGVkdWxl
KHVubG9hZCwgdW5sb2FkRmlsZSwgdW5sb2FkQ2xhc3MsIHN0YXJ0VGltZSk7
CgkgICAgfSBlbHNlIHsKCSAgICAgICAgcHJpbnQoIlBsZWFzZSBTcGVjaWZ5
IHVubG9hZCBmaWxlIGFuZCB1bmxvYWQgc2NoZWR1bGUgY2xhc3MhIik7Cgkg
ICAgfQoJfYGR</unl>
    <screen.id type="string">unload.view</screen.id>
    <form NullValue="1" type="string"/>
    <txt.bank NullValue="1" type="decimal"/>
    <cursor.field.name NullValue="1" type="string"/>
    <cursor.field.contents NullValue="1" type="string"/>
    <current.scroll NullValue="1" type="string"/>
    <screen type="structure">{["unload.view", "ENG", $L.title, $L.format, true, , {[{}, , ]}, "return", {[, , , "left", , ]}, "unload.view", , true, 5, "falcon", '05/08/07 08:55:19', , , ]}</screen>
    <more.flag NullValue="1" type="boolean"/>
    <ds.opt sctype="array">
      <ds.opt sctype="decimal">1</ds.opt>
      <ds.opt sctype="decimal">2</ds.opt>
      <ds.opt sctype="decimal">3</ds.opt>
      <ds.opt sctype="decimal">3</ds.opt>
      <ds.opt sctype="decimal">4</ds.opt>
      <ds.opt sctype="decimal">5</ds.opt>
      <ds.opt sctype="decimal">7</ds.opt>
      <ds.opt sctype="decimal">8</ds.opt>
      <ds.opt sctype="decimal">9</ds.opt>
      <ds.opt sctype="decimal">10</ds.opt>
      <ds.opt sctype="decimal">11</ds.opt>
      <ds.opt sctype="decimal">13</ds.opt>
      <ds.opt sctype="decimal">14</ds.opt>
      <ds.opt sctype="decimal">210</ds.opt>
      <ds.opt sctype="decimal">211</ds.opt>
      <ds.opt sctype="decimal">212</ds.opt>
      <ds.opt sctype="decimal">601</ds.opt>
      <ds.opt sctype="decimal">602</ds.opt>
      <ds.opt sctype="decimal">909</ds.opt>
      <ds.opt sctype="decimal">999</ds.opt>
      <ds.opt sctype="decimal">1007</ds.opt>
      <ds.opt sctype="decimal">1008</ds.opt>
      <ds.opt sctype="decimal">5000</ds.opt>
      <ds.opt sctype="decimal">5001</ds.opt>
      <ds.opt sctype="decimal">5002</ds.opt>
      <ds.opt sctype="decimal">5003</ds.opt>
      <ds.opt sctype="decimal">5120</ds.opt>
      <ds.opt sctype="decimal">5130</ds.opt>
      <ds.opt sctype="decimal">5140</ds.opt>
      <ds.opt sctype="decimal">5150</ds.opt>
      <ds.opt sctype="decimal">5160</ds.opt>
    </ds.opt>
    <ds.desc sctype="array">
      <ds.desc sctype="string">Add</ds.desc>
      <ds.desc sctype="string">OK</ds.desc>
      <ds.desc sctype="string">Cancel;Done Searching</ds.desc>
      <ds.desc sctype="string">Back;Done Searching</ds.desc>
      <ds.desc sctype="string">Save</ds.desc>
      <ds.desc sctype="string">Delete</ds.desc>
      <ds.desc sctype="string">Proceed</ds.desc>
      <ds.desc sctype="string">Find</ds.desc>
      <ds.desc sctype="string">Fill</ds.desc>
      <ds.desc sctype="string">Next</ds.desc>
      <ds.desc sctype="string">Previous</ds.desc>
      <ds.desc sctype="string">Generate Export Schedule</ds.desc>
      <ds.desc sctype="string">Generate Purge Schedule</ds.desc>
      <ds.desc sctype="string">Validity Lookup</ds.desc>
      <ds.desc sctype="string">Export/Unload</ds.desc>
      <ds.desc sctype="string">IR Query</ds.desc>
      <ds.desc sctype="string">Revision&gt;Create Revision</ds.desc>
      <ds.desc sctype="string">Revision&gt;View Revisions</ds.desc>
      <ds.desc sctype="string">Validate</ds.desc>
      <ds.desc sctype="string">Menu</ds.desc>
      <ds.desc sctype="string">Add User to Member List</ds.desc>
      <ds.desc sctype="string">Add User to Approver List</ds.desc>
      <ds.desc sctype="string">Mass Add</ds.desc>
      <ds.desc sctype="string">Mass Update</ds.desc>
      <ds.desc sctype="string">Mass Delete</ds.desc>
      <ds.desc sctype="string">Mass Unload</ds.desc>
      <ds.desc sctype="string">Refresh</ds.desc>
      <ds.desc sctype="string">Modify Columns</ds.desc>
      <ds.desc sctype="string">Export to Excel</ds.desc>
      <ds.desc sctype="string">Export to Text File</ds.desc>
      <ds.desc sctype="string">Save As View</ds.desc>
    </ds.desc>
    <ds.cond sctype="array">
      <ds.cond sctype="operator">evaluate(add in $L.env) and filename($L.filed)~="dbdict"</ds.cond>
      <ds.cond sctype="operator">evaluate(update in $L.env)</ds.cond>
      <ds.cond sctype="operator">evaluate(update in $L.env)</ds.cond>
      <ds.cond sctype="operator">not  (evaluate(update in $L.env))</ds.cond>
      <ds.cond sctype="operator">evaluate(update in $L.env)</ds.cond>
      <ds.cond sctype="operator">evaluate(delete in $L.env) and filename($L.filed)~="dbdict" and $L.mode~="add"</ds.cond>
      <ds.cond sctype="boolean">true</ds.cond>
      <ds.cond sctype="operator">evaluate(find in $L.env) and $L.has.link</ds.cond>
      <ds.cond sctype="operator">evaluate(fill in $L.env) and $L.has.link</ds.cond>
      <ds.cond sctype="globalVar">$L.mult</ds.cond>
      <ds.cond sctype="globalVar">$L.mult</ds.cond>
      <ds.cond sctype="operator">evaluate(unload in $L.env) and index("delta_data_after_", name in $L.file)=1</ds.cond>
      <ds.cond sctype="operator">evaluate(unload in $L.env) and index("delta_data_after_", name in $L.file)=1</ds.cond>
      <ds.cond sctype="operator">evaluate(validity.lookup in $L.env)</ds.cond>
      <ds.cond sctype="operator">evaluate(unload in $L.env) and filename($L.filed)~="dbdict"</ds.cond>
      <ds.cond sctype="operator">product(2)</ds.cond>
      <ds.cond sctype="operator">not  (null(revision.file in $L.object)) and (index("SysAdmin", $lo.ucapex)&gt;0 or index("programmer", $lo.ucapex)&gt;0)</ds.cond>
      <ds.cond sctype="operator">not  (null(revision.file in $L.object)) and (index("SysAdmin", $lo.ucapex)&gt;0 or index("programmer", $lo.ucapex)&gt;0)</ds.cond>
      <ds.cond sctype="boolean">true</ds.cond>
      <ds.cond sctype="boolean">true</ds.cond>
      <ds.cond sctype="operator">evaluate(update in $L.env) and $L.mode~="add" and $cau.add.to.group</ds.cond>
      <ds.cond sctype="operator">evaluate(update in $L.env) and $L.mode~="add" and $cau.add.to.approvals.group</ds.cond>
      <ds.cond sctype="operator">evaluate(mass.add in $L.env) and filename($L.filed)~="dbdict" and $L.dd.reclist~=0</ds.cond>
      <ds.cond sctype="operator">evaluate(mass.update in $L.env) and $L.dd.reclist~=0</ds.cond>
      <ds.cond sctype="operator">evaluate(mass.delete in $L.env) and filename($L.filed)~="dbdict" and $L.dd.reclist~=0</ds.cond>
      <ds.cond sctype="operator">evaluate(unload in $L.env) and filename($L.filed)~="dbdict" and $L.dd.reclist~=0</ds.cond>
      <ds.cond sctype="operator">$L.dd.reclist~=0</ds.cond>
      <ds.cond sctype="operator">gui() and type($L.dd.qbe.format)~=2 and $L.dd.reclist~=0 and nullsub($L.mod.columns, true)</ds.cond>
      <ds.cond sctype="operator">sysinfo.get("ClientOSName")#"Win" and $L.dd.reclist~=0</ds.cond>
      <ds.cond sctype="operator">sysinfo.get("environment")#"scguiw" and $L.dd.reclist~=0</ds.cond>
      <ds.cond sctype="operator">$L.dd.reclist~=0</ds.cond>
    </ds.cond>
    <ds.actions sctype="array">
      <ds.actions sctype="array">
        <ds.actions sctype="string">add</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">ok</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">back</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">backnosave</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">save</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">delete</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">proceed</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">find</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">fill</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">next</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">previous</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">validitylookup</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">export/unload</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">irquery</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">createrevision</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">viewrevision</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">validate</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">menu</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">massadd</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">massupdate</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">massdelete</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">massunload</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">refresh</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">inbox.save</ds.actions>
      </ds.actions>
    </ds.actions>
    <ds.exps sctype="array">
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="array">
        <ds.exps sctype="operator">$unload.schedule.continue=false</ds.exps>
        <ds.exps sctype="operator">$unload.schedule.import.flag=false</ds.exps>
      </ds.exps>
      <ds.exps sctype="array">
        <ds.exps sctype="operator">$unload.schedule.continue=false</ds.exps>
        <ds.exps sctype="operator">$unload.schedule.import.flag=false</ds.exps>
      </ds.exps>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="unknown"/>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array">
        <ds.exps sctype="operator">if (filename($L.filed)="group") then if $cau.add.to.group then (member in $L.filed=insert(member in $L.filed, 1, 1, $cau.operator.name))</ds.exps>
        <ds.exps sctype="operator">if (filename($L.filed)="cm3profilegrp") then if $cau.add.to.group then (members in $L.filed=insert(members in $L.filed, 1, 1, $cau.operator.name))</ds.exps>
        <ds.exps sctype="operator">if (filename($L.filed)="assignment") then if $cau.add.to.group then (operators in $L.filed=insert(operators in $L.filed, 1, 1, $cau.operator.name))</ds.exps>
        <ds.exps sctype="operator">if (filename($L.filed)="ocmgroups") then if $cau.add.to.group then (members in $L.filed=insert(members in $L.filed, 1, 1, $cau.operator.name))</ds.exps>
        <ds.exps sctype="operator">if (filename($L.filed)="cm3groups") then if $cau.add.to.group then (members in $L.filed=insert(members in $L.filed, 1, 1, $cau.operator.name))</ds.exps>
      </ds.exps>
      <ds.exps sctype="array">
        <ds.exps sctype="operator">if (filename($L.filed)="ocmgroups") then if $cau.add.to.group then (approvers in $L.filed=insert(approvers in $L.filed, 1, 1, $cau.operator.name))</ds.exps>
        <ds.exps sctype="operator">if (filename($L.filed)="cm3groups") then if $cau.add.to.group then (approvers in $L.filed=insert(approvers in $L.filed, 1, 1, $cau.operator.name))</ds.exps>
      </ds.exps>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array">
        <ds.exps sctype="operator">$L.name=nullsub(filename($L.dd.traverse), filename($L.filed))</ds.exps>
      </ds.exps>
      <ds.exps sctype="array"/>
      <ds.exps sctype="array">
        <ds.exps sctype="operator">$L.hide=false</ds.exps>
        <ds.exps sctype="operator">if (sysinfo.get("ClientOSName")="Web") then ($L.hide=true)</ds.exps>
      </ds.exps>
    </ds.exps>
    <ds.rads sctype="array">
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="structure">
        <application type="string">wizard.run</application>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array">
          <parms sctype="string">name</parms>
        </parms>
        <values sctype="array">
          <values sctype="string">unload.schedule.export</values>
        </values>
      </ds.rads>
      <ds.rads sctype="structure">
        <application type="string">wizard.run</application>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array">
          <parms sctype="string">name</parms>
        </parms>
        <values sctype="array">
          <values sctype="string">unload.schedule.purge</values>
        </values>
      </ds.rads>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="unknown"/>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms sctype="array"/>
        <values sctype="array"/>
      </ds.rads>
      <ds.rads sctype="structure">
        <application type="string">us.modify.form</application>
        <thread type="boolean">false</thread>
        <parms sctype="array">
          <parms sctype="string">record</parms>
          <parms sctype="string">name</parms>
        </parms>
        <values sctype="array">
          <values sctype="globalVar">$L.dd.qbe.format</values>
          <values sctype="globalVar">$L.name</values>
        </values>
      </ds.rads>
      <ds.rads sctype="structure">
        <application type="string">dde.pmqbe2excel</application>
        <thread type="boolean">false</thread>
        <parms sctype="array">
          <parms sctype="string">record</parms>
          <parms sctype="string">name</parms>
        </parms>
        <values sctype="array">
          <values sctype="globalVar">$L.filed</values>
          <values sctype="globalVar">$L.dd.qbe.format</values>
        </values>
      </ds.rads>
      <ds.rads sctype="structure">
        <application type="string">us.dump.delimited</application>
        <thread type="boolean">false</thread>
        <parms sctype="array">
          <parms sctype="string">record</parms>
          <parms sctype="string">name</parms>
          <parms sctype="string">cond.input</parms>
        </parms>
        <values sctype="array">
          <values sctype="globalVar">$L.dd.traverse.list</values>
          <values sctype="globalVar">$L.dd.qbe.format</values>
          <values sctype="globalVar">$L.hide</values>
        </values>
      </ds.rads>
    </ds.rads>
    <ds.exps.1 NullValue="1" sctype="array">
      <ds.exps.1 NullValue="1" type="expression"/>
    </ds.exps.1>
    <ds.a.options sctype="array">
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
    </ds.a.options>
    <language type="string">ENG</language>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:52:32</sysmodtime>
    <ds.mod sctype="array">
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">true</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">true</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">true</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
    </ds.mod>
    <ds.javascript.pre NullValue="1" sctype="array">
      <ds.javascript.pre NullValue="1" type="string"/>
    </ds.javascript.pre>
    <ds.javascript.post sctype="array">
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="unknown"/>
      <ds.javascript.post sctype="string">	var regStartTime = /sysmodtime\s*&gt;=\s*'.+?'/g;

	function generateUnloadSchedule(unload, unloadFile, processor, startTime) {
	    var startTimeStr = startTime ? ("sysmodtime&gt;='" + startTime + "'") : null;
	    var lnx = funcs.lng(unload.record);
	    for (var i = 0; i &lt; lnx; ++i) {
	        if (unload.record[i].filename != null &amp;&amp; unload.record[i].filename != "") {
	            var query = "" + unload.record[i].query;
	            if (query.indexOf("false") == -1) {
	                var name = "data unload " + unload.name + " - " + (i + 1);
	                print("Generated Schedule:==&gt;" + name);
	                query = startTimeStr ? query.replace(regStartTime, startTimeStr) : query;
	                gerateSchedule(unload.record[i].filename, query, unloadFile, processor, name);
	            }
	        }
	    }
	}

	function gerateSchedule(file, query, unloadFile, processor, name) {
	    var f = new SCFile("schedule");

	    f._class = processor;

	    f.expiration = new Date();
	    f.application = "unload.background";
	    f.strings[2] = unloadFile;
	    f.strings[3] = query;
	    f.strings[4] = file;
	    f.name = name;
	    f.doInsert();
	}

	if (vars['$unload.schedule.continue']) {
	    var unload = vars['$L.file'];

	    var unloadFile = vars['$unload.schedule.file'];
	    var unloadClass = vars['$unload.schedule.class'];
	    var startTime = vars['$unload.sysmodtime.start']

	    if (unloadFile &amp;&amp; unloadClass) {
	        generateUnloadSchedule(unload, unloadFile, unloadClass, startTime);
	    } else {
	        print("Please Specify unload file and unload schedule class!");
	    }
	}</ds.javascript.post>
      <ds.javascript.post sctype="string">	var regStartTime = /sysmodtime\s*&gt;=\s*'.+?'/g;

	function generateUnloadSchedule(unload, unloadFile, processor, startTime) {
	    var startTimeStr = startTime ? ("sysmodtime&gt;='" + startTime + "'") : null;
	    var lnx = system.functions.lng(unload.record);
	    for (var i = 0; i &lt; lnx; ++i) {
	        if (unload.record[i].filename != null &amp;&amp; unload.record[i].filename != "") {
	            var query = "" + unload.record[i].query;
	            if (query.indexOf("false") == -1) {
	                var name = "data purge " + unload.name + " - " + (i + 1);
	                print("Generated Schedule:==&gt;" + name);
	                query = startTimeStr ? query.replace(regStartTime, startTimeStr) : query;
	                gerateSchedule(unload.record[i].filename, query, unloadFile, processor, name);
	            }
	        }
	    }
	}

	function gerateSchedule(file, query, unloadFile, processor, name) {
	    var f = new SCFile("schedule");

	    f._class = processor;

	    f.expiration = new Date();
	    f.javascript = "var ret;\nfuncs.rtecall(\"trigger\", ret, 0);\nvar schedule=vars['$L.schedule'];\nvar f = new SCFile(schedule.strings[4]);\nvar rc=f.doSelect(schedule.strings[3]);\nwhile(rc==RC_SUCCESS){\n\tf.doDelete();\n\trc=f.getNext()\n}\nsystem.functions.rtecall(\"trigger\", ret, 1);\nprint(\"Finish purging \"+schedule.strings[4]);";
	    f.strings[2] = unloadFile;
	    f.strings[3] = query;
	    f.strings[4] = file;
	    f.name = name;
	    f.doInsert();
	}

	if (vars['$unload.schedule.continue']) {
	    var unload = vars['$L.file'];

	    var unloadFile = vars['$unload.schedule.file'];
	    var unloadClass = vars['$unload.schedule.class'];
	    var startTime = vars['$unload.sysmodtime.start']
	    if (unloadClass) {
	        generateUnloadSchedule(unload, unloadFile, unloadClass, startTime);
	    } else {
	        print("Please Specify unload file and unload schedule class!");
	    }
	}</ds.javascript.post>
    </ds.javascript.post>
  </record>
</recordset>
