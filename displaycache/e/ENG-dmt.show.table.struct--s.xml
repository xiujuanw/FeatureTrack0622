<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="displaycache">
  <record id="language=&quot;ENG&quot; and screen.id=&quot;dmt.show.table.struct&quot;" recordid="ENG - dmt.show.table.struct">
    <unl>kC0VZG10LnNob3cudGFibGUuc3RydWN0Lx8vLy+QLRVkbXQuc2hvdy50YWJs
ZS5zdHJ1Y3QrRU5H3QgkTC50aXRsZS0VZG10LnNob3cudGFibGUuc3RydWN0
QT+QgIFPL5EvkE8vLyxsZWZ0Hx+RLRVkbXQuc2hvdy50YWJsZS5zdHJ1Y3RP
TxQtB3poYW5ncWk9CEHPohDbjMzNTy4EO3ZhcnMuJExfcHJvbXB0PSJUYWJs
ZSBzdHJ1Y3R1cmUgb2YgeHh4IjsKdmFycy4kTF90aXRsZT0iVGFibGUgc3Ry
dWN0dXJlIGNvbXBhcmFzaW9uIjsKCmlmICgodmFycy4kZG10Q3VyVGFibGVO
YW1lPT1udWxsIHx8IHZhcnMuJGRtdEN1clRhYmxlTmFtZT09IiIpCgkmJiB2
YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xUYWJsZU5hbWUhPW51bGwgJiYgZnVu
Y3MubG5nKHZhcnMuJGRlbHRhTWlncmF0aW9uVG9vbFRhYmxlTmFtZSk+MAoJ
JiYgdmFycy4kZGVsdGFNaWdyYXRpb25Ub29sVGFibGVOYW1lWzBdIT1udWxs
KSB7CgoJdmFycy4kZG10Q3VyVGFibGVOYW1lPXZhcnMuJGRlbHRhTWlncmF0
aW9uVG9vbFRhYmxlTmFtZVswXTsKCXZhcnMuJGRtdEN1clRhYmxlRGVjaXNp
b249dmFycy4kZGVsdGFNaWdyYXRpb25Ub29sRGVjaXNpb25bMF07Cgl2YXJz
LiRkbXRDdXJUYWJsZUNvbW1lbnQ9dmFycy4kZGVsdGFNaWdyYXRpb25Ub29s
Q29tbWVudFswXTsKCQoJLy8gZmluZCBpdHMgdGFibGUgc3RydWN0dXJlCgl2
YXJzLiRkbXRPbGRUYWJsZVN0cnVjdD1saWIuRGVsdGFNaWdyYXRpb25VdGls
LmdldFRhYmxlU3RydWN0dXJlRnJvbVN0cnVjdERlc2NwRmlsZSh2YXJzLiR1
bmxGaWxlUGF0aE5hbWUrdmFycy4kZG10Q3VyVGFibGVOYW1lKyJfdW5sb2Fk
X3N0cnVjdHVyZS50eHQiKTsKCXZhcnMuJGRtdEN1clRhYmxlU3RydWN0PWxp
Yi5EZWx0YU1pZ3JhdGlvblV0aWwuZ2V0VGFibGVTdHJ1Y3R1cmVGcm9tU3Ry
dWN0RGVzY3BGaWxlKHZhcnMuJHVubEZpbGVQYXRoTmFtZSt2YXJzLiRkbXRD
dXJUYWJsZU5hbWUrIl91bmxvYWRfc3RydWN0dXJlX25ldy50eHQiKTsKCgkv
LyBkbyBhIGF1dG8tY29tcGFyZSAKCXZhcnMuJGRtdENvbXBhcmVSZXN1bHQ9
bGliLkRlbHRhTWlncmF0aW9uVXRpbC5nZXRDb21wYXJlUmVzdWx0T2ZTdHJ1
Y3REZXNjcEZpbGUoCgkJdmFycy4kdW5sRmlsZVBhdGhOYW1lK3ZhcnMuJGRt
dEN1clRhYmxlTmFtZSsiX3VubG9hZF9zdHJ1Y3R1cmUudHh0IiwKCQl2YXJz
LiR1bmxGaWxlUGF0aE5hbWUrdmFycy4kZG10Q3VyVGFibGVOYW1lKyJfdW5s
b2FkX3N0cnVjdHVyZV9uZXcudHh0Iik7Cn0KCk+RT4ATGgKpGgKqGgKrGgKs
GgPngYAsQmFjay0QQ2hlY2sgVGhpcyBUYWJsZS0SQ29uZmlybSBUaGlzIFRh
YmxlLQhQcmV2aW91cyxOZXh0LRImQ2xvc2UgQXBwbGljYXRpb26BgEFBQakL
qU7dECRkbXRDdXJUYWJsZU5hbWXdKiRkZWx0YU1pZ3JhdGlvblRvb2xTdHJ1
Y3RDaGFuZ2VkVGFibGVBcnJheaARoKapTt0QJGRtdEN1clRhYmxlTmFtZd0q
JGRlbHRhTWlncmF0aW9uVG9vbFN0cnVjdENoYW5nZWRUYWJsZUFycmF5oKk2
3SokZGVsdGFNaWdyYXRpb25Ub29sU3RydWN0Q2hhbmdlZFRhYmxlQXJyYXmg
oEGBgIAsYmFja4GALQpkbyBub3RoaW5ngYAtCmRvIG5vdGhpbmeBgC0KZG8g
bm90aGluZ4GALQpkbyBub3RoaW5ngYAtBWNsb3NlgYGAgYCBgIGAgEGBgEGB
gEGBgEGBgEGBgEGBgStFTkcRLQZmYWxjb249CEHPr5f+AiIigA9AQEBAgYAP
LgP9Ly9wcmludCgieW91IGxhdW5jaCBkbzogZG10LnNob3cudGFibGUuc3Ry
dWN0X2N1clRhYmxlQ2hhbmdlZCIpOwovLyBmaW5kIGl0cyBwb3NpdGlvbiBp
biAkZGVsdGFNaWdyYXRpb25Ub29sVGFibGVOYW1lCnZhcnMuJGRtdEN1clRh
YmxlRGVjaXNpb249bnVsbDsKdmFycy4kZG10Q3VyVGFibGVDb21tZW50PW51
bGw7CnZhciBpOwpmb3IoaSBpbiB2YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xU
YWJsZU5hbWUpewoJaWYodmFycy4kZG10Q3VyVGFibGVOYW1lPT12YXJzLiRk
ZWx0YU1pZ3JhdGlvblRvb2xUYWJsZU5hbWVbaV0pewoJCXZhcnMuJGRtdEN1
clRhYmxlRGVjaXNpb249dmFycy4kZGVsdGFNaWdyYXRpb25Ub29sRGVjaXNp
b25baV07CgkJdmFycy4kZG10Q3VyVGFibGVDb21tZW50PXZhcnMuJGRlbHRh
TWlncmF0aW9uVG9vbENvbW1lbnRbaV07Cgl9Cn0KCi8vIGZpbmQgaXRzIHRh
YmxlIHN0cnVjdHVyZQp2YXJzLiRkbXRPbGRUYWJsZVN0cnVjdD1saWIuRGVs
dGFNaWdyYXRpb25VdGlsLmdldFRhYmxlU3RydWN0dXJlRnJvbVN0cnVjdERl
c2NwRmlsZSh2YXJzLiR1bmxGaWxlUGF0aE5hbWUrdmFycy4kZG10Q3VyVGFi
bGVOYW1lKyJfdW5sb2FkX3N0cnVjdHVyZS50eHQiKTsKdmFycy4kZG10Q3Vy
VGFibGVTdHJ1Y3Q9bGliLkRlbHRhTWlncmF0aW9uVXRpbC5nZXRUYWJsZVN0
cnVjdHVyZUZyb21TdHJ1Y3REZXNjcEZpbGUodmFycy4kdW5sRmlsZVBhdGhO
YW1lK3ZhcnMuJGRtdEN1clRhYmxlTmFtZSsiX3VubG9hZF9zdHJ1Y3R1cmVf
bmV3LnR4dCIpOwoKLy8gZG8gYSBhdXRvLWNvbXBhcmUgCnZhcnMuJGRtdENv
bXBhcmVSZXN1bHQ9bGliLkRlbHRhTWlncmF0aW9uVXRpbC5nZXRDb21wYXJl
UmVzdWx0T2ZTdHJ1Y3REZXNjcEZpbGUoCgl2YXJzLiR1bmxGaWxlUGF0aE5h
bWUrdmFycy4kZG10Q3VyVGFibGVOYW1lKyJfdW5sb2FkX3N0cnVjdHVyZS50
eHQiLAoJdmFycy4kdW5sRmlsZVBhdGhOYW1lK3ZhcnMuJGRtdEN1clRhYmxl
TmFtZSsiX3VubG9hZF9zdHJ1Y3R1cmVfbmV3LnR4dCIpOy4BOy8vcHJpbnQo
InlvdSBsYXVuY2ggZG86IGRtdC5zaG93LnRhYmxlLnN0cnVjdF9jdXJUYWJs
ZUNvbmZpcm1lZCIpOwpmb3IodmFyIGkgaW4gdmFycy4kZGVsdGFNaWdyYXRp
b25Ub29sVGFibGVOYW1lKXsKCWlmKHZhcnMuJGRtdEN1clRhYmxlTmFtZT09
dmFycy4kZGVsdGFNaWdyYXRpb25Ub29sVGFibGVOYW1lW2ldKXsKCQl2YXJz
LiRkZWx0YU1pZ3JhdGlvblRvb2xEZWNpc2lvbltpXT12YXJzLiRkbXRDdXJU
YWJsZURlY2lzaW9uOwoJCXZhcnMuJGRlbHRhTWlncmF0aW9uVG9vbENvbW1l
bnRbaV09dmFycy4kZG10Q3VyVGFibGVDb21tZW50OwoJfQp9Ci4F+y8vcHJp
bnQoInlvdSBsYXVuY2ggZG86IGRtdC5zaG93LnRhYmxlLnN0cnVjdF9wcmV2
VGFibGUiKTsKdmFycy4kZG10T2xkVGFibGVTdHJ1Y3Q9IiI7CnZhcnMuJGRt
dEN1clRhYmxlU3RydWN0PSIiOwp2YXJzLiRkbXRDb21wYXJlUmVzdWx0PSIi
Owp2YXIgaTsKCi8vIGZpbmQgaXRzIHBvc2l0aW9uIGluICRkZWx0YU1pZ3Jh
dGlvblRvb2xTdHJ1Y3RDaGFuZ2VkVGFibGVzCnZhciBwb3NpPS0xOwpmb3Io
aSBpbiB2YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xTdHJ1Y3RDaGFuZ2VkVGFi
bGVBcnJheSl7CglpZih2YXJzLiRkbXRDdXJUYWJsZU5hbWU9PXZhcnMuJGRl
bHRhTWlncmF0aW9uVG9vbFN0cnVjdENoYW5nZWRUYWJsZUFycmF5W2ldKXsK
CQlwb3NpPXBhcnNlSW50KGkpOwoJfQp9CmlmKHBvc2k9PS0xKXsKCXZhcnMu
JGRtdEN1clRhYmxlTmFtZT12YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xTdHJ1
Y3RDaGFuZ2VkVGFibGVBcnJheVswXTsKfQplbHNlIGlmKHBvc2k+MCl7Cgl2
YXJzLiRkbXRDdXJUYWJsZU5hbWU9dmFycy4kZGVsdGFNaWdyYXRpb25Ub29s
U3RydWN0Q2hhbmdlZFRhYmxlQXJyYXlbcG9zaS0xXTsKfQoKLy8gZmluZCBp
dHMgcG9zaXRpb24gaW4gJGRlbHRhTWlncmF0aW9uVG9vbFRhYmxlTmFtZQp2
YXJzLiRkbXRDdXJUYWJsZURlY2lzaW9uPW51bGw7CnZhcnMuJGRtdEN1clRh
YmxlQ29tbWVudD1udWxsOwpmb3IoaSBpbiB2YXJzLiRkZWx0YU1pZ3JhdGlv
blRvb2xUYWJsZU5hbWUpewoJaWYodmFycy4kZG10Q3VyVGFibGVOYW1lPT12
YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xUYWJsZU5hbWVbaV0pewoJCXZhcnMu
JGRtdEN1clRhYmxlRGVjaXNpb249dmFycy4kZGVsdGFNaWdyYXRpb25Ub29s
RGVjaXNpb25baV07CgkJdmFycy4kZG10Q3VyVGFibGVDb21tZW50PXZhcnMu
JGRlbHRhTWlncmF0aW9uVG9vbENvbW1lbnRbaV07Cgl9Cn0KCi8vIGZpbmQg
aXRzIHRhYmxlIHN0cnVjdHVyZQp2YXJzLiRkbXRPbGRUYWJsZVN0cnVjdD1s
aWIuRGVsdGFNaWdyYXRpb25VdGlsLmdldFRhYmxlU3RydWN0dXJlRnJvbVN0
cnVjdERlc2NwRmlsZSh2YXJzLiR1bmxGaWxlUGF0aE5hbWUrdmFycy4kZG10
Q3VyVGFibGVOYW1lKyJfdW5sb2FkX3N0cnVjdHVyZS50eHQiKTsKdmFycy4k
ZG10Q3VyVGFibGVTdHJ1Y3Q9bGliLkRlbHRhTWlncmF0aW9uVXRpbC5nZXRU
YWJsZVN0cnVjdHVyZUZyb21TdHJ1Y3REZXNjcEZpbGUodmFycy4kdW5sRmls
ZVBhdGhOYW1lK3ZhcnMuJGRtdEN1clRhYmxlTmFtZSsiX3VubG9hZF9zdHJ1
Y3R1cmVfbmV3LnR4dCIpOwoKLy8gZG8gYSBhdXRvLWNvbXBhcmUgCnZhcnMu
JGRtdENvbXBhcmVSZXN1bHQ9bGliLkRlbHRhTWlncmF0aW9uVXRpbC5nZXRD
b21wYXJlUmVzdWx0T2ZTdHJ1Y3REZXNjcEZpbGUoCgl2YXJzLiR1bmxGaWxl
UGF0aE5hbWUrdmFycy4kZG10Q3VyVGFibGVOYW1lKyJfdW5sb2FkX3N0cnVj
dHVyZS50eHQiLAoJdmFycy4kdW5sRmlsZVBhdGhOYW1lK3ZhcnMuJGRtdEN1
clRhYmxlTmFtZSsiX3VubG9hZF9zdHJ1Y3R1cmVfbmV3LnR4dCIpOwouBnQv
L3ByaW50KCJ5b3UgbGF1bmNoIGRvOiBkbXQuc2hvdy50YWJsZS5zdHJ1Y3Rf
bmV4dFRhYmxlIik7CnZhcnMuJGRtdE9sZFRhYmxlU3RydWN0PSIiOwp2YXJz
LiRkbXRDdXJUYWJsZVN0cnVjdD0iIjsKdmFycy4kZG10Q29tcGFyZVJlc3Vs
dD0iIjsKLy8gZmluZCBpdHMgcG9zaXRpb24gaW4gJGRlbHRhTWlncmF0aW9u
VG9vbFN0cnVjdENoYW5nZWRUYWJsZXMKdmFyIGk7CnZhciBwb3NpPS0xOwpm
b3IoaSBpbiB2YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xTdHJ1Y3RDaGFuZ2Vk
VGFibGVBcnJheSl7CglpZih2YXJzLiRkbXRDdXJUYWJsZU5hbWU9PXZhcnMu
JGRlbHRhTWlncmF0aW9uVG9vbFN0cnVjdENoYW5nZWRUYWJsZUFycmF5W2ld
KXsKCQlwb3NpPXBhcnNlSW50KGkpOwoJfQp9CmlmKHBvc2k9PS0xKXsKCXZh
cnMuJGRtdEN1clRhYmxlTmFtZT12YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xT
dHJ1Y3RDaGFuZ2VkVGFibGVBcnJheVtmdW5jcy5sbmcodmFycy4kZGVsdGFN
aWdyYXRpb25Ub29sU3RydWN0Q2hhbmdlZFRhYmxlcyktMV07Cn0KZWxzZSBp
Zihwb3NpPGZ1bmNzLmxuZyh2YXJzLiRkZWx0YU1pZ3JhdGlvblRvb2xTdHJ1
Y3RDaGFuZ2VkVGFibGVBcnJheSktMSl7Cglwb3NpKys7Cgl2YXJzLiRkbXRD
dXJUYWJsZU5hbWU9dmFycy4kZGVsdGFNaWdyYXRpb25Ub29sU3RydWN0Q2hh
bmdlZFRhYmxlQXJyYXlbcG9zaV07Cn0KCi8vIGZpbmQgaXRzIHBvc2l0aW9u
IGluICRkZWx0YU1pZ3JhdGlvblRvb2xUYWJsZU5hbWUKdmFycy4kZG10Q3Vy
VGFibGVEZWNpc2lvbj1udWxsOwp2YXJzLiRkbXRDdXJUYWJsZUNvbW1lbnQ9
bnVsbDsKZm9yKGkgaW4gdmFycy4kZGVsdGFNaWdyYXRpb25Ub29sVGFibGVO
YW1lKXsKCWlmKHZhcnMuJGRtdEN1clRhYmxlTmFtZT09dmFycy4kZGVsdGFN
aWdyYXRpb25Ub29sVGFibGVOYW1lW2ldKXsKCQl2YXJzLiRkbXRDdXJUYWJs
ZURlY2lzaW9uPXZhcnMuJGRlbHRhTWlncmF0aW9uVG9vbERlY2lzaW9uW2ld
OwoJCXZhcnMuJGRtdEN1clRhYmxlQ29tbWVudD12YXJzLiRkZWx0YU1pZ3Jh
dGlvblRvb2xDb21tZW50W2ldOwoJfQp9CgovLyBmaW5kIGl0cyB0YWJsZSBz
dHJ1Y3R1cmUKdmFycy4kZG10T2xkVGFibGVTdHJ1Y3Q9bGliLkRlbHRhTWln
cmF0aW9uVXRpbC5nZXRUYWJsZVN0cnVjdHVyZUZyb21TdHJ1Y3REZXNjcEZp
bGUodmFycy4kdW5sRmlsZVBhdGhOYW1lK3ZhcnMuJGRtdEN1clRhYmxlTmFt
ZSsiX3VubG9hZF9zdHJ1Y3R1cmUudHh0Iik7CnZhcnMuJGRtdEN1clRhYmxl
U3RydWN0PWxpYi5EZWx0YU1pZ3JhdGlvblV0aWwuZ2V0VGFibGVTdHJ1Y3R1
cmVGcm9tU3RydWN0RGVzY3BGaWxlKHZhcnMuJHVubEZpbGVQYXRoTmFtZSt2
YXJzLiRkbXRDdXJUYWJsZU5hbWUrIl91bmxvYWRfc3RydWN0dXJlX25ldy50
eHQiKTsKCi8vIGRvIGEgYXV0by1jb21wYXJlIAp2YXJzLiRkbXRDb21wYXJl
UmVzdWx0PWxpYi5EZWx0YU1pZ3JhdGlvblV0aWwuZ2V0Q29tcGFyZVJlc3Vs
dE9mU3RydWN0RGVzY3BGaWxlKAoJdmFycy4kdW5sRmlsZVBhdGhOYW1lK3Zh
cnMuJGRtdEN1clRhYmxlTmFtZSsiX3VubG9hZF9zdHJ1Y3R1cmUudHh0IiwK
CXZhcnMuJHVubEZpbGVQYXRoTmFtZSt2YXJzLiRkbXRDdXJUYWJsZU5hbWUr
Il91bmxvYWRfc3RydWN0dXJlX25ldy50eHQiKTsKCoGAgZE=</unl>
    <screen.id type="string">dmt.show.table.struct</screen.id>
    <form NullValue="1" type="string"/>
    <txt.bank NullValue="1" type="decimal"/>
    <cursor.field.name NullValue="1" type="string"/>
    <cursor.field.contents NullValue="1" type="string"/>
    <current.scroll NullValue="1" type="string"/>
    <screen type="structure">{["dmt.show.table.struct", "ENG", $L.title, "dmt.show.table.struct", true, , {[{}, , ]}, , {[, , , "left", , ]}, "dmt.show.table.struct", , , 4, "zhangqi", '01/30/18 15:47:06', , "vars.$L_prompt=\"Table structure of xxx\";
vars.$L_title=\"Table structure comparasion\";

if ((vars.$dmtCurTableName==null || vars.$dmtCurTableName==\"\")
	&amp;&amp; vars.$deltaMigrationToolTableName!=null &amp;&amp; funcs.lng(vars.$deltaMigrationToolTableName)&gt;0
	&amp;&amp; vars.$deltaMigrationToolTableName[0]!=null) {

	vars.$dmtCurTableName=vars.$deltaMigrationToolTableName[0];
	vars.$dmtCurTableDecision=vars.$deltaMigrationToolDecision[0];
	vars.$dmtCurTableComment=vars.$deltaMigrationToolComment[0];
	
	// find its table structure
	vars.$dmtOldTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+\"_unload_structure.txt\");
	vars.$dmtCurTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+\"_unload_structure_new.txt\");

	// do a auto-compare 
	vars.$dmtCompareResult=lib.DeltaMigrationUtil.getCompareResultOfStructDescpFile(
		vars.$unlFilePathName+vars.$dmtCurTableName+\"_unload_structure.txt\",
		vars.$unlFilePathName+vars.$dmtCurTableName+\"_unload_structure_new.txt\");
}

", ]}</screen>
    <more.flag NullValue="1" type="boolean"/>
    <ds.opt sctype="array">
      <ds.opt sctype="decimal">3</ds.opt>
      <ds.opt sctype="decimal">681</ds.opt>
      <ds.opt sctype="decimal">682</ds.opt>
      <ds.opt sctype="decimal">683</ds.opt>
      <ds.opt sctype="decimal">684</ds.opt>
      <ds.opt sctype="decimal">999</ds.opt>
    </ds.opt>
    <ds.desc sctype="array">
      <ds.desc sctype="string">Back</ds.desc>
      <ds.desc sctype="string">Check This Table</ds.desc>
      <ds.desc sctype="string">Confirm This Table</ds.desc>
      <ds.desc sctype="string">Previous</ds.desc>
      <ds.desc sctype="string">Next</ds.desc>
      <ds.desc sctype="string">&amp;Close Application</ds.desc>
    </ds.desc>
    <ds.cond sctype="array">
      <ds.cond sctype="boolean">true</ds.cond>
      <ds.cond sctype="boolean">true</ds.cond>
      <ds.cond sctype="boolean">true</ds.cond>
      <ds.cond sctype="operator">index($dmtCurTableName, $deltaMigrationToolStructChangedTableArray)&gt;1</ds.cond>
      <ds.cond sctype="operator">index($dmtCurTableName, $deltaMigrationToolStructChangedTableArray)&lt;lng($deltaMigrationToolStructChangedTableArray)</ds.cond>
      <ds.cond sctype="boolean">true</ds.cond>
    </ds.cond>
    <ds.actions sctype="array">
      <ds.actions sctype="array">
        <ds.actions sctype="string">back</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">do nothing</ds.actions>
      </ds.actions>
      <ds.actions sctype="array">
        <ds.actions sctype="string">close</ds.actions>
      </ds.actions>
    </ds.actions>
    <ds.exps NullValue="1" sctype="array">
      <ds.exps NullValue="1" type="expression"/>
    </ds.exps>
    <ds.rads NullValue="1" sctype="array">
      <ds.rads sctype="structure">
        <application NullValue="1" type="string"/>
        <thread NullValue="1" type="boolean"/>
        <parms NullValue="1" sctype="array">
          <parms NullValue="1" type="string"/>
        </parms>
        <values NullValue="1" sctype="array">
          <values NullValue="1" type="string"/>
        </values>
      </ds.rads>
    </ds.rads>
    <ds.exps.1 NullValue="1" sctype="array">
      <ds.exps.1 NullValue="1" type="expression"/>
    </ds.exps.1>
    <ds.a.options sctype="array">
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
      <ds.a.options sctype="array">
        <ds.a.options sctype="boolean">true</ds.a.options>
      </ds.a.options>
    </ds.a.options>
    <language type="string">ENG</language>
    <sysmodcount type="decimal">1</sysmodcount>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodtime type="dateTime">06/15/21 00:52:01</sysmodtime>
    <ds.mod sctype="array">
      <ds.mod sctype="unknown"/>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
      <ds.mod sctype="boolean">false</ds.mod>
    </ds.mod>
    <ds.javascript.pre sctype="array">
      <ds.javascript.pre sctype="unknown"/>
      <ds.javascript.pre sctype="string">//print("you launch do: dmt.show.table.struct_curTableChanged");
// find its position in $deltaMigrationToolTableName
vars.$dmtCurTableDecision=null;
vars.$dmtCurTableComment=null;
var i;
for(i in vars.$deltaMigrationToolTableName){
	if(vars.$dmtCurTableName==vars.$deltaMigrationToolTableName[i]){
		vars.$dmtCurTableDecision=vars.$deltaMigrationToolDecision[i];
		vars.$dmtCurTableComment=vars.$deltaMigrationToolComment[i];
	}
}

// find its table structure
vars.$dmtOldTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure.txt");
vars.$dmtCurTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure_new.txt");

// do a auto-compare 
vars.$dmtCompareResult=lib.DeltaMigrationUtil.getCompareResultOfStructDescpFile(
	vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure.txt",
	vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure_new.txt");</ds.javascript.pre>
      <ds.javascript.pre sctype="string">//print("you launch do: dmt.show.table.struct_curTableConfirmed");
for(var i in vars.$deltaMigrationToolTableName){
	if(vars.$dmtCurTableName==vars.$deltaMigrationToolTableName[i]){
		vars.$deltaMigrationToolDecision[i]=vars.$dmtCurTableDecision;
		vars.$deltaMigrationToolComment[i]=vars.$dmtCurTableComment;
	}
}
</ds.javascript.pre>
      <ds.javascript.pre sctype="string">//print("you launch do: dmt.show.table.struct_prevTable");
vars.$dmtOldTableStruct="";
vars.$dmtCurTableStruct="";
vars.$dmtCompareResult="";
var i;

// find its position in $deltaMigrationToolStructChangedTables
var posi=-1;
for(i in vars.$deltaMigrationToolStructChangedTableArray){
	if(vars.$dmtCurTableName==vars.$deltaMigrationToolStructChangedTableArray[i]){
		posi=parseInt(i);
	}
}
if(posi==-1){
	vars.$dmtCurTableName=vars.$deltaMigrationToolStructChangedTableArray[0];
}
else if(posi&gt;0){
	vars.$dmtCurTableName=vars.$deltaMigrationToolStructChangedTableArray[posi-1];
}

// find its position in $deltaMigrationToolTableName
vars.$dmtCurTableDecision=null;
vars.$dmtCurTableComment=null;
for(i in vars.$deltaMigrationToolTableName){
	if(vars.$dmtCurTableName==vars.$deltaMigrationToolTableName[i]){
		vars.$dmtCurTableDecision=vars.$deltaMigrationToolDecision[i];
		vars.$dmtCurTableComment=vars.$deltaMigrationToolComment[i];
	}
}

// find its table structure
vars.$dmtOldTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure.txt");
vars.$dmtCurTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure_new.txt");

// do a auto-compare 
vars.$dmtCompareResult=lib.DeltaMigrationUtil.getCompareResultOfStructDescpFile(
	vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure.txt",
	vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure_new.txt");
</ds.javascript.pre>
      <ds.javascript.pre sctype="string">//print("you launch do: dmt.show.table.struct_nextTable");
vars.$dmtOldTableStruct="";
vars.$dmtCurTableStruct="";
vars.$dmtCompareResult="";
// find its position in $deltaMigrationToolStructChangedTables
var i;
var posi=-1;
for(i in vars.$deltaMigrationToolStructChangedTableArray){
	if(vars.$dmtCurTableName==vars.$deltaMigrationToolStructChangedTableArray[i]){
		posi=parseInt(i);
	}
}
if(posi==-1){
	vars.$dmtCurTableName=vars.$deltaMigrationToolStructChangedTableArray[funcs.lng(vars.$deltaMigrationToolStructChangedTables)-1];
}
else if(posi&lt;funcs.lng(vars.$deltaMigrationToolStructChangedTableArray)-1){
	posi++;
	vars.$dmtCurTableName=vars.$deltaMigrationToolStructChangedTableArray[posi];
}

// find its position in $deltaMigrationToolTableName
vars.$dmtCurTableDecision=null;
vars.$dmtCurTableComment=null;
for(i in vars.$deltaMigrationToolTableName){
	if(vars.$dmtCurTableName==vars.$deltaMigrationToolTableName[i]){
		vars.$dmtCurTableDecision=vars.$deltaMigrationToolDecision[i];
		vars.$dmtCurTableComment=vars.$deltaMigrationToolComment[i];
	}
}

// find its table structure
vars.$dmtOldTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure.txt");
vars.$dmtCurTableStruct=lib.DeltaMigrationUtil.getTableStructureFromStructDescpFile(vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure_new.txt");

// do a auto-compare 
vars.$dmtCompareResult=lib.DeltaMigrationUtil.getCompareResultOfStructDescpFile(
	vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure.txt",
	vars.$unlFilePathName+vars.$dmtCurTableName+"_unload_structure_new.txt");

</ds.javascript.pre>
    </ds.javascript.pre>
    <ds.javascript.post NullValue="1" sctype="array">
      <ds.javascript.post NullValue="1" type="string"/>
    </ds.javascript.post>
  </record>
</recordset>
