<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="displayscreen">
  <record id="screen.id=&quot;rm.request.view&quot; and language=&quot;ENG&quot;" recordid="rm.request.view - ENG">
    <screen.id type="string">rm.request.view</screen.id>
    <screen.id.copy type="string">rm.request.view</screen.id.copy>
    <language type="string">ENG</language>
    <title type="globalVar">$L.title</title>
    <form type="globalVar">$L.format</form>
    <io type="boolean">true</io>
    <time NullValue="1" type="dateTime"/>
    <initialization sctype="structure">
      <expressions sctype="array">
        <expressions sctype="operator">if null($update.action) then ($update.action={})</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.editable.flag=gui() and active in $L.file</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.appr.query="file.name=\""+str(filename($L.file))+"\" and unique.key=\""+number in $L.file+"\""</expressions>
        <expressions sctype="operator">$L.delegate.name=jscall("ApprovalUtil.checkDelegate", $L.appr.query, str(filename($L.file)))</expressions>
        <expressions sctype="operator">$L.approval.groups=jscall("ApprovalDelegationGroups.addDelegateGroups", approver.of in $G.myGroups, str(filename($L.file)))</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.void=rtecall("intersect", $L.err, $L.approval.intersect, $L.approval.groups, current.pending.groups in $L.file);$L.void=rtecall("intersect", $L.err, $L.retract.intersect, $L.approval.groups, approved.groups in $L.file)</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.can.approve=jscall("security.getRights", "Request", "approvals")</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.upd.control=evaluate($L.allow.input);$L.update.flag=evaluate($L.upd.control) and (evaluate(closed.update in $L.env) and open in $L.filed=false or evaluate($L.tableAccess.update) and open in $L.filed~=false)</expressions>
        <expressions sctype="operator">$L.editable.flag=gui() and $L.update.flag and (open in $L.filed~=false or $L.mode="update")</expressions>
        <expressions sctype="string"/>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.sla.enabled=enable in $G.sla.environment</expressions>
        <expressions sctype="operator">cleanup($recordType)</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">if ($G.ess=true) then ($L.format="ess.browse.request.pink")</expressions>
        <expressions sctype="operator">if ($G.ess=true) then ($L.ignore.transitions=true)</expressions>
      </expressions>
      <msg.condition NullValue="1" type="boolean"/>
      <message NullValue="1" type="string"/>
    </initialization>
    <screen.id.alias type="string">rm.request.view</screen.id.alias>
    <on.enter.key type="string">return</on.enter.key>
    <window.structure sctype="structure">
      <open.window NullValue="1" type="boolean"/>
      <parent.name NullValue="1" type="string"/>
      <window.name NullValue="1" type="string"/>
      <window.position type="string">left</window.position>
      <window.percent NullValue="1" type="decimal"/>
      <window.lines NullValue="1" type="decimal"/>
    </window.structure>
    <screen.id.copy.old type="string">rm.request.view</screen.id.copy.old>
    <more.window NullValue="1" type="boolean"/>
    <user.options type="boolean">true</user.options>
    <sysmodcount type="decimal">83</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">08/16/15 12:02:05</sysmodtime>
    <object.related NullValue="1" type="boolean"/>
    <javascript type="string">lib.RequestService.initSvcCartUserOptionInfo();

vars.$request_caption = funcs.scmsg("caption","request",[vars.$L_file.number]);

vars.$L_title = funcs.scmsg("title","request",[vars.$L_file.number]);
if (funcs.updatestatus(vars.$L_file) == vars.$G_RC_MODIFIED) {
    vars.$L_file.status=vars.$L_file_save.status;
}

vars.$recordType="";

vars.$taskplannerflag=lib.RequestService.getTaskPlannerFlag(vars.$L_file,"Request","editTaskPlanner");

if(vars.$L_file!=null &amp;&amp; vars.$L_file.svcCartId!=null) {
    lib.RequestService.getSvcCartUserOptionInfo(vars.$L_file.number, vars.$L_file.svcCartId);
}

/*
*  QCCR1E114743 "Record is modified since read" Error occur when move request to Fulfillment phase with task planned
*  Add automerge function to make it better to save after sync cost from requestTask
*/
var mergeResult = lib.recordUpdateConflicts.autoMerge();
</javascript>
    <search.only NullValue="1" type="boolean"/>
  </record>
</recordset>
