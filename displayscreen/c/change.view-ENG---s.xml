<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="displayscreen">
  <record id="screen.id=&quot;change.view&quot; and language=&quot;ENG&quot;" recordid="change.view - ENG">
    <screen.id type="string">change.view</screen.id>
    <screen.id.copy type="string">change.view</screen.id.copy>
    <language type="string">ENG</language>
    <title type="globalVar">$L.title</title>
    <form type="globalVar">$L.format</form>
    <io type="globalVar">$L.editable.flag</io>
    <time NullValue="1" type="dateTime"/>
    <initialization sctype="structure">
      <expressions sctype="array">
        <expressions sctype="operator">$L.title=scmsg(805, "cm3", {nullsub(str(number in $L.filed), "")})</expressions>
        <expressions sctype="operator">if (filename($L.filed)="cm3t") then ($L.title=scmsg(806, "cm3", {nullsub(str(number in $L.filed), "")}))</expressions>
        <expressions sctype="operator">$L.cm.enable=enable in $G.cm.control and (cm3.parts in $G.cm.control or cm3.labor in $G.cm.control);$L.appr.query="file.name=\""+str(filename($L.filed))+"\" and unique.key=\""+number in $L.filed+"\""</expressions>
        <expressions sctype="operator">$L.delegate.name=jscall("ApprovalUtil.checkDelegate", $L.appr.query, str(filename($L.filed)));$L.approval.groups=jscall("ApprovalDelegationGroups.addDelegateGroups", approver.of in $G.myGroups+{operator()}, str(filename($L.filed)))</expressions>
        <expressions sctype="operator">$L.void=rtecall("intersect", $L.err, $L.approval.intersect, $L.approval.groups, current.pending.groups in $L.filed);$L.void=rtecall("intersect", $L.err, $L.retract.intersect, $L.approval.groups, approved.groups in $L.filed)</expressions>
        <expressions sctype="operator">$L.upd.control=evaluate($L.allow.input);$L.update.flag=evaluate($L.upd.control) and (evaluate(closed.update in $L.env) and open in $L.filed=false or evaluate($L.tableAccess.update) and open in $L.filed~=false)</expressions>
        <expressions sctype="operator">$L.editable.flag=gui() and $L.update.flag and (open in $L.filed~=false or $L.mode="update")</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.sla.enabled=enable in $G.sla.environment</expressions>
        <expressions sctype="operator">$L.parts.enabled=enable in $G.cm.control and (problem.parts in $G.cm.control or problem.labor in $G.cm.control)</expressions>
        <expressions sctype="operator">tclose in $G.displaymaster="Exit PM"</expressions>
        <expressions sctype="operator">$L.journal.pm=journal.pm in $G.pm.global.environment</expressions>
        <expressions sctype="operator">if (not  (null(activitylog.file.name in $L.object))) then ($L.use.activity=true) else ($L.use.activity=false)</expressions>
        <expressions sctype="operator">$L.can.open.rc=jscall("tableAccess.hasNewAccess", tableAccessProb in $G.rc.environment)</expressions>
        <expressions sctype="operator">$L.can.open.sm=jscall("tableAccess.hasNewAccess", tableAccess in $G.sm.environment)</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.legacy=nullsub(val(jscall("settings.getSettingValue", "Change", "legacy"), 4), false)</expressions>
        <expressions sctype="string"/>
        <expressions sctype="operator">$L.can.approve=evaluate(nullsub(app.control in $L.phase, true)) and jscall("security.getRights", "Change", "approvals")="true"</expressions>
        <expressions sctype="operator">$L.can.reopen=val(nullsub(jscall("security.getRights", "Change", "reopen"), false), 4)</expressions>
        <expressions sctype="operator">$L.allowOpenTasks=nullsub(allow.open.tasks in $L.phase, false)</expressions>
        <expressions sctype="operator">cleanup($recordType)</expressions>
        <expressions sctype="operator">if ($G.ess=true) then ($L.format="ess.browse.change")</expressions>
        <expressions sctype="operator">if ($G.ess=true) then ($L.ignore.transitions=true)</expressions>
        <expressions sctype="operator">$L.void=jscall("nativeCalendar.getCalendar", $L.file)</expressions>
        <expressions sctype="operator">$showimpactbutton=jscall("uCMDBBrowserUrl.showImpact")</expressions>
        <expressions sctype="operator">$enablenativeRC=nullsub(jscall("settings.getSettingValue", "Change", "riskAssess"), false)</expressions>
      </expressions>
      <msg.condition NullValue="1" type="boolean"/>
      <message NullValue="1" type="string"/>
    </initialization>
    <screen.id.alias type="string">change.view</screen.id.alias>
    <on.enter.key type="string">do nothing</on.enter.key>
    <window.structure sctype="structure">
      <open.window NullValue="1" type="boolean"/>
      <parent.name NullValue="1" type="string"/>
      <window.name NullValue="1" type="string"/>
      <window.position type="string">left</window.position>
      <window.percent NullValue="1" type="decimal"/>
      <window.lines NullValue="1" type="decimal"/>
    </window.structure>
    <screen.id.copy.old type="string">change.view</screen.id.copy.old>
    <more.window type="boolean">false</more.window>
    <user.options NullValue="1" type="boolean"/>
    <sysmodcount type="decimal">5</sysmodcount>
    <sysmoduser type="string">zhangqi</sysmoduser>
    <sysmodtime type="dateTime">08/12/20 20:26:51</sysmodtime>
    <object.related NullValue="1" type="boolean"/>
    <javascript type="string">// get CI captions
var tabList=lib.dataModEvent.getTableNames(vars.$L_file.number);
var ciCaptions = lib.tableFunctions.getAllFieldCaptionFromJoinTables(tabList);
vars.$L_cifield_names=ciCaptions[0];
vars.$L_cifield_captions=ciCaptions[1];

vars["$dme.mode.values"]=vars["$dme.mode.values"] == null ? lib.ddmEventUtil.getDmeModeValueList() : vars["$dme.mode.values"];
vars["$dme.mode.values.display"]=vars["$dme.mode.values.display"] == null ? lib.ddmEventUtil.getDmeModeDisplayValueList() : vars["$dme.mode.values.display"];</javascript>
    <search.only NullValue="1" type="boolean"/>
  </record>
</recordset>
